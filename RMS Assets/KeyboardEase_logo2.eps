%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: KeyboardEase logo.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Bubba Rose
%%CreationDate: 2/1/11
%%BoundingBox: 0 0 238 34
%%HiResBoundingBox: 0 0 237.7886 33.5552
%%CropBox: 0 0 237.7886 33.5552
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 20 8%%BeginData: 5592 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4527F87D52FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D527D%527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA87D7D27F8F8277D7DFD08FFA852A8FFFF7E27A8FD12FFA8%7DFD26FFA87DA8FFFF52F8522727277DFD22FF5284F82727F8A859FD08FF%A8F8FFFF7DF87DFD13FFA827FD26FFA820FFFFFF5252FFFFA9FD1BFFA87D%7DA8FD05FF7D7D27F8F827597DA8FFA8AFA8A8A8FF7D27A87DF852A8FFA8%A9A8FFA8FFA8A9A8A8A8FFA8A8A8FFA8FF5352A8FFA8FFA8A8A8AFA8FFA8%FFA8A8A8AFA8AFA8FFA8FFA8A9A8FFA8FFA8FFA8FFA8A8A8FFA8FF7D277D%FFA85227FFA8FFA8A9A8A9A8FFA8FFA8A8A8A9A8FFA8FFA8FFA8A9A8FFA8%FFA8FFA8A87D5252FFFD04A8527DF82727F87D52FFA8FFA8A8A8A9A87D27%52F87DA8FFA8A8A87D272727A8A8A884527DA9A8A852A8A87D2E7D272752%AFA8A9A8A82727277DA8A9A8FF5927272752FFA8AF5284A852277DFD04A8%2727287D27A8A8FF2E52FFFFA8A8A8A9A8A82727277DA8A9A884FD042752%FFA8AFA85227272EFD04A8AFA8A8A8FFA87D7D27F8F8277D7DA8527DFD05%FFA8272784FD05FF7D2752522727FFFFFFF8A8FFFFA8277DFF7D27275252%277DFFFFFF27275252277DFFFFFFA852525227A8FFFF5227522752F87DFF%FF272752522727A8FFFF5227A8A8FD05FFA852525227A8FFFF5227525227%52FFFFFF532752522752FD06FFA827FF597DF82727F88459FF27A8FD05FF%A8F852FD06FF277DFFFFFF277EFFFF527DFFFFA827FFFFA8F87DFFFF5352%FFFF7D27FFFFFF5228FD07FF27A8FFFF522752FFFF7D52FFA827A8FFFF52%F8FFFFFF52272752FD09FF5252FFFF5227FD07FFF8A8FFFFA827A8FD05FF%7D277E7D7D27F8F8277D53A8FFA8FFA8FFA8FF7D27F87DA8FFA8FFA8277D%A87DA8277DA8FF5227A8FF5252A8FF7D27A8FFFF7D27FFFF5927FFA8FF52%52A8FFA87D275227277DFFA85227FFA8FFA8A8A87E27A8A8FF7D277EFFFF%5227A87EFFA8FFA8FF52522752F87DA8FF7D27F852A8FFA8FF7D277DA87E%A8F8A8A8FFA8FFA8AFA8A8527DF82727F87D52FFFFFFA8FFA8FFFFA8277D%F87DFFFFA8FFFD06277DFFFFA827A8A8277DFFFF7D27FFA9FF7D52A9FF52%52FFFFFF7D28FFFF53277D527D2784FFFF5252FFFFA8FFFFFF7D27A8FFFF%A827A8FFFF2852FFFFA8FFA8FF5227527D522752FFA8FFFF7D272752FFFF%A8FD0627A8FFA8FFA8FFFFFFA87D7D27F8F8277D7D84277DFD05FF7D27AF%A8F87DFFFFFF277DFFA8A8A8FD04FF5252A827FFFFFF7D27A8FFFF7E27FF%FF7D27FFFFFF5252FFFF277DFFFFFF527DFFFF522EFD06FFA8F8FFFFFF7D%27A8FFFF5228FD06FF5252FFFFFF2752FD06FF7D27A8FFA8277DFD04A8FD%06FFA852A8527EF82727F8A87DA8F87DFD05FFA8F8FFFFA8F852FFFF2852%A8FFA8FD05FFA827277DFFFFFFA8F852A8FF2752FFFFA82753FF7E2752FF%FF5252FFA87DF87DFFFF2852FD06FFA82752FF7D27F8FFFFFF5252FD05A8%FF5252A8FF7D2752FFFF7D7DAFA8A8F8A8FFFF277DA8FFA8FD07FF7D27A8%7D7D27F8F8275259A8A8A8FFA8A9A8FF7D52A8FFFF7D27A8FFA8FD0527A8%A8A9A8FF282784FFA8FF7D525227F852A8FFA8FF52FD0427A8A8FF7DFD05%277DFFA85228FFA8A9A8FFA8FF532727275252A8FFA852F827F827F852FF%A8FD05277DA8FF52272727F852A8FFA87EF8FD0427A8A8A9A8FFA8A884FF%527DF82727F87D52FFFFFFA9FFA8FFFFFFA8FFA9FFFFFFA8FFFFFF7DA87D%A8A8FFA8FFFF5352FFFFFFA8FFA8FF7DA8A8FFA8FFFFFFA8A87DFD05FFA8%A87DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87EA8FFA8FFA8FFA8A87DA87D%A8A8FFFFA87DA8A8FFA8FFFFFF7DA87DA8A8FFA9FFFFA87DA87DA8A8FFA8%FFFFFFA8FFA87D7D27F8F8277D7DFD1AFFA8A827A8FD5AFF527DF82727F8%7D52FD1AFF52F852FD5BFF7D7D27F8F8277D59A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA9%FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFF527DF827A87DA8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFFD05A8FD%37FF7D7DFF7D7DFFFD04A8FF7DFFA87DFFA87DFF7E7DA8FFFFA87DFF7EA8%A8FFFF7D7DFFA8FFA8FF7DFFFFFFA87DA8A87DFF7DA8A8A87DFFA87D7DFF%A8FFFF7D7DFF7DA8FFA8A8FF7D7DFD37FF2752A85252A87D5227A87E7DFF%7E27FF7D52FF7D527DFFFF5352FFA852FFFFFF5252FF59527DFF59A8FFFF%7D52FF527DFFA827FF7D27A87D5252FF7D7DFF5252FF7D52FF7D7DFFA852%FD36FFA8527DFF27527DA95259FFA827FF7D27A87D27FF52527DFFFF7D27%FFA87DFFFFA85252FF527D53FF28A8FFFF5252FF7D27FFA853FF7D27A87D%5252FF2E52FF5252FF5252A87D52FFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2011-01-16T08:56-05:00</xap:CreateDate>
         <xap:ModifyDate>2011-02-01T16:24:20-05:00</xap:ModifyDate>
         <xap:MetadataDate>2011-02-01T16:24:20-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>36</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAJAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Agf5O/VP0T5t9f0+Xoad6&#xA;XOla/pKGvGv+TXCFL7Je88kIxV59MVh1Uvbgj8cCtfX/ACL/AMtOl/8AB2/9cVeYeWfzG0SLzx+Y&#xA;EXmK+09PLuiPbNpVY7cAK6PzEbKvKUkqNqnfCqn5V81X3nXzVb62JLDy55HsWYwWc4tlutRJFA0i&#xA;t8UcY6r49e+KvUX1PyEg5PdaUo8TJbgficCuTVPIMlSl3pTAdeMlsf1HCrZ1HyGCAbrSgW6AyW+/&#xA;44q5tR8hqCzXWlqo6kyW4H68CsO/NLzloug+XbW90GTS5ruXULS3kUCCb9xLJSQ0FafD37YUMv8A&#xA;0t+X/Ph9c0nn04+pbVr8q4pX/X/Iv/LTpf8Awdv/AFwKptq35fI3Fr3SVbwMtsD+vCq8ah5EIqLn&#xA;SyD0PO3/AK4FWvqv5foaPeaSpO4DSWw/WcKtpqXkJxVLrSmHiJLcj9eKt/pHyHy4/WtL5UrT1Let&#xA;PvwKtXVPILkhbvSmI6gSWxp+OFVzaj5DUFmutLAHUmS3A/XgVhP5u+etC8ueRbrWfLkulXWowTW6&#xA;rEv1ebkjyqrjitT9knfthVGfmNrXluD8tdcu9OvLCLVE06WS2e3eESrKEqCnE8q18MVedeT/AMvz&#xA;rnlbStYu/wAzLyyur+2inntDNB+7d1BZfiYHY+OKvT/JOj+V/LulyWWoeZoPMErymVbu/ktTIgIA&#xA;4KRvx2ruTihPTq/5eqeJvdJBGxBltq/rxSvGoeRCARc6WQdwQ9v/AFwKsbV/y+Q8WvdJVh1Bltgf&#xA;14VXJqXkJxVLrSmHiJLcj9eKufU/IKCr3elKD0LSWw/WcVWnVPIrxO1vc6TK4B4Ay24UtTYFhyp9&#xA;xxVjmg+edBv7+Gzv9HsrASRiV7wT28tsvKFJRHyZYZOYMhVh6YAI612xQyf6/wCRf+WnS/8Ag7f+&#xA;uBL42/OI2h0jyibcxkm31D1DHx6/pGbjyp/k0p7YSoVPyZlVNI83ghjyt9OA4qzdNSgO9AafTiFL&#xA;6w0ix8w2nnbWdYvdcu7zQb2KJNP0U2cwW3dPtMG4fq3avxfZGBWT/pS2/kn/AOkef/mjFXyhqs/l&#xA;6P8APTzRqfmixvLzyla39u9+YxJ9XhuGTjbS3cPGrKP3gFR3p3xV9T6drujXVjDPp5eWykQNbyQW&#xA;8xjKEbceKUpTFXg35h675D1n82tT0j8xtVntfK+l2ls+maafrUUctzMgeSR1hXnyUGgrtTpiqE8u&#xA;ar+WWg/mX5Zj/K7WJWsdUmktte0pPrcqPGIy6SUnUnkGX9nf6MVZz+dN8mlat5R88Kk7Wnl6/K6i&#xA;jRTRotvdr6TS/EgqUJwq3+fXmCDUvKNp5V0v1JNU81XENtZp6Uq/uuQeSXiVDMqr4Yqhv+cgWkH5&#xA;XWFhZtKl5Ff6dFDPJDKqiRG4q1XQA/FviqBvPyD8hWnl26vmfVH81xQSXP6freJN9aCl/UAULGPi&#xA;9sVtlXlDzrqU/wCSltrt1JLNrCaRNcNcGGUq00UblXZlXjuVBO9MVYP5A/J3yB5r8oWHmXzbHf6x&#xA;r+sx/Wrq9Y3i0MhNEQQ/u+KDYdsCsm/IvU7uyh80eXLu7ur6z8v6tJY6Y8sUskiW6iqoxCFtv8r9&#xA;WFWN/mV5l/JTzRrrnUNA1TzHeaaTaXF1YRXSRxOpJMTPGUqw8MVa/ITWNEtfPfmbSdAtdR0/y6LW&#xA;2uINIu1nkeCcnjIwQ83AcUNTiqH8+w+Y9b/PqXR9C1WfSIr7Q4l1CdYpvVFukzc/RjC1Eh5cVcjY&#xA;E03xVPZvyP0PRLzSNX8kz32n61Z3lvJqVxML1xeW3MfWFk5KygspLfZ6/firf5vzt5j8/wDlHyZd&#xA;T3MflnUVnudWtIkmief0acEqFDla9afrxVhP55flT5c8qeRbnUPKMt7pti0kMep6XL9ae3uAZRwf&#xA;9+DxdH40PLpt3wK9h/NTUIH/ACj8xIFmDHSpQC0Eyj+67sUAwqxT8kj+ZcOg+XZr7UrKTyl9Qi9G&#xA;yisbproJ6Y9MeqECch3bkw9vBV6zf+YtK0+ymvb15be0tkMk88kEyoiKKlmYpQDAr528zal+RXmX&#xA;WbrW5fJ+uarJft6h1KCK8ijm/Z5oqMopt4YVZ1/zjj5mN15IurWR7qa0sL+eDTmljllkS1BrFE5V&#xA;W3QdidumKvNNR8l6HovmbWL38zPK2o6zp17eS3Fv5ntJLvhHA71VZoVMTKI08B7Dpir2L8obL8s9&#xA;L0u7n8i3lzd6VeSK7wD6zcJC4XdQCrcW8a74q8w82a/+X3mH82fMdh+Z2pywaDoy28Whaf8A6TEh&#xA;d0Dyu6wrz5CtN6bHArflXXPy80D81/LNj+WGpzS6Jq4uYte08G6lQMkfOJ1SdeXI06rXYYq+jf0p&#xA;bfyT/wDSPP8A80Yqw7XbHznd+f8ARdX0zXJLPyxZRMmpaObO4JnZieR2j4tyHEAk/BQkVqRir5Z/&#xA;OaVX0jygAGHG31EHkrL11Kc7VAr9GEqHfky7LpHm8CNnrb6dUrx2/wByUB3qR+GIUvqXQvJWo6V+&#xA;YGtebGvdUu4dWiWOPSZpIDBCagsRWYggcAI6AcRUb4FZl9duf+rfP/wUH/VXFXnHlTyHqtn548+a&#xA;trOmLdaP5ne3FvaloXYpEjBxKjOF39SmxOFUN5W8k+dfI/myODy2ktz5CvXZrjSbqWMyWTMC1bYm&#xA;RqqW6qSN/mcVQnnLyr54078wrjzr5b0G31yHVLaO01LStQMIZGhUCOWJw0lBRd/86Kph5Z1n8xZd&#xA;dtI9Q/Liy0yzZ/319BPC0kQAJ5KCkdTUU+0MVZz5ksY9d0G/0e+06drS/geCUFoBswpWol7dcCvF&#xA;vyM0fzBqPmWXV9aLavZeT4W0LQ5o1jVC6n99KBK4+MCic1O+FWffnV5X13zl5Oj0TTbSaCd761le&#xA;dmh/dxo/xuAslSVBqB+IwKxy4u/+chjokvlQ6JZXE8kJtB5l9cRr6bJT1DDuvqcOtGpy6YVZzoHl&#xA;RtK/LuHyY1vczQx2D2ElzWBSwlRldgPVNPtnFXn3lqT8+fJGip5XtfLdrrtnYq0WmakbhYT6VT6Y&#xA;kjBYVXwr9PfFWWflL5T8y+WLDVrvX4nudc1+9fUNQFuYfRjd9uEZaXkw9zgVifly0/OHyFNq+naT&#xA;5Ug1qw1DULjULe7a6SF1Fw1eDqofdaeOFU0/Lzyx+Z1r+Yuq+bfN9pAX1HTktRDp7R8UZJQyKeTr&#xA;yoi7tWu/hiqYf4X8yf8AK9f8Yfo6T9D/AKF+o8ucPqet6vKnH1KUp74q9E+u3P8A1b5/+Cg/6q4F&#xA;ecfmb5T84aj5j0Dzh5XteWseX/UX6hdvGkM8Mo+NeSSEhv5dqVwqwz8xfLv55/mRoclpe6ZDoOnQ&#xA;FHTTIpkme6nDrvK5KFUVSStAfiG/iAr1Lz/Y6zq35dazotnpszX15p8ltChaChkZOI3Eh2rhV5/5&#xA;U1389vLnlrTNCg8iwTw6ZbR2yTSXgDP6aheRAFBXwxVlrf4785fl/rukeYtCGiahqEU1pbCCaOdO&#xA;DxgB25vGR8RIpirFvL2ofn7onlux8rWHk+yE+n28dnBqst4rQn0UCCVkAWtVXpyxVPvyW8o+bfKG&#xA;k65BrtsJr3U9Umv1ltmi4H1UQElS6cfiUmgOBUNP5s/Pmyubq0n8m2er2wlk+rXUdysIeAsfTDp+&#xA;9HIL9r3wqs/KXyl5t0nzN5j8z6zokek/p0QiLSLGSJo4zHXlI1XQcnJ8MVS/zF5Q88aF5/1Pzb5a&#xA;8vwa/aa+sY1LTdQaFXilhXijxOGk+Ejrt/YqnXlXWfzDl122TUfy5s9LsiT619BcQtJGACQVBWOp&#xA;rT9rFXpH125/6t8//BQf9VcCsV1ryzrWped9F8xx3+p2dlpMcqS6PC1sILhpOhf973/aqD0HHid8&#xA;VfKX5zOzaR5QBjZKW+o0Lcd/9yU52oT+OEqHo35efkL+Ynlyx8wW99b27vqcVpHbNDOjCtvexzuW&#xA;5cSBwjNPfEKX0j9duf8Aq3z/APBQf9VcCu+u3P8A1b5/+Cg/6q4q767c/wDVvn/4KD/qrirvrtz/&#xA;ANW+f/goP+quKu+u3P8A1b5/+Cg/6q4q767c/wDVvn/4KD/qrirFvPPlnWvM8EENpqer6AsRb1f0&#xA;fJbL6oYUo9ZK7fPCqM8k+Xbbyh5ZstA06wuXtrNSPVdrfnI7Es7tSWnJiammBU9+u3P/AFb5/wDg&#xA;oP8Aqrirvrtz/wBW+f8A4KD/AKq4q767c/8AVvn/AOCg/wCquKu+u3P/AFb5/wDgoP8Aqriqnc6v&#xA;9Vgae5tZIIE3eWSS2RFqabs0oA3xVZPrsVvDHPPA8UMpVYpXltlVi+6hWM1CT2xVcdXpK0JtZBKv&#xA;HlH6ltyHKpWo9Wu/E0+WKqTeYrRZYImjIlugGtYzNahpVPQxj1qsPliq5NegcXBSFmFoSLoiW2Pp&#xA;FRUiSk3w0p3xVT/xPYfVo7qg+qyv6UU/r2npvJv8Ct61C2x2GKoqXU5IYnmms5o4o1LySO9uqqqi&#xA;pZiZaAAYqpDXIikUggcxzqXgcS21HUDkWQ+t8QC71GKtyaysVqbuS2kS1ChzcNJbCPiejczNSnvi&#xA;q6PVjIIzHaSuJV5xFXtzyUU+JaS7jcdMVcNWJ9OlpKfWJEVHt/jIBJC/vd9gTtirVxq4tlD3FrJC&#xA;hrRpJLZQeKl23Mo6IjMfYE4qpt5htVuorRoyt1OoeCAzWokdTWjIvrVYbHcYq2NegZeQhYqEaUsJ&#xA;bWnpoaO/999lTsT2xVza9Atl9eaFhZUDfWjLaiLiTQHn63GlffFVUam5VGFnMVlp6bc7ejVFRx/e&#xA;77YqsXWka6a0W3c3aKHe3ElsZFQ9GKetyA98Vat9ciuY3ktoHnjjJWR45bZ1Vl6hisxoRir5v/MP&#xA;8lfOPmGx8s21tLYWzWkF4OVzdxosomvHuVMPDmXAjlWpphKh9RYFdirsVdirsVdirsVdirsVdirs&#xA;VdirsVYT+c/H/lW+q8vs87Sv910+uQ/7+/df8H8PjtiryP8AMf8AQv8AgjyH/h70P0b+idV+p/4h&#xA;9L0vQ+rR8+Vfg+uf744fD9qnw4qj/wA0v0T6Hl/0v0r9d/QUHp/V/wC/9eo/R31j/L9P67Xlt9qu&#xA;FDKta5f8rU8m/oX0P0R+j46cvTp9X5P6Xp+p8deP2eG/jirGND+q/p783acfrP6P1Drx58frN9yp&#xA;6f7P2f7746/Z+DFKpd/pX/lVPkv6x+ivrv6Uuq/pH0/qPH9HalT1/S/d8uH2f8rjXvirPdc9P/lQ&#xA;eoen6vp/4Vm4fWP77j+jjT1P8v8Am98CsKk/Qn/KltH+u+pw/TD/AFf6t6vL6v8AX5f0j6Ff9I9L&#xA;9H/Wq+t8fGvLfCr0L81vQ/5Vpq3pU9D0YuHpenTh60dOHP8Ad9OnL4fHbEK8wi/R/wDgn8ueH6R9&#xA;Kmoel+g6/Xa/F6nD0/g+xz9Th8NK8P2cUJlpnL6j+UH1X6v6fE8OfL1/S4Jz4c/3XCnHly+OvHh8&#xA;WKp3/wA5D8f8O6BXly/TA9KnHh6v6OvfT9fn8P1fnT16/wC6uWBKjqf6V/6GA0fh9X9D9DWn1+vp&#xA;0rz1Hj6XP959qtOHty2wqoxfoCn5rfUK+p9UuPq/Llx9H6tL9Y+r8tvT+v8Ar8+P7da9sVYm9f8A&#xA;lTPl70fqvL/E3+i/pH/jlcvVn5fWfW/ffV686er8fOnbjiq//nYP+Vbflp+huVPrZ+rcaU/SX1g/&#xA;V/sfD9X4ev8A5Pp9cUMm/wBG/wChll58fX+oyely4V/3mj+xw/e1pWvP93T/AC6YpSPyTX/DfnX1&#xA;/wBHcf0NvT1PqnoevfV/SHp/vPrP2vs/scaYoZbZ/wCAv+Va+X/8efVfR+pnj9Yp6fH1Y+VPR+H7&#xA;fpdfi/m+Llir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:D9CF57C5E022E011AE5DD1F7AA7FF200</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:6EBF8DD8B12FE0118456F5544A6101A0</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>1.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Charcoal</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>75.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Graphite</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Ash</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>45.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Smoke</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>30.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Latte</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>10.000002</xapG:cyan>
                           <xapG:magenta>23.000002</xapG:magenta>
                           <xapG:yellow>33.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Capuccino</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>15.999996</xapG:cyan>
                           <xapG:magenta>37.000000</xapG:magenta>
                           <xapG:yellow>58.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Mochaccino</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>32.000000</xapG:cyan>
                           <xapG:magenta>48.000000</xapG:magenta>
                           <xapG:yellow>76.000000</xapG:yellow>
                           <xapG:black>19.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Mocha</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>42.999996</xapG:cyan>
                           <xapG:magenta>52.000000</xapG:magenta>
                           <xapG:yellow>80.000000</xapG:yellow>
                           <xapG:black>38.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Mars Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Ruby</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pumpkin</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Squash</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Sunshine</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pure Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Peridot</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Little Sprout Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Jade</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Mint Julep</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Emerald</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Sea Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Caribbean Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pure Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Hawaiian Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Twillight Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Starry Night Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Deep Sea Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Fresh Lavender</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Purple</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Amethyst</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Rasberry</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pure Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Red</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Squash</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Pure Yellow</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Green</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Pure Cyan</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Global Deep Sea Blue</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -33.5552 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 33.5552 li
237.789 33.5552 li
237.789 0 li
cp
clp
[1 0 0 1 0 0 ]ct
227.351 11.752 mo
226.448 11.752 225.677 10.9824 225.677 10.0527 cv
225.677 9.15234 226.448 8.38281 227.351 8.38281 cv
228.255 8.38281 229.026 9.15234 229.026 10.0527 cv
229.026 10.9824 228.255 11.752 227.351 11.752 cv
cp
227.351 18.7007 mo
226.448 18.7007 225.677 17.9316 225.677 17.0039 cv
225.677 16.1016 226.448 15.332 227.351 15.332 cv
228.255 15.332 229.026 16.1016 229.026 17.0039 cv
229.026 17.9316 228.255 18.7007 227.351 18.7007 cv
cp
231.896 0 mo
231.896 27.0034 li
230.913 27.0034 li
230.913 0 li
231.896 0 li
cp
237.77 0 mo
237.77 27.0034 li
233.784 27.0034 li
233.784 0 li
237.77 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
23.6792 2.25488 mo
23.6792 1.45215 24.0308 1 24.9341 1 cv
25.8379 1 26.1895 1.45215 26.1895 2.25488 cv
26.1895 8.02832 li
33.8447 1.52734 li
34.146 1.27637 34.4727 1.02539 34.874 1.02539 cv
35.6021 1.02539 36.0791 1.62793 36.0791 2.33008 cv
36.0791 2.75684 35.8027 3.1084 35.5015 3.38477 cv
26.8418 10.7637 li
35.4512 18.1436 li
35.7778 18.4194 36.0791 18.771 36.0791 19.2222 cv
36.0791 19.9253 35.6021 20.5288 34.874 20.5288 cv
34.3472 20.5288 33.9204 20.0757 33.5186 19.7749 cv
26.1895 13.4746 li
26.1895 19.2729 li
26.1895 20.0757 25.8379 20.5288 24.9341 20.5288 cv
24.0308 20.5288 23.6792 20.0757 23.6792 19.2729 cv
23.6792 2.25488 li
cp
f
0.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
23.6792 2.25488 mo
23.6792 1.45215 24.0308 1 24.9341 1 cv
25.8379 1 26.1895 1.45215 26.1895 2.25488 cv
26.1895 8.02832 li
33.8447 1.52734 li
34.146 1.27637 34.4727 1.02539 34.874 1.02539 cv
35.6021 1.02539 36.0791 1.62793 36.0791 2.33008 cv
36.0791 2.75684 35.8027 3.1084 35.5015 3.38477 cv
26.8418 10.7637 li
35.4512 18.1436 li
35.7778 18.4194 36.0791 18.771 36.0791 19.2222 cv
36.0791 19.9253 35.6021 20.5288 34.874 20.5288 cv
34.3472 20.5288 33.9204 20.0757 33.5186 19.7749 cv
26.1895 13.4746 li
26.1895 19.2729 li
26.1895 20.0757 25.8379 20.5288 24.9341 20.5288 cv
24.0308 20.5288 23.6792 20.0757 23.6792 19.2729 cv
23.6792 2.25488 li
cp
0 0 0 0 cmyk
@
41.4521 13.0986 mo
48.4302 13.0986 li
48.4302 11.6426 li
48.4302 11.1904 48.4551 10.8145 48.1289 10.5127 cv
47.2002 9.70996 li
46.8989 9.43359 46.4219 9.40918 46.0454 9.40918 cv
44.0122 9.40918 li
43.5605 9.40918 43.1841 9.40918 42.7822 9.68457 cv
41.9541 10.2871 li
41.6528 10.5127 41.4521 10.6885 41.4521 11.3916 cv
41.4521 13.0986 li
cp
43.46 20.5288 mo
42.4561 20.5288 42.0547 20.5288 41.3013 19.8765 cv
40.2725 18.9722 li
39.3184 18.1182 39.0425 17.5664 39.0425 16.2607 cv
39.0425 11.6172 li
39.0425 10.3379 39.2183 9.58398 40.2222 8.73145 cv
41.0757 8.00293 li
42.2051 7.02441 42.7573 6.99902 43.7363 6.99902 cv
45.9453 6.99902 li
47.125 6.99902 47.6772 7.125 48.606 7.87793 cv
49.5845 8.65527 li
50.689 9.53418 50.8398 10.4629 50.8398 11.793 cv
50.8398 13.7256 li
50.8398 15.1064 50.6138 15.5078 49.1831 15.5078 cv
41.4521 15.5078 li
41.4521 16.3115 li
41.4521 16.5371 41.6279 16.8389 41.8032 17.0146 cv
42.4058 17.667 li
42.7324 18.0186 43.209 18.1182 44.0122 18.1182 cv
49.1831 18.1182 li
49.9863 18.1182 50.8398 18.2939 50.8398 19.3237 cv
50.8398 20.3784 49.8857 20.5288 49.1831 20.5288 cv
43.46 20.5288 li
cp
0 0 0 1 cmyk
f
41.4521 13.0986 mo
48.4302 13.0986 li
48.4302 11.6426 li
48.4302 11.1904 48.4551 10.8145 48.1289 10.5127 cv
47.2002 9.70996 li
46.8989 9.43359 46.4219 9.40918 46.0454 9.40918 cv
44.0122 9.40918 li
43.5605 9.40918 43.1841 9.40918 42.7822 9.68457 cv
41.9541 10.2871 li
41.6528 10.5127 41.4521 10.6885 41.4521 11.3916 cv
41.4521 13.0986 li
cp
43.46 20.5288 mo
42.4561 20.5288 42.0547 20.5288 41.3013 19.8765 cv
40.2725 18.9722 li
39.3184 18.1182 39.0425 17.5664 39.0425 16.2607 cv
39.0425 11.6172 li
39.0425 10.3379 39.2183 9.58398 40.2222 8.73145 cv
41.0757 8.00293 li
42.2051 7.02441 42.7573 6.99902 43.7363 6.99902 cv
45.9453 6.99902 li
47.125 6.99902 47.6772 7.125 48.606 7.87793 cv
49.5845 8.65527 li
50.689 9.53418 50.8398 10.4629 50.8398 11.793 cv
50.8398 13.7256 li
50.8398 15.1064 50.6138 15.5078 49.1831 15.5078 cv
41.4521 15.5078 li
41.4521 16.3115 li
41.4521 16.5371 41.6279 16.8389 41.8032 17.0146 cv
42.4058 17.667 li
42.7324 18.0186 43.209 18.1182 44.0122 18.1182 cv
49.1831 18.1182 li
49.9863 18.1182 50.8398 18.2939 50.8398 19.3237 cv
50.8398 20.3784 49.8857 20.5288 49.1831 20.5288 cv
43.46 20.5288 li
cp
0 0 0 0 cmyk
@
64.998 10.0361 mo
64.998 8.65527 li
64.998 7.82715 65.1738 6.99902 66.2026 6.99902 cv
67.2319 6.99902 67.4077 7.82715 67.4077 8.65527 cv
67.4077 9.63477 li
67.4077 10.2373 67.3574 10.6387 67.1064 11.166 cv
61.0322 24.394 li
60.5049 25.5229 60.229 25.6479 59.1245 25.6479 cv
57.2671 25.6479 li
56.564 25.6479 55.6104 25.4976 55.6104 24.4448 cv
55.6104 23.4155 56.4639 23.2397 57.2671 23.2397 cv
58.9233 23.2397 li
60.7056 19.5503 li
60.5801 19.5503 li
59.5762 19.5503 59.5259 19.0972 59.1494 18.2695 cv
56.1875 11.7178 li
55.8613 10.9902 55.6104 10.4375 55.6104 9.73535 cv
55.6104 8.65527 li
55.6104 7.82715 55.7861 6.99902 56.8149 6.99902 cv
57.8442 6.99902 58.02 7.82715 58.02 8.65527 cv
58.02 10.0361 li
61.2578 17.1396 li
61.7852 17.1396 li
64.998 10.0361 li
cp
0 0 0 1 cmyk
f
64.998 10.0361 mo
64.998 8.65527 li
64.998 7.82715 65.1738 6.99902 66.2026 6.99902 cv
67.2319 6.99902 67.4077 7.82715 67.4077 8.65527 cv
67.4077 9.63477 li
67.4077 10.2373 67.3574 10.6387 67.1064 11.166 cv
61.0322 24.394 li
60.5049 25.5229 60.229 25.6479 59.1245 25.6479 cv
57.2671 25.6479 li
56.564 25.6479 55.6104 25.4976 55.6104 24.4448 cv
55.6104 23.4155 56.4639 23.2397 57.2671 23.2397 cv
58.9233 23.2397 li
60.7056 19.5503 li
60.5801 19.5503 li
59.5762 19.5503 59.5259 19.0972 59.1494 18.2695 cv
56.1875 11.7178 li
55.8613 10.9902 55.6104 10.4375 55.6104 9.73535 cv
55.6104 8.65527 li
55.6104 7.82715 55.7861 6.99902 56.8149 6.99902 cv
57.8442 6.99902 58.02 7.82715 58.02 8.65527 cv
58.02 10.0361 li
61.2578 17.1396 li
61.7852 17.1396 li
64.998 10.0361 li
cp
0 0 0 0 cmyk
@
74.0859 14.7305 mo
74.0859 15.5078 74.186 15.8096 74.814 16.3369 cv
76.1943 17.5166 li
76.4956 17.7676 76.8721 18.1182 77.123 18.1182 cv
78.9556 18.1182 li
79.3066 18.1182 79.5327 18.043 79.7085 17.8926 cv
80.7627 17.0146 li
81.0386 16.7881 81.064 16.2109 81.064 15.7344 cv
81.064 11.4668 li
81.064 10.9902 80.9385 10.6133 80.7373 10.4629 cv
79.6333 9.60938 li
79.4824 9.48438 79.3066 9.40918 79.0557 9.40918 cv
77.374 9.40918 li
77.0479 9.40918 76.646 9.58398 76.3701 9.83496 cv
74.814 11.1904 li
74.4121 11.5176 74.0859 11.8936 74.0859 12.6221 cv
74.0859 14.7305 li
cp
74.0859 8.75586 mo
74.5127 8.3291 li
75.3159 7.52637 75.7925 6.99902 76.897 6.99902 cv
79.5576 6.99902 li
80.1855 6.99902 80.7373 7.35059 81.3398 7.85254 cv
82.1685 8.55566 li
83.1221 9.38379 83.4736 10.0615 83.4736 11.3418 cv
83.4736 16.1855 li
83.4736 17.4658 83.1221 18.1436 82.1685 18.9722 cv
81.3398 19.6753 li
80.7627 20.1519 80.0596 20.5288 79.4575 20.5288 cv
76.9727 20.5288 li
75.9937 20.5288 75.3159 19.9253 74.6382 19.2983 cv
74.0859 18.771 li
74.0859 18.9214 li
74.0859 19.7007 73.835 20.5288 72.8809 20.5288 cv
71.8521 20.5288 71.6763 19.6753 71.6763 18.8472 cv
71.6763 3.68555 li
71.6763 2.85742 71.8521 2.0293 72.8809 2.0293 cv
73.9102 2.0293 74.0859 2.85742 74.0859 3.68555 cv
74.0859 8.75586 li
cp
0 0 0 1 cmyk
f
74.0859 14.7305 mo
74.0859 15.5078 74.186 15.8096 74.814 16.3369 cv
76.1943 17.5166 li
76.4956 17.7676 76.8721 18.1182 77.123 18.1182 cv
78.9556 18.1182 li
79.3066 18.1182 79.5327 18.043 79.7085 17.8926 cv
80.7627 17.0146 li
81.0386 16.7881 81.064 16.2109 81.064 15.7344 cv
81.064 11.4668 li
81.064 10.9902 80.9385 10.6133 80.7373 10.4629 cv
79.6333 9.60938 li
79.4824 9.48438 79.3066 9.40918 79.0557 9.40918 cv
77.374 9.40918 li
77.0479 9.40918 76.646 9.58398 76.3701 9.83496 cv
74.814 11.1904 li
74.4121 11.5176 74.0859 11.8936 74.0859 12.6221 cv
74.0859 14.7305 li
cp
74.0859 8.75586 mo
74.5127 8.3291 li
75.3159 7.52637 75.7925 6.99902 76.897 6.99902 cv
79.5576 6.99902 li
80.1855 6.99902 80.7373 7.35059 81.3398 7.85254 cv
82.1685 8.55566 li
83.1221 9.38379 83.4736 10.0615 83.4736 11.3418 cv
83.4736 16.1855 li
83.4736 17.4658 83.1221 18.1436 82.1685 18.9722 cv
81.3398 19.6753 li
80.7627 20.1519 80.0596 20.5288 79.4575 20.5288 cv
76.9727 20.5288 li
75.9937 20.5288 75.3159 19.9253 74.6382 19.2983 cv
74.0859 18.771 li
74.0859 18.9214 li
74.0859 19.7007 73.835 20.5288 72.8809 20.5288 cv
71.8521 20.5288 71.6763 19.6753 71.6763 18.8472 cv
71.6763 3.68555 li
71.6763 2.85742 71.8521 2.0293 72.8809 2.0293 cv
73.9102 2.0293 74.0859 2.85742 74.0859 3.68555 cv
74.0859 8.75586 li
cp
0 0 0 0 cmyk
@
90.6538 16.0352 mo
90.6538 16.5371 90.8296 16.8633 91.5322 17.4658 cv
92.0596 17.918 92.436 18.1182 93.189 18.1182 cv
95.0967 18.1182 li
95.8496 18.1182 96.2261 17.918 96.7529 17.4658 cv
97.4561 16.8633 97.6318 16.5371 97.6318 16.0352 cv
97.6318 11.4922 li
97.6318 10.9902 97.4561 10.6641 96.7529 10.0615 cv
96.2261 9.60938 95.8496 9.40918 95.0967 9.40918 cv
93.189 9.40918 li
92.436 9.40918 92.0596 9.60938 91.5322 10.0615 cv
90.8296 10.6641 90.6538 10.9902 90.6538 11.4922 cv
90.6538 16.0352 li
cp
88.2441 11.4922 mo
88.2441 9.88574 88.5703 9.33301 89.7754 8.35449 cv
90.9551 7.37598 91.5073 6.99902 93.189 6.99902 cv
95.0967 6.99902 li
96.7783 6.99902 97.3306 7.37598 98.5103 8.35449 cv
99.7144 9.33301 100.042 9.88574 100.042 11.4922 cv
100.042 16.0352 li
100.042 17.6162 99.6392 18.2188 98.3848 19.2729 cv
97.1299 20.3276 96.6274 20.5288 95.0967 20.5288 cv
93.189 20.5288 li
91.6577 20.5288 91.1558 20.3276 89.9009 19.2729 cv
88.6455 18.2188 88.2441 17.6162 88.2441 16.0352 cv
88.2441 11.4922 li
cp
0 0 0 1 cmyk
f
90.6538 16.0352 mo
90.6538 16.5371 90.8296 16.8633 91.5322 17.4658 cv
92.0596 17.918 92.436 18.1182 93.189 18.1182 cv
95.0967 18.1182 li
95.8496 18.1182 96.2261 17.918 96.7529 17.4658 cv
97.4561 16.8633 97.6318 16.5371 97.6318 16.0352 cv
97.6318 11.4922 li
97.6318 10.9902 97.4561 10.6641 96.7529 10.0615 cv
96.2261 9.60938 95.8496 9.40918 95.0967 9.40918 cv
93.189 9.40918 li
92.436 9.40918 92.0596 9.60938 91.5322 10.0615 cv
90.8296 10.6641 90.6538 10.9902 90.6538 11.4922 cv
90.6538 16.0352 li
cp
88.2441 11.4922 mo
88.2441 9.88574 88.5703 9.33301 89.7754 8.35449 cv
90.9551 7.37598 91.5073 6.99902 93.189 6.99902 cv
95.0967 6.99902 li
96.7783 6.99902 97.3306 7.37598 98.5103 8.35449 cv
99.7144 9.33301 100.042 9.88574 100.042 11.4922 cv
100.042 16.0352 li
100.042 17.6162 99.6392 18.2188 98.3848 19.2729 cv
97.1299 20.3276 96.6274 20.5288 95.0967 20.5288 cv
93.189 20.5288 li
91.6577 20.5288 91.1558 20.3276 89.9009 19.2729 cv
88.6455 18.2188 88.2441 17.6162 88.2441 16.0352 cv
88.2441 11.4922 li
cp
0 0 0 0 cmyk
@
108.326 14.4795 mo
107.673 14.4795 106.719 14.6543 106.719 15.5332 cv
106.719 17.1396 li
106.719 17.9434 107.699 18.1182 108.276 18.1182 cv
110.936 18.1182 li
113.597 16.7383 li
113.597 16.2109 li
113.597 14.8809 113.22 14.4795 111.89 14.4795 cv
108.326 14.4795 li
cp
108.351 9.40918 mo
107.648 9.40918 106.694 9.25781 106.694 8.2041 cv
106.694 7.1748 107.547 6.99902 108.351 6.99902 cv
111.665 6.99902 li
112.919 6.99902 113.823 7.125 114.777 8.07813 cv
115.706 9.00684 115.831 9.73535 115.856 10.9395 cv
116.107 19.1226 li
116.132 19.8257 115.781 20.5288 114.977 20.5288 cv
114.35 20.5288 113.722 20.0015 113.748 19.3237 cv
112.091 20.1772 li
111.414 20.5288 111.388 20.5288 110.61 20.5288 cv
108.3 20.5288 li
107.221 20.5288 106.443 20.4019 105.565 19.6753 cv
104.561 18.8472 104.31 17.9678 104.31 16.7129 cv
104.31 15.6592 li
104.31 14.5039 104.585 13.7764 105.49 12.9727 cv
106.318 12.2451 107.247 12.0693 108.3 12.0693 cv
113.471 12.0693 li
113.471 11.5176 li
113.471 9.70996 113.07 9.40918 111.338 9.40918 cv
108.351 9.40918 li
cp
0 0 0 1 cmyk
f
108.326 14.4795 mo
107.673 14.4795 106.719 14.6543 106.719 15.5332 cv
106.719 17.1396 li
106.719 17.9434 107.699 18.1182 108.276 18.1182 cv
110.936 18.1182 li
113.597 16.7383 li
113.597 16.2109 li
113.597 14.8809 113.22 14.4795 111.89 14.4795 cv
108.326 14.4795 li
cp
108.351 9.40918 mo
107.648 9.40918 106.694 9.25781 106.694 8.2041 cv
106.694 7.1748 107.547 6.99902 108.351 6.99902 cv
111.665 6.99902 li
112.919 6.99902 113.823 7.125 114.777 8.07813 cv
115.706 9.00684 115.831 9.73535 115.856 10.9395 cv
116.107 19.1226 li
116.132 19.8257 115.781 20.5288 114.977 20.5288 cv
114.35 20.5288 113.722 20.0015 113.748 19.3237 cv
112.091 20.1772 li
111.414 20.5288 111.388 20.5288 110.61 20.5288 cv
108.3 20.5288 li
107.221 20.5288 106.443 20.4019 105.565 19.6753 cv
104.561 18.8472 104.31 17.9678 104.31 16.7129 cv
104.31 15.6592 li
104.31 14.5039 104.585 13.7764 105.49 12.9727 cv
106.318 12.2451 107.247 12.0693 108.3 12.0693 cv
113.471 12.0693 li
113.471 11.5176 li
113.471 9.70996 113.07 9.40918 111.338 9.40918 cv
108.351 9.40918 li
cp
0 0 0 0 cmyk
@
121.38 8.78125 mo
121.38 7.90234 121.481 6.99902 122.584 6.99902 cv
123.54 6.99902 123.79 7.80273 123.79 8.60547 cv
123.79 9.58398 li
125.672 8.02832 li
126.35 7.47559 127.053 6.99902 127.806 6.99902 cv
129.739 6.99902 li
130.667 6.99902 131.446 7.2998 132.098 7.95313 cv
132.901 8.75586 133.178 9.58398 133.178 10.6885 cv
133.178 11.5176 133.027 12.3701 131.999 12.3701 cv
131.12 12.3701 130.768 11.668 130.768 10.8896 cv
130.768 10.4883 130.768 10.1865 130.517 9.83496 cv
130.215 9.40918 129.638 9.40918 129.061 9.40918 cv
128.358 9.40918 li
127.907 9.40918 127.581 9.63477 127.153 9.98633 cv
123.79 12.7725 li
123.79 18.8726 li
123.79 19.7007 123.614 20.5288 122.584 20.5288 cv
121.556 20.5288 121.38 19.7007 121.38 18.8726 cv
121.38 8.78125 li
cp
0 0 0 1 cmyk
f
121.38 8.78125 mo
121.38 7.90234 121.481 6.99902 122.584 6.99902 cv
123.54 6.99902 123.79 7.80273 123.79 8.60547 cv
123.79 9.58398 li
125.672 8.02832 li
126.35 7.47559 127.053 6.99902 127.806 6.99902 cv
129.739 6.99902 li
130.667 6.99902 131.446 7.2998 132.098 7.95313 cv
132.901 8.75586 133.178 9.58398 133.178 10.6885 cv
133.178 11.5176 133.027 12.3701 131.999 12.3701 cv
131.12 12.3701 130.768 11.668 130.768 10.8896 cv
130.768 10.4883 130.768 10.1865 130.517 9.83496 cv
130.215 9.40918 129.638 9.40918 129.061 9.40918 cv
128.358 9.40918 li
127.907 9.40918 127.581 9.63477 127.153 9.98633 cv
123.79 12.7725 li
123.79 18.8726 li
123.79 19.7007 123.614 20.5288 122.584 20.5288 cv
121.556 20.5288 121.38 19.7007 121.38 18.8726 cv
121.38 8.78125 li
cp
0 0 0 0 cmyk
@
139.354 15.2324 mo
139.354 15.9102 139.354 16.7637 139.73 17.0645 cv
140.458 17.6416 li
140.759 17.8926 141.06 18.1182 141.362 18.1182 cv
143.069 18.1182 li
143.37 18.1182 143.796 17.918 144.249 17.5166 cv
145.628 16.3369 li
145.98 16.0352 146.332 15.7344 146.332 15.2822 cv
146.332 12.2451 li
146.332 11.793 145.98 11.4922 145.628 11.1904 cv
144.249 10.0107 li
143.796 9.60938 143.37 9.40918 143.069 9.40918 cv
141.362 9.40918 li
141.06 9.40918 140.759 9.63477 140.458 9.88574 cv
139.73 10.4629 li
139.354 10.7637 139.354 11.6172 139.354 12.2949 cv
139.354 15.2324 li
cp
143.545 6.99902 mo
144.374 6.99902 145.051 7.45117 145.93 8.3291 cv
146.332 8.75586 li
146.332 3.68555 li
146.332 2.85742 146.507 2.0293 147.536 2.0293 cv
148.565 2.0293 148.741 2.85742 148.741 3.68555 cv
148.741 18.8472 li
148.741 19.6753 148.565 20.5288 147.536 20.5288 cv
146.583 20.5288 146.332 19.7261 146.332 18.9214 cv
146.332 18.771 li
145.804 19.2983 li
145.051 20.0015 144.223 20.5288 143.495 20.5288 cv
141.161 20.5288 li
140.358 20.5288 139.454 19.9761 139.102 19.6753 cv
138.274 18.9722 li
137.27 18.1182 136.944 17.4658 136.944 16.1855 cv
136.944 11.3418 li
136.944 10.0615 137.27 9.40918 138.274 8.55566 cv
139.102 7.85254 li
139.856 7.2002 140.408 6.99902 141.412 6.99902 cv
143.545 6.99902 li
cp
0 0 0 1 cmyk
f
139.354 15.2324 mo
139.354 15.9102 139.354 16.7637 139.73 17.0645 cv
140.458 17.6416 li
140.759 17.8926 141.06 18.1182 141.362 18.1182 cv
143.069 18.1182 li
143.37 18.1182 143.796 17.918 144.249 17.5166 cv
145.628 16.3369 li
145.98 16.0352 146.332 15.7344 146.332 15.2822 cv
146.332 12.2451 li
146.332 11.793 145.98 11.4922 145.628 11.1904 cv
144.249 10.0107 li
143.796 9.60938 143.37 9.40918 143.069 9.40918 cv
141.362 9.40918 li
141.06 9.40918 140.759 9.63477 140.458 9.88574 cv
139.73 10.4629 li
139.354 10.7637 139.354 11.6172 139.354 12.2949 cv
139.354 15.2324 li
cp
143.545 6.99902 mo
144.374 6.99902 145.051 7.45117 145.93 8.3291 cv
146.332 8.75586 li
146.332 3.68555 li
146.332 2.85742 146.507 2.0293 147.536 2.0293 cv
148.565 2.0293 148.741 2.85742 148.741 3.68555 cv
148.741 18.8472 li
148.741 19.6753 148.565 20.5288 147.536 20.5288 cv
146.583 20.5288 146.332 19.7261 146.332 18.9214 cv
146.332 18.771 li
145.804 19.2983 li
145.051 20.0015 144.223 20.5288 143.495 20.5288 cv
141.161 20.5288 li
140.358 20.5288 139.454 19.9761 139.102 19.6753 cv
138.274 18.9722 li
137.27 18.1182 136.944 17.4658 136.944 16.1855 cv
136.944 11.3418 li
136.944 10.0615 137.27 9.40918 138.274 8.55566 cv
139.102 7.85254 li
139.856 7.2002 140.408 6.99902 141.412 6.99902 cv
143.545 6.99902 li
cp
0 0 0 0 cmyk
@
165.862 18.0186 mo
166.514 18.0186 167.117 18.3701 167.117 19.2729 cv
167.117 20.1772 166.514 20.5288 165.862 20.5288 cv
154.717 20.5288 li
154.717 1 li
165.862 1 li
166.514 1 167.117 1.35156 167.117 2.25488 cv
167.117 3.1582 166.514 3.50977 165.862 3.50977 cv
157.227 3.50977 li
157.227 9.50879 li
160.917 9.50879 li
161.569 9.50879 162.172 9.86035 162.172 10.7637 cv
162.172 11.668 161.569 12.0195 160.917 12.0195 cv
157.227 12.0195 li
157.227 18.0186 li
165.862 18.0186 li
cp
0 0 0 1 cmyk
f
165.862 18.0186 mo
166.514 18.0186 167.117 18.3701 167.117 19.2729 cv
167.117 20.1772 166.514 20.5288 165.862 20.5288 cv
154.717 20.5288 li
154.717 1 li
165.862 1 li
166.514 1 167.117 1.35156 167.117 2.25488 cv
167.117 3.1582 166.514 3.50977 165.862 3.50977 cv
157.227 3.50977 li
157.227 9.50879 li
160.917 9.50879 li
161.569 9.50879 162.172 9.86035 162.172 10.7637 cv
162.172 11.668 161.569 12.0195 160.917 12.0195 cv
157.227 12.0195 li
157.227 18.0186 li
165.862 18.0186 li
cp
0 0 0 0 cmyk
@
173.594 14.4795 mo
172.942 14.4795 171.988 14.6543 171.988 15.5332 cv
171.988 17.1396 li
171.988 17.9434 172.967 18.1182 173.543 18.1182 cv
176.205 18.1182 li
178.866 16.7383 li
178.866 16.2109 li
178.866 14.8809 178.489 14.4795 177.159 14.4795 cv
173.594 14.4795 li
cp
173.62 9.40918 mo
172.917 9.40918 171.962 9.25781 171.962 8.2041 cv
171.962 7.1748 172.816 6.99902 173.62 6.99902 cv
176.932 6.99902 li
178.188 6.99902 179.091 7.125 180.045 8.07813 cv
180.973 9.00684 181.099 9.73535 181.125 10.9395 cv
181.375 19.1226 li
181.401 19.8257 181.049 20.5288 180.246 20.5288 cv
179.618 20.5288 178.991 20.0015 179.016 19.3237 cv
177.36 20.1772 li
176.682 20.5288 176.657 20.5288 175.878 20.5288 cv
173.569 20.5288 li
172.49 20.5288 171.711 20.4019 170.833 19.6753 cv
169.829 18.8472 169.579 17.9678 169.579 16.7129 cv
169.579 15.6592 li
169.579 14.5039 169.854 13.7764 170.758 12.9727 cv
171.586 12.2451 172.514 12.0693 173.569 12.0693 cv
178.74 12.0693 li
178.74 11.5176 li
178.74 9.70996 178.338 9.40918 176.606 9.40918 cv
173.62 9.40918 li
cp
0 0 0 1 cmyk
f
173.594 14.4795 mo
172.942 14.4795 171.988 14.6543 171.988 15.5332 cv
171.988 17.1396 li
171.988 17.9434 172.967 18.1182 173.543 18.1182 cv
176.205 18.1182 li
178.866 16.7383 li
178.866 16.2109 li
178.866 14.8809 178.489 14.4795 177.159 14.4795 cv
173.594 14.4795 li
cp
173.62 9.40918 mo
172.917 9.40918 171.962 9.25781 171.962 8.2041 cv
171.962 7.1748 172.816 6.99902 173.62 6.99902 cv
176.932 6.99902 li
178.188 6.99902 179.091 7.125 180.045 8.07813 cv
180.973 9.00684 181.099 9.73535 181.125 10.9395 cv
181.375 19.1226 li
181.401 19.8257 181.049 20.5288 180.246 20.5288 cv
179.618 20.5288 178.991 20.0015 179.016 19.3237 cv
177.36 20.1772 li
176.682 20.5288 176.657 20.5288 175.878 20.5288 cv
173.569 20.5288 li
172.49 20.5288 171.711 20.4019 170.833 19.6753 cv
169.829 18.8472 169.579 17.9678 169.579 16.7129 cv
169.579 15.6592 li
169.579 14.5039 169.854 13.7764 170.758 12.9727 cv
171.586 12.2451 172.514 12.0693 173.569 12.0693 cv
178.74 12.0693 li
178.74 11.5176 li
178.74 9.70996 178.338 9.40918 176.606 9.40918 cv
173.62 9.40918 li
cp
0 0 0 0 cmyk
@
189.76 9.40918 mo
189.258 9.40918 188.405 9.30859 188.405 10.0869 cv
188.405 10.4883 188.706 10.6387 189.057 10.7891 cv
195.083 13.5254 li
196.638 14.2285 197.442 15.207 197.442 16.9385 cv
197.442 19.3745 195.785 20.5288 193.475 20.5288 cv
189.76 20.5288 li
188.505 20.5288 187.652 20.478 186.749 19.7749 cv
186.296 19.4233 185.644 18.9722 185.644 18.3701 cv
185.644 17.6924 186.221 17.165 186.899 17.165 cv
187.276 17.165 187.551 17.29 187.828 17.5918 cv
188.254 18.0684 189.007 18.1182 189.76 18.1182 cv
193.024 18.1182 li
193.877 18.1182 195.032 18.1943 195.032 16.7881 cv
195.032 16.2109 194.329 15.835 193.776 15.583 cv
188.104 12.998 li
186.774 12.3955 185.995 11.6172 185.995 10.0615 cv
185.995 8.15332 187.501 6.99902 189.309 6.99902 cv
193.425 6.99902 li
194.755 6.99902 195.307 7.07422 196.211 7.82715 cv
196.663 8.2041 197.165 8.50488 197.165 9.18262 cv
197.165 9.86035 196.588 10.3877 195.935 10.3877 cv
195.483 10.3877 195.208 10.2119 194.907 9.88574 cv
194.504 9.45898 194.078 9.40918 193.425 9.40918 cv
189.76 9.40918 li
cp
0 0 0 1 cmyk
f
189.76 9.40918 mo
189.258 9.40918 188.405 9.30859 188.405 10.0869 cv
188.405 10.4883 188.706 10.6387 189.057 10.7891 cv
195.083 13.5254 li
196.638 14.2285 197.442 15.207 197.442 16.9385 cv
197.442 19.3745 195.785 20.5288 193.475 20.5288 cv
189.76 20.5288 li
188.505 20.5288 187.652 20.478 186.749 19.7749 cv
186.296 19.4233 185.644 18.9722 185.644 18.3701 cv
185.644 17.6924 186.221 17.165 186.899 17.165 cv
187.276 17.165 187.551 17.29 187.828 17.5918 cv
188.254 18.0684 189.007 18.1182 189.76 18.1182 cv
193.024 18.1182 li
193.877 18.1182 195.032 18.1943 195.032 16.7881 cv
195.032 16.2109 194.329 15.835 193.776 15.583 cv
188.104 12.998 li
186.774 12.3955 185.995 11.6172 185.995 10.0615 cv
185.995 8.15332 187.501 6.99902 189.309 6.99902 cv
193.425 6.99902 li
194.755 6.99902 195.307 7.07422 196.211 7.82715 cv
196.663 8.2041 197.165 8.50488 197.165 9.18262 cv
197.165 9.86035 196.588 10.3877 195.935 10.3877 cv
195.483 10.3877 195.208 10.2119 194.907 9.88574 cv
194.504 9.45898 194.078 9.40918 193.425 9.40918 cv
189.76 9.40918 li
cp
0 0 0 0 cmyk
@
204.622 13.0986 mo
211.6 13.0986 li
211.6 11.6426 li
211.6 11.1904 211.625 10.8145 211.298 10.5127 cv
210.37 9.70996 li
210.069 9.43359 209.591 9.40918 209.215 9.40918 cv
207.182 9.40918 li
206.73 9.40918 206.354 9.40918 205.952 9.68457 cv
205.124 10.2871 li
204.823 10.5127 204.622 10.6885 204.622 11.3916 cv
204.622 13.0986 li
cp
206.629 20.5288 mo
205.625 20.5288 205.224 20.5288 204.471 19.8765 cv
203.442 18.9722 li
202.488 18.1182 202.211 17.5664 202.211 16.2607 cv
202.211 11.6172 li
202.211 10.3379 202.387 9.58398 203.391 8.73145 cv
204.245 8.00293 li
205.375 7.02441 205.926 6.99902 206.906 6.99902 cv
209.114 6.99902 li
210.294 6.99902 210.846 7.125 211.776 7.87793 cv
212.754 8.65527 li
213.858 9.53418 214.009 10.4629 214.009 11.793 cv
214.009 13.7256 li
214.009 15.1064 213.784 15.5078 212.352 15.5078 cv
204.622 15.5078 li
204.622 16.3115 li
204.622 16.5371 204.797 16.8389 204.973 17.0146 cv
205.575 17.667 li
205.901 18.0186 206.378 18.1182 207.182 18.1182 cv
212.352 18.1182 li
213.156 18.1182 214.009 18.2939 214.009 19.3237 cv
214.009 20.3784 213.055 20.5288 212.352 20.5288 cv
206.629 20.5288 li
cp
0 0 0 1 cmyk
f
204.622 13.0986 mo
211.6 13.0986 li
211.6 11.6426 li
211.6 11.1904 211.625 10.8145 211.298 10.5127 cv
210.37 9.70996 li
210.069 9.43359 209.591 9.40918 209.215 9.40918 cv
207.182 9.40918 li
206.73 9.40918 206.354 9.40918 205.952 9.68457 cv
205.124 10.2871 li
204.823 10.5127 204.622 10.6885 204.622 11.3916 cv
204.622 13.0986 li
cp
206.629 20.5288 mo
205.625 20.5288 205.224 20.5288 204.471 19.8765 cv
203.442 18.9722 li
202.488 18.1182 202.211 17.5664 202.211 16.2607 cv
202.211 11.6172 li
202.211 10.3379 202.387 9.58398 203.391 8.73145 cv
204.245 8.00293 li
205.375 7.02441 205.926 6.99902 206.906 6.99902 cv
209.114 6.99902 li
210.294 6.99902 210.846 7.125 211.776 7.87793 cv
212.754 8.65527 li
213.858 9.53418 214.009 10.4629 214.009 11.793 cv
214.009 13.7256 li
214.009 15.1064 213.784 15.5078 212.352 15.5078 cv
204.622 15.5078 li
204.622 16.3115 li
204.622 16.5371 204.797 16.8389 204.973 17.0146 cv
205.575 17.667 li
205.901 18.0186 206.378 18.1182 207.182 18.1182 cv
212.352 18.1182 li
213.156 18.1182 214.009 18.2939 214.009 19.3237 cv
214.009 20.3784 213.055 20.5288 212.352 20.5288 cv
206.629 20.5288 li
cp
0 0 0 0 cmyk
@
0.209777 lw
8.87305 6.89648 mo
231.347 6.89648 li
0 0 0 1 cmyk
@
0.865234 13.5918 mo
235.773 13.5918 li
@
0.865234 20.2866 mo
235.515 20.2866 li
@
0.865234 0.216797 mo
235.343 0.216797 li
@
0.865234 6.91211 mo
235.773 6.91211 li
@
0.865234 26.9819 mo
235.085 26.9819 li
@
10.4189 15.3496 mo
11.3223 15.3496 12.0928 16.1191 12.0928 17.0488 cv
12.0928 17.9492 11.3223 18.7183 10.4189 18.7183 cv
9.51465 18.7183 8.74414 17.9492 8.74414 17.0488 cv
8.74414 16.1191 9.51465 15.3496 10.4189 15.3496 cv
cp
10.4189 8.40039 mo
11.3223 8.40039 12.0928 9.16992 12.0928 10.0977 cv
12.0928 11 11.3223 11.7695 10.4189 11.7695 cv
9.51465 11.7695 8.74414 11 8.74414 10.0977 cv
8.74414 9.16992 9.51465 8.40039 10.4189 8.40039 cv
cp
5.87402 27.1011 mo
5.87402 0.0976563 li
6.85742 0.0976563 li
6.85742 27.1011 li
5.87402 27.1011 li
cp
0 27.1011 mo
0 0.0976563 li
3.98633 0.0976563 li
3.98633 27.1011 li
0 27.1011 li
cp
f
215.906 4.19775 mo
215.075 4.19775 li
215.075 3.94385 li
217.023 3.94385 li
217.023 4.19775 li
216.192 4.19775 li
216.192 6.64697 li
215.906 6.64697 li
215.906 4.19775 li
cp
f
217.763 3.91162 mo
217.802 3.91162 li
219.059 5.48193 li
220.307 3.91162 li
220.351 3.91162 li
220.351 6.64697 li
220.073 6.64697 li
220.073 4.86182 li
220.073 4.73877 220.084 4.55225 220.084 4.55225 cv
220.084 4.55225 219.981 4.72705 219.893 4.83447 cv
219.075 5.86768 li
219.027 5.86768 li
218.22 4.83447 li
218.132 4.72705 218.025 4.55225 218.025 4.55225 cv
218.025 4.55225 218.042 4.73877 218.042 4.86182 cv
218.042 6.64697 li
217.763 6.64697 li
217.763 3.91162 li
cp
f
103.516 31.9712 mo
104.32 31.9712 104.643 31.5942 104.643 30.9761 cv
104.643 30.3589 104.314 29.981 103.516 29.981 cv
103.15 29.981 li
103.15 31.9712 li
103.516 31.9712 li
cp
102.515 29.4233 mo
103.541 29.4233 li
104.667 29.4233 105.292 30.0288 105.292 30.9761 cv
105.292 31.9175 104.662 32.5288 103.541 32.5288 cv
103.15 32.5288 li
103.15 33.5005 li
102.515 33.5005 li
102.515 29.4233 li
cp
f
111.357 31.4614 mo
111.357 30.5923 110.756 29.939 109.906 29.939 cv
109.054 29.939 108.448 30.5923 108.448 31.4614 cv
108.448 32.3315 109.054 32.9849 109.906 32.9849 cv
110.756 32.9849 111.357 32.3315 111.357 31.4614 cv
cp
107.8 31.4614 mo
107.8 30.2446 108.736 29.3687 109.906 29.3687 cv
111.069 29.3687 112.004 30.2446 112.004 31.4614 cv
112.004 32.6792 111.069 33.5552 109.906 33.5552 cv
108.736 33.5552 107.8 32.6792 107.8 31.4614 cv
cp
f
114.197 29.4233 mo
114.863 29.4233 li
115.583 31.5942 li
115.66 31.8218 115.738 32.1753 115.738 32.1753 cv
115.738 32.1753 115.84 31.8276 115.936 31.5942 cv
116.872 29.3813 li
116.95 29.3813 li
117.891 31.5942 li
117.987 31.8218 118.083 32.1753 118.083 32.1753 cv
118.083 32.1753 118.167 31.8218 118.245 31.5942 cv
118.964 29.4233 li
119.582 29.4233 li
118.172 33.5425 li
118.094 33.5425 li
117.082 31.1138 li
116.998 30.9165 116.914 30.6167 116.914 30.6167 cv
116.914 30.6167 116.818 30.9165 116.734 31.1138 cv
115.696 33.5425 li
115.618 33.5425 li
114.197 29.4233 li
cp
f
122.166 29.4233 mo
124.755 29.4233 li
124.755 29.981 li
122.8 29.981 li
122.8 31.564 li
124.534 31.564 li
124.534 32.1099 li
122.8 32.1099 li
122.8 32.9429 li
124.839 32.9429 li
124.839 33.5005 li
122.166 33.5005 li
122.166 29.4233 li
cp
f
128.602 31.9058 mo
129.412 31.9058 129.735 31.5522 129.735 30.9458 cv
129.735 30.3345 129.4 29.981 128.602 29.981 cv
128.242 29.981 li
128.242 31.9058 li
128.602 31.9058 li
cp
130.431 33.5005 mo
129.7 33.5005 li
128.967 32.4272 li
128.854 32.439 128.74 32.4517 128.625 32.4517 cv
128.242 32.4517 li
128.242 33.5005 li
127.607 33.5005 li
127.607 29.4233 li
128.625 29.4233 li
129.753 29.4233 130.383 30.0103 130.383 30.9458 cv
130.383 31.5757 130.101 32.0073 129.568 32.2417 cv
130.431 33.5005 li
cp
f
133.157 29.4233 mo
135.747 29.4233 li
135.747 29.981 li
133.792 29.981 li
133.792 31.564 li
135.525 31.564 li
135.525 32.1099 li
133.792 32.1099 li
133.792 32.9429 li
135.831 32.9429 li
135.831 33.5005 li
133.157 33.5005 li
133.157 29.4233 li
cp
f
139.678 32.9429 mo
140.74 32.9429 141.237 32.3315 141.237 31.4614 cv
141.237 30.5923 140.74 29.981 139.678 29.981 cv
139.234 29.981 li
139.234 32.9429 li
139.678 32.9429 li
cp
138.599 29.4233 mo
139.72 29.4233 li
141.027 29.4233 141.897 30.2388 141.897 31.4614 cv
141.897 32.6851 141.034 33.5005 139.72 33.5005 cv
138.599 33.5005 li
138.599 29.4233 li
cp
f
149.349 32.9429 mo
149.84 32.9429 150.075 32.6548 150.075 32.2476 cv
150.075 31.8394 149.823 31.5522 149.319 31.5522 cv
148.431 31.5522 li
148.431 32.9429 li
149.349 32.9429 li
cp
149.248 31.0122 mo
149.625 31.0122 149.805 30.8022 149.805 30.4966 cv
149.805 30.1909 149.631 29.981 149.235 29.981 cv
148.431 29.981 li
148.431 31.0122 li
149.248 31.0122 li
cp
147.796 29.4233 mo
149.277 29.4233 li
150.039 29.4233 150.428 29.8843 150.428 30.4487 cv
150.428 30.8384 150.231 31.1138 149.876 31.2339 cv
150.422 31.3599 150.71 31.7495 150.71 32.271 cv
150.71 32.9731 150.243 33.5005 149.385 33.5005 cv
147.796 33.5005 li
147.796 29.4233 li
cp
f
154.419 32.2114 mo
152.873 29.4233 li
153.575 29.4233 li
154.498 31.1021 li
154.624 31.3296 154.744 31.6899 154.744 31.6899 cv
154.744 31.6899 154.87 31.3296 154.99 31.1021 cv
155.883 29.4233 li
156.537 29.4233 li
155.055 32.1753 li
155.055 33.5005 li
154.419 33.5005 li
154.419 32.2114 li
cp
f
163.3 31.9058 mo
164.11 31.9058 164.433 31.5522 164.433 30.9458 cv
164.433 30.3345 164.098 29.981 163.3 29.981 cv
162.94 29.981 li
162.94 31.9058 li
163.3 31.9058 li
cp
165.129 33.5005 mo
164.398 33.5005 li
163.666 32.4272 li
163.552 32.439 163.438 32.4517 163.324 32.4517 cv
162.94 32.4517 li
162.94 33.5005 li
162.305 33.5005 li
162.305 29.4233 li
163.324 29.4233 li
164.452 29.4233 165.082 30.0103 165.082 30.9458 cv
165.082 31.5757 164.799 32.0073 164.266 32.2417 cv
165.129 33.5005 li
cp
f
167.855 29.3813 mo
167.92 29.3813 li
169.87 31.6597 li
171.8 29.3813 li
171.867 29.3813 li
171.867 33.5005 li
171.26 33.5005 li
171.26 31.3843 li
171.26 31.1558 171.285 30.7964 171.285 30.7964 cv
171.285 30.7964 171.086 31.1021 170.918 31.2876 cv
169.893 32.5229 li
169.822 32.5229 li
168.796 31.2876 li
168.64 31.1021 168.436 30.7964 168.436 30.7964 cv
168.436 30.7964 168.46 31.1558 168.46 31.3843 cv
168.46 33.5005 li
167.855 33.5005 li
167.855 29.3813 li
cp
f
174.407 32.7095 mo
174.928 32.4214 li
175.121 32.7388 175.366 32.9907 175.864 32.9907 cv
176.278 32.9907 176.572 32.769 176.572 32.4331 cv
176.572 32.0796 176.332 31.9233 175.888 31.7261 cv
175.618 31.606 li
175.024 31.3423 174.665 31.0425 174.665 30.4126 cv
174.665 29.8071 175.132 29.3755 175.81 29.3755 cv
176.35 29.3755 176.715 29.5786 176.961 30.0171 cv
176.463 30.3228 li
176.308 30.0522 176.127 29.9263 175.81 29.9263 cv
175.486 29.9263 175.282 30.1245 175.282 30.4009 cv
175.282 30.7065 175.457 30.8442 175.87 31.0239 cv
176.133 31.144 li
176.83 31.4497 177.201 31.7739 177.201 32.4272 cv
177.201 33.1411 176.643 33.5552 175.875 33.5552 cv
175.102 33.5552 174.634 33.1714 174.407 32.7095 cv
cp
f
183.976 31.1499 mo
185.295 29.4233 li
186.014 29.4233 li
184.57 31.3296 li
186.176 33.5005 li
185.409 33.5005 li
184.15 31.7974 li
183.711 32.3315 li
183.711 33.5005 li
183.077 33.5005 li
183.077 29.4233 li
183.711 29.4233 li
183.711 31.1021 li
183.711 31.2876 183.688 31.5337 183.664 31.7017 cv
183.753 31.5161 183.874 31.2876 183.976 31.1499 cv
cp
f
188.758 29.4233 mo
191.348 29.4233 li
191.348 29.981 li
189.393 29.981 li
189.393 31.564 li
191.126 31.564 li
191.126 32.1099 li
189.393 32.1099 li
189.393 32.9429 li
191.432 32.9429 li
191.432 33.5005 li
188.758 33.5005 li
188.758 29.4233 li
cp
f
195.37 32.2114 mo
193.823 29.4233 li
194.525 29.4233 li
195.448 31.1021 li
195.574 31.3296 195.694 31.6899 195.694 31.6899 cv
195.694 31.6899 195.82 31.3296 195.94 31.1021 cv
196.833 29.4233 li
197.487 29.4233 li
196.005 32.1753 li
196.005 33.5005 li
195.37 33.5005 li
195.37 32.2114 li
cp
f
201.622 32.9429 mo
202.113 32.9429 202.347 32.6548 202.347 32.2476 cv
202.347 31.8394 202.095 31.5522 201.591 31.5522 cv
200.704 31.5522 li
200.704 32.9429 li
201.622 32.9429 li
cp
201.52 31.0122 mo
201.897 31.0122 202.078 30.8022 202.078 30.4966 cv
202.078 30.1909 201.904 29.981 201.507 29.981 cv
200.704 29.981 li
200.704 31.0122 li
201.52 31.0122 li
cp
200.069 29.4233 mo
201.549 29.4233 li
202.311 29.4233 202.701 29.8843 202.701 30.4487 cv
202.701 30.8384 202.503 31.1138 202.149 31.2339 cv
202.695 31.3599 202.983 31.7495 202.983 32.271 cv
202.983 32.9731 202.515 33.5005 201.658 33.5005 cv
200.069 33.5005 li
200.069 29.4233 li
cp
f
209.013 31.4614 mo
209.013 30.5923 208.413 29.939 207.562 29.939 cv
206.71 29.939 206.104 30.5923 206.104 31.4614 cv
206.104 32.3315 206.71 32.9849 207.562 32.9849 cv
208.413 32.9849 209.013 32.3315 209.013 31.4614 cv
cp
205.457 31.4614 mo
205.457 30.2446 206.392 29.3687 207.562 29.3687 cv
208.725 29.3687 209.661 30.2446 209.661 31.4614 cv
209.661 32.6792 208.725 33.5552 207.562 33.5552 cv
206.392 33.5552 205.457 32.6792 205.457 31.4614 cv
cp
f
214.214 32.3911 mo
213.705 31.1196 li
213.603 30.8804 213.501 30.5142 213.501 30.5142 cv
213.501 30.5142 213.405 30.8804 213.303 31.1196 cv
212.793 32.3911 li
214.214 32.3911 li
cp
213.477 29.3813 mo
213.549 29.3813 li
215.336 33.5005 li
214.676 33.5005 li
214.443 32.9253 li
212.578 32.9253 li
212.343 33.5005 li
211.732 33.5005 li
213.477 29.3813 li
cp
f
218.919 31.9058 mo
219.729 31.9058 220.052 31.5522 220.052 30.9458 cv
220.052 30.3345 219.717 29.981 218.919 29.981 cv
218.559 29.981 li
218.559 31.9058 li
218.919 31.9058 li
cp
220.749 33.5005 mo
220.017 33.5005 li
219.285 32.4272 li
219.171 32.439 219.057 32.4517 218.943 32.4517 cv
218.559 32.4517 li
218.559 33.5005 li
217.924 33.5005 li
217.924 29.4233 li
218.943 29.4233 li
220.071 29.4233 220.701 30.0103 220.701 30.9458 cv
220.701 31.5757 220.418 32.0073 219.885 32.2417 cv
220.749 33.5005 li
cp
f
224.553 32.9429 mo
225.615 32.9429 226.112 32.3315 226.112 31.4614 cv
226.112 30.5923 225.615 29.981 224.553 29.981 cv
224.109 29.981 li
224.109 32.9429 li
224.553 32.9429 li
cp
223.474 29.4233 mo
224.595 29.4233 li
225.902 29.4233 226.772 30.2388 226.772 31.4614 cv
226.772 32.6851 225.909 33.5005 224.595 33.5005 cv
223.474 33.5005 li
223.474 29.4233 li
cp
f
229.09 32.7095 mo
229.612 32.4214 li
229.804 32.7388 230.049 32.9907 230.547 32.9907 cv
230.961 32.9907 231.255 32.769 231.255 32.4331 cv
231.255 32.0796 231.015 31.9233 230.572 31.7261 cv
230.301 31.606 li
229.708 31.3423 229.348 31.0425 229.348 30.4126 cv
229.348 29.8071 229.816 29.3755 230.494 29.3755 cv
231.034 29.3755 231.399 29.5786 231.645 30.0171 cv
231.147 30.3228 li
230.992 30.0522 230.811 29.9263 230.494 29.9263 cv
230.169 29.9263 229.965 30.1245 229.965 30.4009 cv
229.965 30.7065 230.14 30.8442 230.553 31.0239 cv
230.817 31.144 li
231.513 31.4497 231.884 31.7739 231.884 32.4272 cv
231.884 33.1411 231.327 33.5552 230.559 33.5552 cv
229.786 33.5552 229.318 33.1714 229.09 32.7095 cv
cp
f
235.935 29.3989 mo
235.99 29.3989 li
236.859 30.3228 li
237.735 29.3989 li
237.789 29.3989 li
237.789 31.2163 li
237.357 31.2163 li
237.357 30.2808 li
236.889 30.8325 li
236.834 30.8325 li
236.361 30.2808 li
236.361 31.2163 li
235.935 31.2163 li
235.935 29.3989 li
cp
234.634 29.7827 mo
234.125 29.7827 li
234.125 29.4233 li
235.582 29.4233 li
235.582 29.7827 li
235.072 29.7827 li
235.072 31.2163 li
234.634 31.2163 li
234.634 29.7827 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Bubba Rose) ()%%Title: (KeyboardEase logo.eps)%%CreationDate: 2/1/11 4:24 PM%AI9_DataStream%Gb"-6H]qaEOXKo1l9!dN'OgHjC@H[s-RPRZ4Zu0A'pd\)*KCU59pKNiZUcZ:[7C,Y2h1W'E6c!_'mm<'7>uMg+tG<A+orr%q*L\!%5.c:<rS+M_^\uXS]Dq]-;lKX/>!HTU:,/Q&cT_4ZYCHH=h7h-Fm,"MrAW)Zhf1TItV'k86Cb="D\*mXOs7l*W_\_e!]mBJA]:4"_%hS&sW=/Y@C044\D`Fi8%T>.serT<)<h>>6Z+&;d_!Tq:$fAF>loCY=qs7jWipV/bcQiN.Rn^G8QmcC&^IWaY"$i'2J^3]DLf+24"%cA/V'rfOqo%U[_hptoFBI/#rP;l?5N\bYn_s0n7/K$q]ek8/XBk1q+d^,b"54FDMPo&1nBq#/)`l&l#;j=VB/n4TOkHiNU)<kafr%k>u#<s8Lu!o>=6"g?kKmYQ+FWc'rp,Ym,[+i3s5(O!cUPk,U08n*aV4pLiem5/6m1D]euNqR[:,?[d7umd7de;PrN!&!,V^H26EM%(Fo,FLn`)f3WH35C&5@TXYfuXF#`9ao0!oYiSRs+r8h"X?b_!]qX'&^hu-]DieuElA.>a!J,&U-s$Nh")PIE<r9a5s*o?qrmHY9>%ot7G5T)/,lY92Ute+)Z#S!R4u2s*_^8qZ$7I/g+"&&`kahL(A-rp&"'IRO\9ioL[]mq$@`_/I&9Gl,*ss2`+_)G28m9UEJ`HuS1H%X2c()6)B]Y:GVlT:]^Y=2nYD&q[;DXhn4I;Vq5j:jY"/@Y/JfP`9T%f-B.YBmpCQ-q5f<LP92mq0[KO/g]'Sn%K42"LUTl?1&fG$%-Q_G'J,Q3cn@Lp6??lA<29hU$m1e?4HN*9"<rVLRb7?7UFiq7MdslZ<T;Uus5(NSPrJ;+N9>Ss2nakn_TJ>Hp)"DI%pbkV;pAQ+/%b>Y71<@R^F'XT=nX\-.=2k7RV:%)cEkmsBR*NaWX/,Tc>dH]iuX_r%GjNS.J\[b"qqg3^;IpWPS^;%__p\46;:b;5G4jp*QM^Roh%(b\(j:UJ!+n.VoX-6&q3LCrJmg0d>DM/h9DaKl]sIc<;F#X<l3k".7:7/2UYj)71;-M/an.K-"V`eC$uF+4^fXUchH3L3g4=i*s[%;FW:g$gg9MoFB#\NN@j35q@m)5ClC,:e!%oabo%q[)2TSKk4<G=c<kUnJaqFl]7Z)3?\*R<Yup-asmabaLk.Fkg=VTPT0YTRL+Bt%lY%U9B(I2k([=;scmAVtAm6p&@=QW.UGL36kjYs<>/%uNn.VpW^G.p?'6t?Xd0?AXprk_Pp5[@eoH;q+4D_Z>g]koT;hPs'?eCgi%]F/j;ldDu\)^r01Z*=W&BP"jbG'RE.QTmgIlqHAM=`]uM_/R_MKR`0&QY.p7Ze[ZdQHdn>IGo)(qoO>4HLd0boXW+&bB"[hOj,/C%T!Mk4)SO_*i0>\'GPh\qMcB?F-Ns6Wr[iUtP2GH[o&o#=S-:\JQ9Ve"n+1Jne!g3kRe>M/cde;.1]Nb*f@TTjr*0/*I!0ieOSQB`%\\"'_kMPjNNB\W5Z$,mklRK[(Dt5iH0;P)%6bRF22M_2,X*4Jlr7o3RR!PM"F8l464^DtlB>"K1q"IS52_\YMmTZWKp!ti[#8qm%%$^L^6lZn4;5!t6)j@O&OF%<?"`J;2;J@,N=^eD8L@-,*+lRc_>YXW#p<f/]slK!I1+UC6qYGF2M%8'lk\M1%)(J8A+GbnrR5W*kM%EIdV\5"CT^gT&QLc-]]6r9E.1?6NDE>>4osSes`u.$ketMV%k)Y-/imqd#eZ<o<tLR9Q#.&L3NC??t2-Tm(J!I2aul"H&9<f!#<q%ANheorr,[HA14Qi[VUYW1/brg[$%u?R`d+IM\7H$(/7g3c\+Acf0SF<0C]K7.t-0@.X0\TeuNA:pY;fj69HGfj#P,HAM#T_4C@ZW%g&>TPmqpS<>9N]NYR*TK!jNbr(-E8g\U3s3T3>GRh+Z(=*;IW+-G(B=N$,U4k[(e)a4n2SqK;FBG\)q=qfNVG:APQY?t,.1!Wi%J%Eg[0eLB2Y#p+Y]p<jM;f)g])TkGhG9kAKE&^t@5+T9Sqb\_F9$N^l)Xr'"Ppa$_*X-eW</hbt`#UBCP]^(6TPj!\&'RCV.V`U:5l%?5@;C/7EgF2lRe_VN_G<;ne&u^b`9*lPUoeIb`bj?M@M/f4*$B79M5W>B?3:j)#_o8Q9$,X)?r5]_$%sSs+5MGKq[rgM!QB$-MYm%U!6Urs1i+A1?[NhLW@[3Y,a'4pA;EIPq'A+YE[?Lm_0^)Q_];:]CGEsqKII@cW;_8MWSf]>sd&ug!72Oj+h^n]:m@@L'(OopK=]2%"t[IUl"Rs=qP^$uGtp,m1`N@cW;B`\Gb![F`]/+LA3!k22<\CE7L]XC/X4EB-r5T+aqoH+ZTi)XHBXP+h+o@&Li/f2gXW_;Y>f\d%4CEXlVfp/I);GDYcoT1jTkAZ)>(n;nBi"4.?$6u^S)u>gdpUkT]5no2DpnJSFWXF.s3%J]*E0DfRLQ5^X#PG`gjGRHMnX@H-hind%jnJ.+'<Pn>#*I;;3Pah?B(&tV*$eF%gX#k;:qtUh[XFXR\+V$u'\6odfhThUVtE`5-%3lAOKWcXkraN$Y`f".1e_Y*^"*%Z`>S&Y%X#$=H?Z_""^AmEGIJ`oQ(@qF_l2G[+[[<Z8pQ/3G[+r2IT5If5o`#V+c!`e"l02!32u^^8#r4A==]P?ude7"WJ,Y+M0mO\Pb:YM@%[do667V5bARgs9t4i_EQgE'86D6+qB7H5%%?F0l]>#$?*$Zbg`SUT+D0$$pPGPPS???@NK#GEOSBks#d:hBZuO=NLfLcR\W!0\)n%W^A]5Z*E.'N&n3pC^pW$d=Lm9W8+V+7>Kld8F\tqi]FCNltMq2)=tg[TA@3Z)BN8]f?LotpufCJ?gnm#hn==0-i%ZXS%ndiiPYEI%MMmsRs6:]_;<uhPiG-+%#QCTKou3Ehl)VRGs6fc&s8MCEmk0'/p%>p]5+K?3q;KYtlSf>m^]*Yf-\][G-[C<:04+\5K>9*H^Adhm%+3!udpBW#Al1CH0rf;h9+6[,:b^Y':rTat)5E=sN=7Dfr5@)&(rjtCeIeW9dRmGs*X$NV7)2e,PO$:;9#N#IBXj$FB-Z-*Vl0A5&%T3X,"qWT'bbF^TaS!S'M]`-CWQf%f<orE-SSG@X+,i=#:BD6=N^42Nro<7l^1YD8Ra$7:boD6)>ac-\hMjNls]RKP9iQE=Wqsa+M%j4J5k^3TJPELA_>hS&lsLH"\9?&0J^QZ'W&rV)ZI^\o!a/CQP]hgS9]K_P).`cmL$,*73Ko$8u(I:.([r:upgIeaC1Ie3-tbP*B=%&!RVi`4mSD[N\:N")7al"QM!.56(O*1,5?&h_&:9h><OG^F![lX4&_(dQMu+qCQ.U,6GC\#_s8#^V9K\`IGHA_0s?G3rA>`k]9H?%1(`k8I:1N'q@rd:qBYo*q?6Y>qD`ltEW!ADccsGbc.t7,Y3=@!e*'a+;s9G0PP>gU'BnKPj6k\Sdf:rc4hfn$ou6;UIBMe_q:"P+%q,@'Pl'(lUq%NP`q;ZAK%1hadN^&KmJpte5C]7T/VsC8NVs:2D-gN/E-gE);F2<A%jl=q<ot>`*r\I8mF3QYLM-=_pj]5Q%X`Z[S%YGp8\R]?8Q]'l?5SpKh$fA:iB=8eSD_t`]srKY"c=5bW8V5nu`<NaQ'\[oALOkeBthd8JAq!2l>YL@X.0(c-pmCHY3Z-3-$VY'<Q%T'>i7H__fnGibf/nG#)ia>M;k/PR0Y+AJ]qM2a@>R.:;?T0Ag4k*frVQ<'#HOOb$p)L-tb"YFlZV6A)M@#6CG&1kpTEt31$o+H9T%]EK>YYCYlPHf.3Z,'^D#0RLs4b3B>oh!%?/cu_AGpsWk_?,+/D2"ug0\DX)S0"^,CCTb9"R].7cP<8%MiKrJt:Hn[8X)G`L.t>fZ%H:pW:%kdVg64A]mT5jsNC$=M*>S@4p&hi-4_B++60uaoK/@!21Hb>6fbV-F^,PT;+T0eDaV47m@C20`GX)rbUXED^Uj$(*A8\p:P%g>nbsY.9ZUGt"?@>,b`[7[P,rHjM)#9?F#p>)9"I03;9GEcXMcjGkV7<R4-RXOLP#[7Ck-&qAH49$G-LI`qU&PO5g-a,CDW2<G)>%Jq:bT@,f>&UX#qLB"mDUFNZ4`a%PT_Z,,.%mW_%q%1WW(K?M*oNME1KbjF#p*JNPBYjTI&i-TE,GTY_50HIM$YQa<GmXd(-.c(Qc%%G228bV?CNYUcq2YVWLBCj09:@#&-Nn1M7ZnSlZUjc5a'[Ys>9*dQ5e[OEaZAES'#-eDl.gp6,e2SFW'@_!a'.C.Hdbu@f>abI)Q%AXhtN7A=TLgKM8#/m+.rZ+\]t[Vi?_DmG;+bA<*ip<nr>>bQqm/KYa0Hq[L'+;,b*SrX!o#<.#;FI)r\jaL`cmo[_"_I'WOD\jtL%1WsaYDT<CeQ::E\$g#Mt33gQt/5u"NJo57iY%YcmX^7]d9XLgN<nL[hrHC)V2melP*4Vrc-(-_>')2/O7q93,RD,Bf^*9.a`.*Jc%0bJ1*@T#_fE(?sK6Tf?WN7fh>_[CI2,0g_+$X@8tPZIaOGd#R#W3iHXmB&pkbZ@:jH:Q/)6d0[A*8Y@E(>>L>2J\s[lRll)mqD*,%L]aho)`6:-Km%co.7nmDdF-e^J(tU%?I;efZu6<YK1(;9O8s:-I!<Lr2oNg>[%H%UadPOO-^!a%,_I)=nJs@<%C,dFD)uoV$AklQ%i[^*-F2S<-`/HX^-*Cok2A17g"CE>R(e>4dm_?f9N"_/Y*_cr4bX.JV\gAk`OS+*0"b]:L=i*MF6HVX?MPPs-'ko2h<[=ii>`lTE%G?+3?%,lOpK^UC>8H>gh>pZ_r@$AAF)16uuIh9IDL5-=P)19&[_.P(``C9isp_Db7,Ec-iDB(F@WOrsK.rt>J?!s\l]mfDA,Pm@u%)D&-;$bk9h""@LN;tuRPK-A2A:,iU)#Pde7@*eEQM2HDmS8lg/EQ,6i*g-5(iD4''!PcP\bs1]**+kag;;6>8DO?9r7UW%;bQN*h%]UG7V.L@CdJ-E[fVhk2j9Qhqd'!iLDXY[joB">cp`,iku(RWGe1SC?kkkLBg`kMA5S[iX^Mgs'u4HfAIo(#A/\X/^62(q@6Z6igU%s&I1OaA.qj-9k4V7b(O.MR"58:f/^Z<5baA<"Z*\%o.mYJ`Z/K+0O3F>pV=(=iQ>`9c)$QJVC5h-,!rRHcJYQ%1D$.53f?Hcu1Ie%.uWB'C-gj?n2di:KeQODhV`I4<Jrq>12]NtB>roBBtTnbO`"kbXJEpmQ)"eRkOqL-':2MIIJi'ak3$4Pjf-Rl2u[dT/o)MBV:hDc%^T>]qI/W0GB4!gpp%<N^!ZAN=:$e4,p?S[i.(4"hJ#nK7cnA<]Q#K=,A:=+F*BbVQ^!W&/AT=\DEmK2mkD5@amAk8!gE`?LQJ@P0%;&nV3In=Z'SU@tAV>:qG;b\*]k0on'9a>YNrHgYPr/.)U^)a)]RFp])mOpde4M3]1r:#GH"_;`D!/.LnD!o';:Oc<8S1.78Y)>/b%cRO6KjW'/'@r;.4p$b&j_!S+n6N:GO:7Vt5TBM9eq'+H$gUJCZG$^!hK:!^9l$k*t6CI.j*=qFY&>oW`8/LQ2\2J7-)alB7`5tj/%rjc2[8N8&8->q"s+6Ca[ETVtZk1[ddD@^WV[H4_7&80c/B>"hOq-KS65+H[WCj"S^2;X8UEqj#'[rpJUPCig]8\qt2J&"nk"bEK-%EcN*e<>552p.O[\UQd<+<_'_S1bAUB?e.D`R.F\U;]'*pnc`_dZrPP%lJ.`s<,9GNnjQ<?2#b-MFll=oQngROHpLq<-C&8lQd1!#%:Sgh1P3%TuR&9]/\M*b-QY=b\*U,_o]bfMkgm<)bh/8NC:&XnVIt%@TiBPE63Dt;a^CmR92q@)@cV=FLWmA"?_,&+CVr&-^jdR9W%)AECkhjF(Tb^,j`5K8XH`lLq2l_fDaq<G#Vdmue.0fL_0T&..DiG[`@c*,XmA]iR&Wpqi(r@<4=nU!-A`S1?i+8FIf9)nf2"T6Fl%SUQ"`_nW_1f*q\WhdXYGKT?e@85ClE[-_K0C#^!79Rse;DLNh.<N%@aK/*Aa;g13/s-:>PVnYnFZ!?:CiCZl9QS!OJgZM5hlF_ZO%3#LkHO.OYC*K:$l7:8q:U>Nb0]`Rg8PQ"clF\M%Lq`0f5h6Ua[M/`I46q*f;@:<Fj`XQS*">L)P!)o-[(8d>fUDQk`JG+CT4eY(V%l992O_hJ=/Zn?R&Q]O6I=K\"DpUjo8K<<=f_e&$NaKEi2REiQ2ER17OQ6L=\r^Y(.l=I/AZi5TcAc4R[l=,so:M0,$[.!VNl28(g%p\ahd)OR=*SeC35TN7H-^a/;T9R>A!W"lc,oge-,?_=u,Q_2ne\N[R%9LKn34tRrO$sAcufKu4QW"l].ouABB?_>&.QD#fJ-tln,%'2pF*2UTYO#$^=*0m0-K4G-.R-H(>D$sbkYV:<*1-Do'[rKRK1;64eQ"mp[8E@Lb9VsjG&C4b2.bi9B%`Aofo`7ILZ@tUFk>"$uj%kL26`F.r$to=:e/9(0=NnD(9_)f;;:W$!!hTm,8OdrY>+T^;LG\5R$iCuMpMGkqP&V]6c.\MH;=q76F6;"sn`gaQVq[eqYpkN(/2%Z)41Zi\Ocqq>'s!;"s3pdj4J+!ZO#aN9YE.Cd)K;.gU1/De7DO_oF(d?_>&.Q(9GEB9e?18*)`un**QS;LDG@4siGmg9c:6r-[r'%o3NhL$+8.^cR=N<<UPhFr)*:c=/YJMjl^\&@&;L$eFWTs/&c/.]oU=^^H-N'Hkq^q?$c@*(2Wf%F1%hmG5P:qcuWsS)/[WhCN/bb%d@/&p3j5OWUa3Rq>!U$T^947%E^mrlb3=)hL%W[cfUYs6UrCMTo$MZeSVX1+/8&V5pYo"/OX(BYI:?7ZP9OYomS%l<ppaJ?*lh'f%KQh(Q2eSrJitKK/\RYYLY.]6Jma?9#ej[=^`Xb3'IPYg#]QMk>*4"u]/*!-SU1?+G2H$`TJ>.`*0>7;D?S@Ehpc:!>>]9$Z*W;KX%06BV9!f:'"X?Wh9iq^Zu\#2?)kDo9m>(Csccg7'HEp`luJ&9q:;bii=/s5<k`(oqV>Ol0VDs-(.A,Y1nHkM3TpMnBM#9VsngjIQ%%\D[8YEp?9C\b"n;\aqPjd[m&f?ee3Q&NB2*I!@QBpuR9tn)+.aqXS!Ci&oT\bK0u%[O%G1U^fKi-]Qno''9@'U<:9d-_e,gqRF<L%Z-N<N].MO(IrPZ??u'kH.sbZ5H=@()rkPcOq%SZK"PLD6e;mCura-sQ\>@Y$EnJ/JV[0dYTK"69/>8De!Xh&R%5.2!V:pVQ+sBo]%Ot3G'?X5n0@A,t<:h(^uI2uK,.*7Y'#d5WDaTeP2BEg($(tVgMP'.9,PN$/t=dp#VX`R?UgL]lb.F`,tW=_?aCJ2E!*;/qtV[Xh`%4)G%2Soe+^<^I=LHDAr@%O8#)"kuS#!7X,#HIh7QV_<HK6`?@!2+!K'AV`L0d=rXgemJ8cA@QS]BNBt!,\q*e>/h[-g0[<P]'QeM%1uNc7l5Tr7U=i;09.fISlXd1Q0sj@g)Wle#2X3N%L@q$W_m8g`9Zp5SLj([=e;(OuM-*7r3q2FqPXMTVg8SS&PK\:E1mVHDNQ/.B%Ptj-#O>Q-hPB#/?.mRRM&acrY$u7[-oF'B\(1]NZYY#(82*,U+LdRPk>RX#IVN^fD8@/moggLmT4NJe4@E8;d8-8N_>,2)^WE8)(%08iDKVEb7TNqS*(5-#s^)i_T;Up%n9OYlF(7#\!CH'Y<8;qku`ThrB7'Nu^@L,_@'A'e$cdcdW4oqg@2]IW6rW0n$'(-F;dc#ZEA%@J`n1DC(e^*"]sJ`i[0S0S)>,'Ib!-d7?;=!+:JMPUC-^d>iBVY#2dqe1N^i8k0,lf9W3un;8o<LG&PSM;9'jPTVH.@W'k4Ipcc4%RbKGCZ#^rM+/$Zn.eJCA=[PS3EnWq;.A-'aA)jB!4E":^2sJ\M1/@<U2C3RIRtAq`PWH5`nS=/r;n]CBp-u6sicJoH4OYpK2T1`3%p)AP,<n7prY[jZ7XC6W!Bc&%bMcCRG,[!i(Q]\_[/g\n6V_7,%AgltO4q)!p*o\qNbWoekl8u'-WL&U/MA(g`@NO@L`9!OJ*cA*e%C1;rF'`=+TnS^-i&ClggK2Y][fot49+ZZ$MdLU%*^m1!BV"Z:!VCU#"a<WRC+_bL*Mb!tj,[O<qr+&ta&hZ$eI<n,L0i4Sk74:48%Cn^0(#&n'6'm(>J&>cY;hA($ZR!du5>*?gd,kj9B+r&0fqfFqoHOASlE"'Pu3C'M/G``)b6Yf9Zj<L3cM,qRV3DN'a$Ipgeh&JO#%&[i%kdU:f-E,;%(L5?`BkfR$EZk1oPQ(BBP8LKth13\n5^e\F@R_VYC-YDh/AYSFrP&harUUrF[A$=o0U-6IC..;d:.tW%h/p3B0%Z9,=$Wf&4(>#C0?*c2Wa2P`bE)Vs/'nVf8W2M,_gdCd(jTo9/10k&/Z2j9dB3]1*PT^nVme/O'6,VI88Qo$bUKK-+W1\;Y9=@aJG%X]&(_9E!4tNHhG=--],j6`AJnEQ_VZaFVj]RfOXO>T3nb)qjGeHfaDgE!G2d,XO3dL-RLZ'*Lj3C,"sf?[63R3a$Qq,*$ga'+'fL%EC1..(fXg-ZB4H?JqI+W<$CO_[jqXt6SfI/,SV?pO@nA3P#rfoeL]EX\,DCgl+p[ROZITG7V<&qA$HJc(tBUEP!b`MP1We+U\5jP%O!I\6dpiLCFRRG+1m,bsQ7C)QLqTSdVW4ipcXWaKBd7dZ@3e-D."aA)?R)0i,b*sN9(7F`<9H)m>aROEPJf:)LZLHC#]WPuG#VB?%PPDpe@.g1n4f[M[B5^j0'o;t3&<Vl<\gLFhBQK?D4`spk47l\J@so:1eRX_R)D/(0LL"KsZtXU2El\7-fP.KM36#!hKIs5Vd);Ak%UEM8TS2q?7B.\<0RNmM1:3/[Y_(>8XXXb0Q:aG(JAh,EKc]U+mKBct[68+d?9n<16#6PDb79`(%*`!L<<>Ig?.Tfa&HMST]11\e<%k+Tt]hFic!_fmBo`]UMp8Aee6s4r3[idg'Jc6*Bki^L,cWI&I6!Y$LdAVO55irCU,_biL%:Qe.ghTI;jc*3]tIC^Ju365#on/.7M%kY:7!`M@\$4fT`KRRn.cbgZV=-VIUX[&I1a?HIeO<nD^`N%qsl_^68DR`;,0L"27IRiRS9g,n`,^tPd4gJE,,BuhGHa3Z[4)U_Ga%A_1YSW?E*_@S0G<,[g4ai"Fka(`q/fR]^B,K3*S4;]Ciik2i@U@kZMCRpjt=8AC"`_b,Q]j[=IAcrAZ3lF8Ai"!i6Bf*3ad(<^f+%=FAIb4HU\u*WnFEM$>K8#%_l@L^pK&p0I99L-rju&1MjWXE6OkEX[M=-Be[2HQWMX&t+4&43^i]p.%CIa.%,p)FNnt76M?Xki<;O%f!l.17b]UKM!gM$:/aeh[qMNL5mR7&=(FL-,5Y*SP0aJWVP&FY6'g]/M3*(L4[aeA=e6[83^sJH!ap^[DfYu3kjN8TemU],5Vl83%CL5*3Yc(&>I36TZmk,VX:UL"TrE*Q.OqJJc#YD)J"a"/3#Mc(,A/AG4X:#S$=7$p+8*SfFBPuIF=>iJ^9+@bXYc:HoUnD<B$O(!8%m&X`-h@3sCI@dQag'eDte>"j3<=DK\f1gsaAT\sGj^a_YQ@M.*%tLctj+6\&Beu0E0MQBGqC%]PZgN+53dK+pSLPR)MB,*hWKWGY%,ccku"P\:86.ji6]aF3Tm32BPM47G=QR$-O_]dk[ojhp7([DWf*fX.D`$tsKJ4#,[#7Es1CY/IaZ;cD';j5L!`3C9CXKQq&7(<=S%bVGQ>ai%/EL@d_eGt*Z,aUR[Mg0#$H2o&2+0kBTq(sarLE:^rMlJMg.YYZs3Uq4hS/T3u*#q"U"q*P&&Wg1^`&>)!2.fM,&=UhO.%V:!s-Cr0:XZ?O@5#+A^.basAc[1J]?`QNY6Ff_?2R6:U[B[[P_%pj>ni)@^,^7m*5(%-u=kJm'tG45fM06&R`-_6<)SJ.gJ7@X\6%KenDaNkdtS&'pf7hK3qF\H+-k#6d0nE*0r?BT.t#3ZK"TSfq$g;IMJVL<U3CprNfeTr)7\_C=/W3:U$JB,=fn3-ug%C7*gnL@]5!%@/jL%*8O/.G\P7S8tmL<2$Dr\LoN_?R7P1gKF4P#:AYN"jq*s):70ta`F?2d\!ZjqY$0N_1aChe1^<.NbmUpqUN`/aRPEbbX]#Ea%QXRmnV:gjkfc1Urn0Cqm(+"qKCW@e+B`q0YRtQ7ZI&:ul2ulL).kdNbB=_'<>.=oHGbVBW227j'ZCGPpo3bW,LOrSk.;HBNA2^>?%9G<ekEpi4GB5uOJ4p&u,gCNND4Fs79U'W;T0i*9M6&s1JlD??\5TPTS3[`b03*Q\RT=E9ZC1:Odj>$C:9BCDE7#,L$<+pS!&gkG7%2Kf\3M_KL!P.de-&S9*u,Et6eN9)nh5%N&Y4O<,F#+IT.9rf<J=9UYsi(=AWoko"C=_f89SJ`'BBGA8TH&As[jKi&G.m%nK/Mk&O%[)u4@)+\7PkhCYmo]RO#,""^%c=lJqfhZE=J0]<p0efQ^lsV%ql"E#IB<ss,#9>AO6tg-Yi(u`WgT)X;4cj2`[k#,"_jsOX](F4l%bG!'8KN)[-1$J&Tr+hD$:_[3+"tBKE[3Tql%_iPm>r\OW>tSjBG:YMq(j(j!B8kZNeFtr+%c_iKL^7HE65[\sbVjS^#"gTK<Ar55%Y\T8IP*<FV=,&:!hQ2/o:p@E"FeEH@_'PBlE:l%t$T9]T3,n5(kY.XP+r*@)VAPa&CKE(39banh>r^J(-e!lSm0E?4=[<B^`;q*:%>3j(9b(i%;AM'>%Z\c.)1-,UQLBrK?F5hS'Idn7B#K9OqbTh;H1_.$(iQH=QKO-]$$0T,mj(&f<D;"'Y3MEEflmMG60kC8kG7Y5$%hE6g7:<N1FP9!=l7P"Ti4k[8P".N9h\SLEmKNjjtpJ<1T4Do`;p1>4`.h^i32(,SY%W$gF=^r<jTO&n>M&;`H+[&I?,Sk+2<H:>G%#VF>ioM0G@U=b*4gq."I/DpuFYU>@sog``=`XhrueWN3P.`#&TkPf>FhEAJ-L9X-UPa<@u9FE)R/iO=sfV(0dQQ;P:_$!\ZBV2':%$^]$,b!Y[f60c@:Nlls@"rM`l5DgMqqf19`TN`TKLa16`fOR-*Wa(:T+4],^:2i5J9H'=;)WuB%Nu=Zi%VdRG3-fa^fVc[Hih.-F%%n5SU8Y!R)FR3f+fWFRRqHB\6c6='(HY,GBE&d_)UTn5S87cK6n.-6)dhMKQ@R=9>k)KYml"ieEhfO0(3\^Dlo^E5$=d1_t"qQcf%L;c`U(K9Tr3/?UK=mU+;'UD2?/%V:Fo-.KC+<Pf;6J/OC=/r8(L[j"^Z&N13dkO+4SI-jb[i;AC"ZoK@1gFQ2-RXnI>:@L#;OBd+%5iU-ueIr%+d<+3EIV>[9_6>-R!*h(;HC[<?LbJg>68=`/fY@rhCO4*$(WR#Y-$;!LFor[.L3^W`'8"1=R7p$Y:P:*!SD(MDq%[7M%K"[dDk1i2F6V-?`KprK':G8srUCDuC4)YZQF`GbTJH70Ed12l"7Diaa2QQQm9uJC^VoE\T@t$CD:uFjLo6!:)3G)`LZAW.P^n=Nc%[D3*k]1"RZ`#`TC?oP&R9e$2o8\q_u;Ve^+ib`pP(7ui:`Al:0LnQE0,UD>sKW^3(ShOgQ[HrlY*@`G0,pUSW%3:aHZ_#g41%T$:%!ZP9u&sYBFs!V_e:=/SqW>r%A6u]AQ3)W;t/hj4U5g"L"-A-+,BsG]tCi`-j)I>D()e[D"bC&fZr4s!,dL_#sBnj[=l03j]5_prd%WV,_8nQb1VG*s-"Hu*nEZ35!\`^^6>.1`'I%##-g5'@cDOFqT5SYhU87?pVe1oiUpHB<^FGJ)gXB^EfA!:/8T8Qm`bc)_,OS_".[%iuGL>JU>R5HH:ODcdoC*Q:p7W*l@&h'P)T[^u.$e<RmK=YG[q&'ilSX/>H=j$q#7?Ap53)*Aj+Z@&-L0:m>:0F$N_^f7$)/RZ?R,%<A\jj%P_Fs>[(eHrYi#G=/YeA(sc6q*C:Z(',o:g`q<tX%lfLuG-S'gc-B7@]X-9!9pbu;2KV*-8JuIVmO45qa]XW;)'fBS)5!Lt%+Hkk*;8ilo]k#T\@@"4Qc&#V6$RJA2&oh`n%@J.:NC."mLBZo?Eu9LG(Nr,qc!n'TB+bF?'g#N?UOZ/b3[+KGBin"\8NIp7Lgcj[%k6^)LVqF5/6n'C,b<DRo`-0&\l$Xo,YpRV:IiN/b8QK1nj"TVTSNWe9i@(-T&_dnG13^OZJ\,X6*0A9p-^?X-U1+V`BJWn.S.R`:%O`l\7*4D<FN"HXZ1_(@Md4a=3[456C9]fdY.8to6LuA5FSh25-$po;t_h4d:&`HD>$UIpIA9G?=O`CS]B0.pS5K&s/Vu2'.?+/PH%G&36c.riT5Q^_,e/qBW27Y9W;#g_XaJoH',KQcL/7`enLIV+-X[M_%0E9;ZT\XNXBX0"7MH*g*g:"eWJekclJ5HtVn`6&[\6M?1g%8.g@>ZtqTqq8g9l1('M?ae+.0!)i-O?SXiiK6[+4_])BdG,mDL["tKkKp`THJt5h,iK0HFTl^dm^8u26K16i16kV7'brnW+SqrZ4%T6:l1*(Ve/O_WVOGqOnoi!d'm`AN=j$74?G",1XqqKd#,qjYJ?k0T`g$&n?c)ePRU6["5,dLAcP6Gh\.hiIqsqh.<p/<D9e-6,>_%4_>[[UadB_%f'Yhk8Zh(8Y)#%kn*#X%<1]NZ47E*)N$.iGUDkj8'rLM&DFFRoVaY=0]t6kLWE<J-6MAn0)H3FYkRC;&Eq146Ot5&%,Tuq%c=A%=8+g[)OC?0SgM5caLWA&$SHg5pW+;F$/ppuBKIo)GHrt5pi,,"Z=^@7r00UpS#`bGphjs;tZT/*kGjEEuS%%Ro-iYm-%kFW%d`$7QYp#Ugbici[qn4;JrK[lR<6$IR%2XYt:T3AP$5G.(a-7'(m-i7Ea*do<]*F/F`1<TN3I/6Uth-6fVDIf@j0lfKg.Df3j%s4;!8Z=ep'g),b;s1g*iX[V@URZ+AV82;8bG;0o=9b-k@)u:,7Mo"U;H[B6W@^KcA`dZcVKRUs.ASX,c..L_]2.HCCRb_^:Au*ft%qfK(^Te:E3dDg,.MsfrOI`?=0DaB^l/Orj+1$Pb'aO?j7nKs%YL\#od^e%St7R+]M+:NBm&?sgR<nq?o8;Yuu#W\I'&VqfCo;t%T%j>r?:<>$uHl"/6T?lH8N>1EalH!D?Bl3Y)MI"F=kI(X>R"fE5VMlHcN`s]Z0'k#2PPm)*Wnu=:W>X/R,X"HBBQ*]Z^Z?=Vs@ITeN%*SX%n^rj!IH;ti+UNnIJ,\3b2(/*44"P5(H$7]R1]]QJ[F::/li&U;lXs\t"3R?^+[,XBeA!P!?)k68p";_1RKs>-("65[ckF<fr%&ScH/KL&#eE'<-<@[AH>P_+%L=dUqJ\MF$7%d;UD!7,*:]0l(kl:eDnl[2LN)g@G<_+?bZRH@IK5d\K$jFj7^$H+)pET#>gS]7Il%B/mJu$&@#gABL`.XZbG^E_o;7Ag]`,i/ka>AEL67Q3h%;,\M4F")^U">_XYGo"_RA2T5UV,k3/[AmoPCST#4P,/-tgbTf\aDMA-e%<RsV>Ki?[_Di^4"Pr5rTab3ZL;V4DhDIqplUA6OZ=INgG47eK\p+%&;.@QUBVK>S.S*bHlbn$nj5r5C/9=rH0CB;N<73At6aIE?F%=(JaDY.lQ&iUdXT&i7PDHq'UF`;ML=c3kDK?kU\'o-8mZ%0]c@qT/[i%6b9Q_u5rV.(eKf<XnXSQqp`pe?R:W]4hNd0L4,BRQ&s[%"i2eE^k`dLTknu'9q,BmJ4mE1Er$_E[(rkcfn'BEaj.=s!SjfV=[sA[5\PB*$+g3I28QriHm_3uU5_D=ElY)ff/Nf!^;V:5,><VE%CV(Ck6jXW_@Km,aTA-<-(kGo8Tc#%V*%!I.5l51BXr8EJArN55b[s,4.LM:0<mt(^^rtX#a>INpJ3+Hk7%"n-obWOp%k1=$Z"tWf%OLXIt113i3<?]/%-?h3Ff/_&HCE`b-P`]=`)oa65!7!B6A[DEiKr+<Rh>]109nTh?&*)NeO_H>VT?GC2jpud?@_;HTg0OH%=H]q+%n(X\RFmjrWlb%DJ)2=-CF<&$D#bF?Q",Gq`S;OX3ANe]rgeWa?iQN2(.F`'+Oq0et4b*R4T6u[p)9QP53@?j98IaqSE-fB:C6sKT%<.;j,$t[?s=SDkc(1M/P&p4gb/]#lYG,'=8PN.71bE?ZWRd,IF@cFU7oT!Hj'!`32_FhG&R&&Dsj^Ji8*A.1jRj82JaCJLi90W4u%i<(CR%EQ?g9LPiAR>mAr_!-2'N/:r&p2]tGc<0bpH1dJS[3*c%q7V.FKOPhl\AK=!g00:afqh0V2kV-'/4B/&i-l*i(V&=;QNE9`%L$ckrgap.^b>DWqA6G]Y<3<B$<P.Z;SuH9m.YJNVKbeg9FPPDA9M-BE%,4'1QOTn6i^rI;M"o]^^#\uT`NOFFNU[4jb=9)5@ooeI%a=U)?<CtE:Bh""7R33MnN]DBs(LC\YOQnRi8:u>02q]s)H]gLWMPQ4mB$MVn<U2IYp>^Dkikr))$^J%u/0UT3!'W#;72AcpS1dt!%N3cs1iAqEc'f;0YcpZheb?6TLhae9*r4p`;LD"E<*8U+BfU2_p8`HtFSWpYNOTT7;A4qX:1^E:H/d9FHhiHa,MpI_FBLe@Bdse!1%d+fj,)3sfUA5f>M`^nrV9$=a<X(i]o;O'j(j'iOr1<\LKAliMO;rDt4cI;(]Y6h!N0'CkiNJ&BarT,=TP;Qs56cHHY#@SXmZe$8-%jH,:kr*4SZU2bIR2V4Q![X=?L/A?mLKD5kC41=po!<CRNq*DIaa:%@&I2uhf/NSFS4^3:Z\Q99\f](q9LG-YF@2S.G)NJYerdGF)%?$tFV`k@Yuk2JaTJe+a)`OFc+Ec^c5X,-BkACZ[?a(h+(-CC:i38#!">C9Gt@U,(@[9*VGN^gB$M9?J[9=FP],D=QS?eX6&8+GrR%pR3B7=$>_[4N_%lF1?#0>LZ3X("_CW1;1':r,CAl\Tjo:!p#V*?VZq+*[h0=N?<-"LL_C!Mfo\jUHl=l=@Eh+EP^+]"L]W0):fg7%H>3,j%\n:Bl?i'iE`AgE_>B$NFh'kWX3-G0<1V*Q!'.[*[q5>*6@h(qN)L(R"91DIG)_eKE.!4XUb5$@X.:@!A"^?!T+bQ>[ELn-%UrM^S-MT9NB<QakRPR=E,=+_u<+jX!q9%0rle"VZ`\QS<aAIWsJtoZ[ObJN+UuEF0VgpHp"'i@LA\'C6+QVJ=dSUrdD4K<!o2JX%%XsuIZ`VZ)%k&CPY/d]_u@6Ac,'2DKEK=f'?eG7'2BUjAQ_G*R?7l$c@,h,g=?'t)F]&=h(\:BFcjdCWHo*-M]%q9NA!^Z$i98ukg%3^;>8Mnh=g&mq^J-<`,qFC9tcYkd)aiqZeCl1JZdK2!UGFed`g@Iq-jN&J*+@J&O_IgUn#a(Bjkl2Gq38QCAJUaDiMKU]M'6&O.1%lq3DKFnh?_"CM\k9biIo:8.dp\JZa@,2)=3NCY$Yp0<X9>=MV-r=hnHQ"iKD,q[kWArtu(,c:DM9oBo4KL;t$5A#s0c?_[ZdWCAf%SAqPo!1A'@j)PZkdrLP[`6%Rih!aKDE<DS[jlaFa.&lW`<a%JAlhM_+)D?t7_'@>a-T3iqnF*$oWI$@2=[Bd-&FG'GPmg_HF^UP2%Z+L[MJ4^'g2ENB$+U,t2hP;#_nFoD$:Bk])01m$9VLd36$YCnIi9JOFbj&dFODMC>rG2`2Cc0Vpm>K7=+-2;<D]n#97Ffa($s3Y"%*R;eeFu+oHOZG:YXg'0K%Ok-FdDMsfO9FA>$EH/IiT-\D90CY-YBXa6EY]cH4/FrGfFG(.7)8b?jtq<^YiHG!(d1ur>M22K&`+s5%5Ig7h*BM.0RV#IZYes1i(@@t'Z*H>QOY#`K*>VPd,eYroU1-tk7$bV^(M93O]g:g8VcoG@0PEJ0UNnLmFt0qgjMUPFG;/YmF52)U%'TD*hK(_%l4*C^Q[d8OYkd'7\3&h"V9))-dr&uGN,JTdHMP8PQm3",ci=heDCgo"N<!M;baq'-sdIoO0+N_dCD2gNQ:/]VF&XetD%q51^HrLCD4AaONDHR=M6I3P<%51;uYhBN8#pi]6JC=T%.1aM9TcoFgQK.E?iST/lu$ADA(ICU(-<=qXmRMCt$EJ:tcX6PAJ'^MH0%Q;6GgN49=]=I95H%W$/6JEDC:O5eh2L*dj\M3JjH%6o-Pn:`lmQ)UE`".$(M%POAL2d>gkO^;Z@*#o:34$*9RH86/8q8u<BZXb)8%$VCM9^dR9;^0HfTAr^k5_:sp6BVYRGFr6jo"I5mgb%W)a:k],cX>(Xreff:2BM&HGTJiRP<&/#)=p9/Dj=*!kahS!id3?BPi.7VV%PAE_)"%>/1c5"ZGBj@?%RkY9nW+s?5D@FkQ!;))H.p\<#FR73OE6T/n6L64_OOl3`+Uj97jpZgF,!"CM(pAE<Rj&rerc!;s*nIu?%`.b:?(A86hTBE\DH/nQND/e<K%%k'+n5KWA;H7bhN,>IOIq)S)GYJ]gg^Zqr'T(hmK@/#gUW@(;M$C]GQUa02EkR!ZN!&ak"q@^Y%ld->]'U(jh<aatiXkL(T6mC(n/:ZMl$;SOiC_`oGd6*a-Wn"t>bo]omXEs[L4[bcncM)h`$D/Ej)O3?J75JOKmRff=%V$9AIfN/2%[kC&on36B-5?C=:0lbFT&/iqC/oI*C0j>^5HE9]/"XUWfq,HGVWY(f,\A&4Wkttlj42>q(m,5pT=Ju_>/3(i`f0j[F$)UR?^f=5O%E8,VJcJZ\s3bifJ:5Y9:Cm7trcBbkK]`FBL`s#=.-?1@k.,&ih;bP[[E/3*6"muWfCn1T!.#q@]VpsFf$)e7\YSl^G*`N?Rg=+,,%Db=?*BdB'"-k*VW4Y/A?[.J:%HP/4H<Ypj:T.DIL_-pp0>-Jaj!,Z.+hd+`c-I.Q/k=2dOK2jsUCgGCPkT%PV,I>"h>%?n3rZ1N?%-cK<,8-%_@$kf-k0PAXc,gcm`XQ(q#7b@FLhh6"-N]i>5>\.n]67X!=4!_gdG1KPQJYTPVJ%j0p,?h*O1fVr#p;7a]T`pP&roV!L%%]Z1BOe6/ng/>E-Z=dX1^TA"qD$/7)But8I3f9t/NJu0^_O4br1n0JC2qD];F//mi8!lFS_`7'!n`1gqM6:ol,q([hH1p7hRE%8Y%iT\of^gTmM;I?Q_*\uS3iJ/q]L6:0)iY_Ku.\R7&']KUj[kk@D$b`:jOSMWkn7X``5uE\(,IB47OSQtT6dPDC5cN9<Yh4((n*O6&%XZSZ,!ZBLDmjL?aP=Y/XNJUO.#ZmX$--pUq;h8200[1kBW&$sljVe@VNq7h@#Cr\m's1\l+_NSoE11hH/tTMpXLLn_:g,jsSfFr)%f/=,Wm:`*+l^PDoGRHB/$rKBRlN1HiO-K2ZQ&astN>Y5dF11%^)P.H6(7O%C&**(PdgFB/?;&:t'Zn9[@3*NG8+e&9WQ+%OAXE7;%]]1ORgT*m,mH*?sokk"VG2L2saEQlg6*=a>\P%*ARb9j.J?'HWVB%jP0]U.b?JKDH_kg'fqo"n16@k.@;0ET0aai_i`Mf=R8\s<1%V-WT#.6f6O4)gXC`q,tE$sLha.^fG*2?P'*T=ksCg#0^$]lMEH6,lt_*s1k2_`08o;-qNEM"L3WB$DdM+"@PmWP+0#'A%=S*&ieQ%91tKkfd]Ab9mR2ZU`#<VH:s]J:2:lOV3H2I\1KFMn863eDZ.td,]XV[A$ss_$Ve2LpQ2+]Ir_]=D0+3%Ve8tfNI!mJ0.0uSC(rtp%Z5I64gDIol`i+;?'9WJJOtuk'0J/HEZe@I9GltUH$pKX6q%<[f*Sdefb3Y2i;+3`m9AXYf&HE\ZfhtZn5j=1,LaiF-Gc$mo"pn+p%'P.rF8cY@tdJ;0$afD8a"KJEt++gXKc5,::FhLGQ+3iL+cX?r[NQSLO*O/XLX@n-UH\AX'TtZQi53i-&=YpIt`A1%)O1H%l,f9P9%b\t[`EKNV!$B7"lkOt'.>GV%O%=4ZeW_V(2O3U6EPMLJT^\P:OML"^!fKq6SN^%R7?l?lU7fnh?4ZETP?O!I+F!3H\KqRJ=8-&Y)%lVir\k$enE[c7-BNjW#%JKp5;Z^,1IWYY!8P\8'q-SI5$`?Nn1;4QJ49s5BMW?S9)!4b2(H81:fd]pr+=i=lV:`*7=\5WU%im<ag%]MI%W@=SMGHtn$VO"8OMH9%N(mHdFkQ<!GmdmqZK6asrJZQ$oj<uUf^fJ/634)<qlpn'Q6)*o![CpLsMmhQ.W"j@p"8)oqZhPr;@%Y5TM'6IbD:EqZRi_PcRu#\UAHF>r723G:)mKit&eQ[<HZFb!#$f$_HPAAt72Mg[gYF%_ORF-%WSW%0ig[p^g6EKRLD]/8TYX*,ZL%#_H5)jTWZ3PL*401I*-&,(N^T(O>m$8m#t3qEtClPN"oOe?Y#Hk?r_^O0aq:q-s(#HG4R+7:U?,3(p%-Hqr2#9NJD7hCAgE-VTS<%JRnp^cd0rbX1Cj5m8H0'V@/^sme*#Lb.an$@Fe9qWp"d;3:-!dC/=PRcsiDHOEhj$i%WpQLN.4ZiML&<9gd_t<%1d=o4JqN>U[A;%'A(9p[LMeV;(^;'<8ln*bR!&B9:@<0-aJLS$q3B]a&PQ`3tXe$QQ,`X#'ja<ZH*'j6m&9/EN9qB!qNs34T@84>/R<"jjaX>9*NFh%+Lp7"ED>l+62*,lJg4-`':=ND&MR7!MOtd,m(qZ7b:"`#hT1;\+e8ujVtjp.N'HT%)`pDaS;ps/TV[e[-O7ac>[H!c)pd4/*;r4p%Q6_Kg7sgDI[nB,]]htkMU`$1%rAp/aJ\#%)M^.-[7igft>c<<kL8MP8j[']P0L3BRd6QS?B@(ZI'AcBFA6H(`ZXX4I-L8g&3k[H3%q#k7="[;`#%$[!P;\A,N&U]da=<-88aN<m1b=5_faLF6i^CKqT><.Bs$R\1u7N+-kRS9%IcAI(4WmSeuVeE-_LUaSPBZdr@ko+.0%Tej$TO-IRK^j]POot$rqPV\O@X4@b60$JUT2cl=(=*_h/=1%:g+5X)(D^,^Ne4E[mha#CQlO)Y%@;$K=?]_=oI/S(f^JW=,DHhnm%S#h?ERP@&u2m)";_PhXh+5*u'!nU.CcFGOg'&cuDLhgQHR5r"k"k#^VP*ofsW0CcF(;^9cldY&?<5$f%DJ:.)2+XZuRT6tQ;8)`4%>J@HhYm/>&,t`p=X]j/I9rHs!&Ed(94lYTiX'u)ll>sK.d89GLN.J;1eRjO\XILJfEDE$\Dk&^;c'K"#Ur%sYY[[:rbd61B;2r&?%^cdZW<=]:@+&m?.i*\U-:YkTc?J?"MfukABL(:i4RbedAf04<M+O/E-Y4YQJL[0*4EL"$9hLh#nLm$5]Kd;^Kr<ljYn^9+Z*J]#5%a+8<e3*.QKpOC,>kF;`MOAG&`V.GB$E_3r*^R?$\L[gm=Enl!#HO)g[69KLUle2AF+2a#Xg(LTW)aFkUa6E*XRR)QU?)GJZ8PM`$%\EmB<oAHt,l3',-gq_@kFih`Z@j38Fd`+t"&<f1o2W=Q'/Be&<2eA/pQW/2\O#r^>1h\ili()jD%@p9aIG::irp#+(bt,'Q[b2g\%gRe&2!M_*'Vhq8:H7H8!6&i<EHR.k.':4%3lKa6W2'7%8PTsfX0\6:93'fCUp[fsiod88FCiR7pp7dTrLqPD<OQ+@9?LlO&dNL4=%*^`0a_UT]e2.:iHXiCU`"<tM"<D='1M6(:CpY%W/nE3=fK0nI(=93P,U7`t=:)nE29=8(Q*S+\X@5er@@^=,:f3;3IC)\j=[\S3)%r+:c1D]b5^f&)%;;q\A\ZcrNmVC-e*^mNdZ(9W"qoVB7f6UHd?BmV,mfFo(Eb;'5a:TJ#Wn_7<#]'d1ba&($9^Xq@gFcn;qBTmU!%d^C6G`aJ`=^l`j>jJ<rnA[^:OaN&bDOY&0S3o-e<LAM:Q/J]oFLI.nP"#6J+oC"/)KLT_jG<"Tj*tqldA$'S*W4RNDdZ;d2gMCl*%@m;MqSA&)Qc#F4q'H.QE`m4$ME&UK$[blWDJQkP+QSs11RssuIK/&>f8)!X"2Z3n5$<u_,*;f9Y30CkiQ'%T(\rR5X9iRjlHJ'!$%X+iq7dI6o*=/+sKk$$L*EGYL!B+2d:)NO*krRgT8%+?ucKH6(lm"]/7nhY<QU/l>??jZ'.8bYX#![:51NW%-(6MK&EPBJq6[NBoe%@!Z[$i2F8:lI(a@1>?VbjC:F3Lb.KSk;q49^iXLg+suG+lWrVFeSOVsQ4Hjh?/"XbD#2Ol%*!';E7A/XFjlDu@VsO'7lp@]DpH`j%:!7i80OB[=HU$auAX*d?=jO0)A@.1T*-'_o4sMaeMh.YkqH;Bjcna?lEMR)/qQ`n<7?):>0W#Gm7@Z'*q^4FmBDYtqE;=C[g#L`W%UX'3>lZE^X@Fn<-oHU_rdGG^p5PE"\RDj"Yg>puhX28ps/AV-)PZRX6>OqaN-f!%#06_-:`K@V-kVEEQSf9ZCY+N/pA$f@-]Yfkm%rQ'<gZO#R?kCTj%?4G1[kI8<PeQJC\h?J5DO!PMN9<//d9lK_B"1'<e%6W>2H8C(7-<kW"b'Q8HfUKQ:OmsUhD%:jn#I0fo;o<K4%26:=V_(f054eB1NboRO+1h$nih"MS.;p7);h:,+\l.?pcg?ZBHpqE9_&.?tq7rfe6l^W4YKY6ZHkR5TC_PHs9,V8>C\@-h>P63<6%XGJGIq@)+BQ+#)C*cUMe3HR]l8rsi,]teltMS=Nc.m[G*>eV;<J=$:E5;$f]3;g3,I7@To?O)V&lXu@-K,/59Fu[@DT2g()X/FrH%FRctW@>L>ai7E(i+]@sa<H?>"3t,iPb::$_<E:E;-B>=t-&c.7*RZ/#1#t\Thl,8H@*cbSDEnJ!7h0@X,r*`VY/uK`?W@]$)MZri%mP2XS0DrlmarIi13;g3$^\"7B=Gm99I4t:8d.%=2C+h\T@(Zhsa?-dA1Pu%A[hai1AN&5?)K!Ut9A/rK:T:\Ca]_A#./^XL-,72m%$AG))Aric0qQ`'TMCBKFq)"cl;k-bk7khL6o\^f&&X@MlXR2%X[XHkn""H';iX1H)_mW@;D7&m>>l/Nd))/V2\C<E%FtW9d3dJ,n%36V@6=h/e-j=V9??<S?]D>LU%#*<+!$`:5uYAF&6WiT2\+=bG2jNSBbe8`aO,q4!;L#*Ng2q+R\A?QPF!#(O^BO"^]&T.BNk6=cH%SXB8f^V8rNj"]7!Y)(N25M>'oR=`>"FhH7L!/4aDp0ePb@ffrgeUI\Bf$h9_[FH<qf_/t(%A;'00nk%*@Hh],AZaqm;*=QmFbmEc%`B*E%`mhHQW*<(a\I?(:`]P^]%4#B:P<Lg29P<+>GP3kKgNK>taV?)kfTU8uQGTq%06KMIJ=P!LV=l!$YL&)H_RY4!?Kn%hl+4=W%Th4"alnJT_?GaXEp:[<12^N/pb'Pu@fU7&d`7jG(qmaGOdLe)hW5ZW/9'aBp).(/1LZN#_2E7#[j78/F\@gJ0d<GQ]g!?<[@102r%@m?Qi[!'bNjMd3_J78L$eIJo+9T\hg\"puBm?)(ZY"rn7pNYu32g\5K71FcuVsJa\CMu\kdV=Q8*IEuZH0W#BMf3kEZ==aGeAX5@%Sn#LWcRfq,Z8Y^%D0<Y#l-18*TOq7CT"OMDDgN.dXOTYFL;huR2qc,mUXm!;Lg#=$X\N[#7Ya`fmjfEi7'flV+KF2qm(!/HPGO^_%kOe7XVZ4mh_OtX\[7A`,rL'cmec@o$J9h;^NH*.RE*XCBT$-9U(q6r2HTZ<&RlrZB8,a+`YTkY;Bb#Ki12.6Q>3uou@t.r>40p-/%p:\=2Dg't';:2IN2lh(9hem[+7[kWg[4cl!?peiRGZ;!jI4a1ITL[`FM?fI'\Aj)99'PoLcNR9Es0=XPhGA1(R0G4WZKsG+H*fP=%=F8Fc'\)5&f>Q(G^%A-;V*eG]4U-E"L!AUbi$DD\Ja,eOhN2Lu.!m1H#o@/k7*\g<4PS`bYlPQJgqZk_^"#hq8s?XiHT_21/b(R3%k;3bA\,uqpONG[,SVCX3]"&&2j'?ePVDLiP_\77-l!jhJ1eq),_f"45?@!PIbuQngqlq^_&DcKL"(Zr+!?s7/kLK+\mJH,JOZ9^(%#KRBBg@V,#-tkY,'M$gLZ8t78%Vr>eO:T$D>c"FgBCT@^0\.%:jd,j8lC$]L]?Bq9%q*.ob%mIuNk4UJT+RI%*!_M6lXt3B%U,r.%gYlhdI[GUBFUGBSVhJe"(gl5MH8cY,>L97g>O0;tYN-RMXi>&'Fu\3a++@h=piT%.8)!X"2Z3n5ZcsQ3Tc]9GMo?hZA+BBr/$NTp%k&?SE53"a5jrDk-?cb\3?4Lh9p.3W?-[oaEQpKbH@`c6Ro%K:*1YNh1*.!dS<HI0S&k#oSU?s-NQ#2a/,JEH8[`":fK9t,75>T<?%*k1O]*YY3dJL6tmmqm4@&"8eb4$<Mp)[FZ)+8`$%XtVb7it)FS8r.aRo5"Wk&1Q<[m?+2]:\rFgZ+`0$Gdm(^:UP1=1Y_8XjC:td%:7Dp0\V>=6f@<SDdLa%g6OIJbKM,HS(Yc&$6XHa3;,NWsdr(5imJ=1;#;h3T>#9o?QXT9%O>bhg4f\H/-\HVg_%Irua`QYKaHsQQ%'emRS%(T$3QaR;F/>q%9AuiA\e$csC@g8/cidiKEHV8-m7aoe#LSl5@qaPps[p*L[`g6nZ=\Pdb>s86X#cCji-.GlTHJbUU&_4<_%HZDAA84[ar6_Ah^ViWg*[0*H-.#.paVc%2$b1-RSWeM[!]YggmD_[BcA4(X#S'4np4FYnO4uRprNHX;qqq`)AbG<6`Kfu%+fPJo7%PP:0a@nU^DAuR[o`!AG6W"$ltlh=oOCD1\Eg9_l\[d?SW0pncj.$!`(rUbfEN0^<b(.UU_,Ncaq]CTJ7:RKe;8ZE4FFWG^bFg$f5%W4kI?2K=KsDYqgo"BI&c;K7q,5@nu!-nVdM(.UFZUZR/5;"VqBV?pba"B6>E9@=K[BLp?r2k;%L\$XiJLtdCN)1tL1Ol>fAIf.WT%d:-t@%S&SR_gG[K%a"sp1tJsT:tC#9:uX@DX+R_?*KGMh*%iqBET$&mIMS9gTZ,WL*KK]DK9H0pJZg+GR19n/)%'-hRLt:0IjFXe%?mhr9jVeOkRha-;HX33TR"h[INk4[mM0i$=Q<"q]LLCYk<Elf2QglEHG`N;,p>ZNf3A$pfq+Annd3e4!KP`sMN5=j-QJdS2Ic=t3%#VEC-(.UL\UY4??<VUQf+aT^SAg"j)Yj&bDN*#@i(B#56b%mJ0Ne>Kf^mMQ]_sdHlRsp#+Ke;pib*G-_U\cmhHRKlKR/:k.j6/i^%o"khgE9MPq<GR-BFjiq,Xk@<A,]A%XLB`^@S51\bf9;gi%;N7EfcqrdSi$+?]Tj@CooLa!<Il-:k:EBij^qX],@'K<"q4lXoUQA*%X">7)lV!ig^m&"c9f."M=^='-,[%1Pa0Ql@+dBdG2qj$"+P\oL"PY6?\\E$Y&HZ'=*UmlkgOp1jo6TEL#;4.OE$7&@X+fhU-t2L;%Jjs>6jGcGY5Tr%caNrE<C'/64i1_1SiN]iFiQ9j2lnJV-9aS_$pUtE#&Yj'I.XO;>fUE:Q[?MN[8D+,\KM,h>d3A$VQ(PQ5_:^JW%WrnqfDt]OuP=;ti:YPQ/[_2uAUK-%.8]T]3%[O3T[L@H_$F)"&TSeK$)`X74".1BMWlA_[_rJ2=fjb)jP-+m_htORVEXnO-/&0-b%O1ft:]VW96'riAM:p+11Le%]P*JS@G_[0b5=3;f2Cnk8si(CUFmE#CjgZT$JId",AI1FtsG'dKkEK4.YI1b1,DHL;0QXJ)R2Y$Pd%W6h6QF.gF@1tF#@OechiqTsaa?GaM+G!4*GR7YY:ZU9n:4n39fhmT^H^VS,f=5U2!?!dKIX't/@LV1"Iii(U\oGN:<D/M?2Y+O7_%2d3:WgYlhdIX"Sp<Y(ESb6K,nTQb&@rBE_XH@oskqYeLaDH[3lBsYjbksq@#R,#G2*-'S+h"2hu=IZb:d>n0EkX:X6lJf`a@!nbh%Su]MVLc875UTuKn$pGhjksh/T_i_G,kVEG'^B]e-lXqrf"td1+(.UCY_rD_.G]e[q(6AZD/C#+-RUI6TJ)_a483J%H%N*c'oFV6a%%IacGD;.]fH;Q`!L#6D0LL)[Qhd>/EI!52WnZ0:2?[qV:_hX$ADt/1ompH%2]=2.[J,T)YlaMB?r,VmG5Q'd=g\$J_J+sf:2#6;1%rV,4Jg$nq!pM\s'I!k_c`6]0KIsL!J=7lMWrT3$cqTJ2ql$rP\Ieg2>O8hM=^RWa:f;Ck2M`Z?HQG:-.*48'b9BT!ET)$'0O+<tq%5Me(QTJ*b#VQ[XYYsn0cGi3g>h>ZO<n$-UU[t`Tt\P`5-dcHA`^B0&NQd0+aDJ!Mf\><.>N19YDH?iXE"1`l:!*K=<+PpLHF!4qo%Jg:WmGe@]k&]M>WUY_b0SoHdj7f2@8=:?f:2/QQD:gcU)K<kZi\H$FCa/eqVDI:0TnG:tqQg]D`rJEkT5j?<i9DR]65CWEZ38dT1%?X-rF]mBAMj)<h'G_r<44T,M"pj^]k9Ef<o\"[A"=j]_CF/^_ldnD6mgYbnE9OQ&n^nl=OO))E2J5M&*J9)Q4@7>_q5U^,`F["]'%4#Dr(WX?ZZqQohoKQBL-821Uj94&bU3[s3k2$/`N/&?$l$d]WdZOgX23k2\]*:S[l`JP!Q$M9'q9>F?7mTcVS\Bjd4P6>-]X`;4Y%lP5f#EODF>WOj#%LZHtdW8*:GY3?3R\*>hrgQ=L0bD,$A!eX_W,87-N>'(?C1#eDGM+oB/FE[<VJ'9Iqh.:P"2R-LmJmiM:3<D;O%6W$%:fJoaZl[d\@X#aRi2#%%Cd+Iu"GoerCe2@H]@pg_:0N;Ff7d?(l".8S\%L0p>$E:*Gh@&GFJ.(42+@(BKQLk?7&4!%mqZ/5p%9!ac+B5hNM32bCsi_>CZharqIA>SKaPZM(Fm\L7$J1(D'Rpb@1,(NCf'F>=N(1hoOlkTf#:5_p`X&5.W4s-U83s/tfH*D2.YmCGQ%GhHMi'Z<EkjX:CZgU^'/hS7-m,Db,A<&!S;$W'8!J6h4^da(8N3\.-iB*`,LSFRen\XjZ>*/W],C,$*T-[hM=MUnJoX0JtZeafHT%T&ZN:N]iM"=De*0$Y2X5iVKW*Ro-^d?nnodL$J;<\UWb=).e:k[\MW^!%ZpG]%L[*Y>\**c1kQh166\5;pL7:n)b3iFNk2T9?[[g%j'Ar!A9[*o;GaDB!*s?5.8XWckrY[TJ[<b0F__87aud7M5n4O':kku8IZ&qS=2s!ZUa>Z1)kFsB.M2+W?>ZLRBTe6ga.JpkT6)ZQ%%:pSWi79_WIP$e7;:f0*>Qe/ZD%QH[k]2_Fm9D8;JU/;Eca5Di<MXDs@_@F<q.S^=NIm5s=Xkm:4Votn>8RWf<rn9FW&EFE#\#3[%ZZGULMK6?Rcm`ju"!Yq#][pH)SS&0d#9d$2+Y&Ni\+!Z^7RsTq%h:NeE`(t-'3p%oL#-ruCJeIg`hsg-2ZtW(d2?9H-bqnWE1dM&%":^Q3@D%Lg&>Z"rG,`/'^f%MIj`_gTYihfljd.\-Jh6Aae@$R/;!]J)DOn>4^lY=R'oYKsS-QRsdC(sf_JTGPO@#Y_@=jsMhY<Mr%6nc>XK2NZcUnA4;"ZIA(^6fTa^oQKFf!^HZKdfie\GE(Fmpa_1WP'4L^35\_AIe!QpW6t[D0V,C!-9cMJ=:'REeQ%*_VPKKh@'Ed%o)c-IHRrbt:o%I[=47<"2AgLt_J58lf6[N^5sZQU`L.o.Y$Q<gpbWYo_1oX+B<!D_CmZ#&7O_;`^)FcM5c=-@i^5UIhUZ>*"M`l#%Sujc\GqoXZL0P1=/rIB4BqAe;'EPs!5fVlM:=?,l(kFWV)mJP?BMo"6-tr2:5QR3VZu)k@_fERt!V2_5<@o90a/e,b=R[doRjuam%ZN<LtMe5'_k`O0p8HH]/bKPq(qN2-/G-J6F+HM/ID.]i4fg=eX&61e?-j(qa<mF\%/rBZ%Cr^W:X`8Y'oJL@b9\%'3^D0ubBW5GY%65$*qoe$%(XO0'-O4q$4Dl9qq=OF:sM'*Lr5tXqM6YF5M(>;V3=PILneP69NnBEYk&%.,K)XC?SjRRa\#K%T]duC9K[L9G.X,EmE%T#LM9s(?".4/sZ@^h1#rX`D2gY"s=W._r%UP\qJ%+;@R$Yu=l7fd70FCp>ImJu8o7ZWq,Zp:peQAXFKZrU\!lN-LY"T3uT5jYkpf%B%q:4fP]DaG&n:s3=eq#<#-JD(HKe1JkrYspt[bqJc+Ld!bO$&bWmf[bm<6><qWpoO\l*=XMkn3D/phE\A3]TX,-[b"K9cuek(MF%+*k@2`G7m^'M0`$@.Pd1WLc\1_[Ic'8`#iY@&I0QT+"kRfaA@'Xe*Sug>kilg3LJLVa"fqB,J4pnmIO%l+h9NGuOkbZo=^U/:FiJ%+\&!cO?h^A#UE*B$-^`%[uS-)Yen&OA@NR/k6C99okZL]hDXaME\%CcKTc/4,Y9MhZcW]qV81#<KPFP^XQ*UF#WKoE@uf[(4Ob>*%-5!-CGmjs/-V$q`[fSAURC&8.2L(?)$JoK/je9b$&gmb/6@;h8hD@?DgN-6'bZ[KW>I_H.RV`WCP(p@`V:N7qp?8'!Z`8i6X%<_(%]LjI&p??$<0JJrQKi]0-"34lKGnYW^T=6:0a_OuUOt&QMSG5uDK&s!B5`%&'f$ujWTS`21^kV.'YO'=9C]G-Y@oqmqLU[:=<tqog%"./a^0*\I_o71`Da"W\k1$ln(#fJbiMC<,:g9S1KQ'=*:n4P0?Zn8PR$C=>M70kShNE;O9LP@Vkj7;sHjHkG?^5,.oP#Ndr9'iM&%`@)RV<E8RNFV<1e_U[0?8>a,s0i3!tSqgOWX4*n&&\,oe'h9sVRMM-ZDO;ufW^%,SZO?pDWfSA#[qXT)RZA7$QiNn8&5Z_74Q=-a%,><V;=aQP0M_iH^s&'qRQD5nu$8sahE,L(:i3;11BloFG=?&[0\kS15F!0BJ6T37p9'/i`@Mo6'e)f-!;f//Dq?-t7WBE>GF*$:0%`dj_8%=`hl=,a(+N9365$H:-KbZ=5N0S,hDAD8e7*.i'E:g_/u00io&n"UPg"Rn`H'jqh&$>na8r1(H]VH;gWHT1\1P?/N>>CM^;%!*-Ku=u7^M$W&&T!&iR=I]2#W8K*siN#Sq6iISBq%uU?ei]rU2)-eDR745]+URBrO3`tjY.k]q%P?>DeF%qu5f.s+H,Ierk5AJs:%9W9a(@<)&$h/N$so0#3K!3;1*l`4c2Au\s=IX'n_G!N/C_9ga-h#s@Bo;MTY:Zed1XFoP%D(kKs6Ein"<<P5hmA/^\5%8/Po.(c!%\neSl3NJiTn/<2ca:PFtRA\`[X>-0;4WQ'NRT9Fn5P1<uK^`jbYC;r)q7T2*n(rN,M/>I=jF-V!m\"b>'r:DIJNbH@Z=pXkK>,u)%ThEcNY(>tf(,DK2-o[@L3Kd[L::+]?LpT8oR+%*6bc_Kg+FCjkP:_/?'RnB8=5\%TQ<rZQ_La_Na+o4@@^soGkGgc[+0)g@/+*iI%a"eL5@7(#p7j/ukXOib<<8fV2/XRdSiujXT;WibnAaP;iX:j3FndDfmFmi2=.rp@OMWXbL4850sA_m"p'`l(&a7/e9ULW]-W8JK$%9'^$Ja@Y_B\-CWpjOreCkTYR8Ar"R='::W.b+bDW9am[?c?$t)/rIU9OhK08jVKr`<#i,Ub3qHTiT?AII;=e`3$Hn1TU)P7jL$GO%P>,JfS^&u-4O3^'#.02!>X6QVGTBf]Fa<a=OTZ1BWftX9ClSN3m?$qh]K"$(GdCq7Mk'gW(D*?:DX1p,TNG899Hli9X@XB5&Crij%:mEF/]:IGb)r0'Z<@I?m5he\__\pG,]_MJaG^9Pp@s[oWL:!q*al6EQB!rl=ak9/LEna@!5:#1jptX+XNOG!Uhj2)aiCLGCloNj0%qC)LO"d5t'S<1YHKN?+a,[G5j#bVO/KrR4?D(c+E@)/Xg2$S9.lc!Ja$QYUm9u2.O!m'PcYXe0eA1^N+Z1W\"681u/:L7.Ib$bmc%`or;sp].K(ecA,QBU1j3>TGW')i%csX\2T'"A+D5a5=o2LM8T%CPNeC[>`A^D3p+LnrXr<^?pMp!r!)uNB0=hDkSE]h3.i^X&h]5%(:=\7$2i/UeTVC/CjFEu`Oa(d=h4e$nZ&H&#&YZYY7V>O`/Os\O2PU\_SuF^'*-3p3Fo5A:r_"ULB>IiN+RhNFAsBT2]?lmIN[Pk%R'aj#HD07DWCe"HQMnjLo>S)Q5!!K4r-99o2nTU/.2:Q:>iFL*?oZ8##hBrtpc12CBn'+LNRU0;+kc5MQ:KPdc01<a;:T7Dr9el0%iL;ga@)*5hJ/p&hd_)%HQBiIY^_XD0S&dlOQrVg?Dq(?YA#LSkRHYB2<3WBIYfYkUYj'9W.@=I..mX*3fVr2)C.GqfTtZR^r+_NS%-rAaj^$6$HeHM:-AHu$CRpXGX\C[GoS-@8t!KL^l)j!3(H_=_s"0W5if1Y1kRD#TTZ5Gh79F$MS-c)<5A&*Ue2H(^WN.JS4BfP<q%.4+]H2Te'gDHj,l7Gf_$h//3\97RY@&3c6j`/-:).DtNi<TNh9r!N[tlJO6i/+o%cW)?!5r,QZZZ:jORT5Q;s><Qu4h&li:/-HS^%Os+rpU!Qk_$>0:'"a36>oj\4\$9<`p,I;XVE*'ou)5ISn2hmtN9hZ"b"gehq=,fl,,:H*Wb(M(O!!=a7<MH[3dn/n+&XX`f[B'f<%^Tl/tE#uJ^3.);kc7dKO=Z=Q)G'Z,mf[#T_:0uHeG0[c<i,5YSIb"(57&m6IFukQUAp3Bql>TQFI\]2gI*0hO,kVWl&EbWTkl#T5%m1`,J1Q2FA-B`'>R:sV+TEN@)%Mj8YC5:t_cdT0?MG@!1?+bn6MF?T\"O/;RdPVQs>cPqI5(+M;G/T@<%-Kf`o&E.(,FG;67spm2%Q1+XF\$OnYUktgSoBtcQ]SROi!V&Vi'+3,6+5UfsHJjk1-7S_LQR6Hp'%[HHi%9;7?S^HeQ`On[B-`J"jdLLonWm8lC1<BMNE&M:%26StZd/A4'9%HR(;O4BqDW[q4Oi8ar5Y_-o]4Zj&O*?[eVf<',$V!FHD2WX(mY3SAE%NjOfk1tkVK,HWPD\J-$/hhg"3bm!a*X*Y%2@=KK\hY6Zpfo!hh'+/2?A4_bph7$p.BMO%'==31=mFWNH+9s_Qs.mG2=oJY-*2q:f=J\L6bAKgTWk.J<tasU<D(4X+jUsQ"X$1_%BjG*mM;o\]qCY6ed2:?lC]N+g,,r$$$O%@._D:b?U@&;T(X6L+)qCK2(Y^>rZ#dlEclkYQI.L02!S"BcOcGLC<F5iZ^*m,e\6m>J%ilAIY[juM[gBF)`,C%7;#On*!NSoDFFMj?bo#]/`7($3h4&0WnN1^XJG'^Z2952>1&O7CoZ+*1@U+TJCbmg"p1bY+@U5:V?Tsgu-%=,d=[LleQ?(T^lUa6Q:0ZFcItM@3!Q_C5K-5mscHL$13,Bo)$FEXq%cW3n-R[[dR=MRg\=njEV31L%&`J)GC.rMiH>/J`/LU.>WP%M>emPfr@1=g<?RH'ZBi*ZZui96@pFrHt?okTY/%oB0kR+1LUE">-TkT?<oQd'LT[8:(4Rm"0PfDMg_#aO:a4V(fMpEnJn!XMe06q%;sAU')>E9*:,Ta<B/ro$9:S?F=1t*\7qV>K]IR*6;%"NLqiIo_0&@eNb3:.Q!j@PT\LOLHQ`M@[+CeI@K,u9(H;k$P.aTAk*78\J%$=ul(^hp_*1k;%-ou/Dg^eCgt;,QFoX6]#W4Z$0`_@,<lL-):h4W:h7r2tc^1WBGV@AL'MXY30\+I"G;@oAr2nX&HG!;^#]^Ef$(%8:_fR>/EtQ="I.UKQ0UPGr`;6X0pJ'dqq`BUa^jf0sG[Ck1s$U#[76&@OuA;ZIKB+\Y/Y<FoYJ8bIV^hnet3r;g019[CkaQQG;n.%"TTs(c%9,hZu6!g`XsV6IHZODHkmLr7p!ZFoS;Oi+Y_FN\$E>3"]JM7;c8Cg@0gpjlDnM=MiV@aTis!'_e3A_Bkk(Z1CNaZZ7o*m%%%Pd>'jN=F6oSQ*;bfk3APCdC/n;4G9^OGur'ppk3thB;m*up'=q;:eDi7\!$l2Re,O^05]$%um']n0<_bpt3;k8XqqhTK4/F&jA%DZJq]0J+Usq.-cE;7ur@W-0@SaXYjT+kR:O><Dm\V,#o+06l$pLt_O4BNn53qoEsPj.MEqJLs-.GekG$JV_K#j/0ph8L]&Md71!W%T8JgVD`TM-9Kt+efP`9WS_1Jt(IIW6H($MtUafpX0<RH%h*EZMR06n88"*Qg:@:+M0NgRFc@=BD]P&u[=E/)\5=l>mBI+;ajKo4X%[?B+@np]3[!md/MHGa.[@[o6Ye4$M(D'$LKc4;#A]4b?f3)mJk/?;M*r+IGR/[HO6=mTW(flXWb9aPg,2e,X/M)-MpBfHmnmVpX8%M9-tG.]eg>-.\5oBIlU,`Y>d9Fr8pCS#JSo4MTWpH33Yqo5+0lc?hBe$0o7dX0&CD\,hO$56`g/8BB6kYD_1A&?$[_MdT$UAB"T=%4_'&RhUR6Z+R's_S?(+tXJAl3JA)cI;WM(L5t\]1]?s/i0TT+m@oHsON7huZ8C1jS[,cO00R_e[*&BO3pMm\eUMd,CM@04hc*taV%i90G50H$*e\<T59P).E:FujEK=;?bt2%2:D]-LC+GR'Zfe(5:N]V6I?+D*M(WG$`C(WEakS/q5[0T@;CN7DBTcS4uhNd>A?C=hFh%maIN+2[@^:]"Des,nR+UTN3=/9f!$Y7@S7V=daVC;gr.2#;^Y`-W/is\V#c+(%/F8MA2O`@Qh%9Z3BYijd"<CWV7]q,-C$Cc\e"D%ZL\@)MDr*)Z81f2a]#2r37G&/OO("NfRW?u9NJ3mXkj>N17ENrUVPq]'`11OTK,2(Q<J-%L=ADFig[3dC<Asb<\I.BYn!`C"3$8a%Y3)Sc!Lb$rf&qB8Y,sKh?m2'd09A*q9f5XjV25h]->FGjr;]If\8-PD%DXuFM!,"c2Y"AIf5BkSAdf<aPVe^lmjc+O'o.ec,o6TJ%\%:')Ke"fXrkV%g$UE^NZ`$i(Y@AV4S08>rL!,u@64i/PAdX\Ei1pkfg<H'("G)\r]efkT:>erH@0R*qcQj*X>S:6_*n&8I.5PJQ%iNDg20O[mF;)AB\b&gZZ6\bKeXcfR<BmbahDaN6,--@@].;s-1pE?UtqeaLb#J>G'r;OQ)^NarjX;^J7B!Y^:Q=$4o57'#Z0)Ch2%!:!Q\Osi\.!3@%^P<o7rcoA?LG=N!>%?>Sd@9gLU"HL_Wjts`m&]T9;95?tiQas!K3T@FVK/%iHbMDh.9OV]$7X1Wb/1qm%<etK(%_oO_*iq5Bk=$(MHGdZK7/p>LGNXR[nSQ-0!Ah*qa-PV)oQ&42C"!,0dEBUb3DpER)q@-adXQ^LH61iR?dF&QT?QF_<U^Z:P=UN[2%?kgVb']H2$-ZK8=K'#-&:idqD"O&0sj:!]P=10B#GQFoCQ@TeP)]+aULo8+\(\Ipn$ST%0??);5W)l,FCP>Qch-%=2.WMd>7/_^5%S4<Yl1gTbn!]KLk+Zf[^7HZLJXpC9M0S86`AfF0?a7k^JRmC6K?.k)k*fMp=o)UIa0Z60CU*O^Z.o8Vc2GPs73o\]#^e=<?eM(>J%n[X=+1.aLS'mlW^4Z6L]\(1gR=5:kUQNQN/f)iM.SEp)jZ)eQ?pE7C7fqR\m$5>uDJ=<(!S=FC6;`@E1\WQTD&5UlSQ;"eS\g,"6%H5L);.KrQg'l8I"3pN::W,,=$KbOa6^/NsL+UB8hX+YJ!SF>mbTL3cM/1>4S3:A\Z8p(N>ITVG!<q0ZZgbb5k)O]o4#SgYY8ee;9%D*d.hgZK+GlNA@g]/aFH+FZ/Gc;,M5_Yd(5bemY=gi0OsOB>N,<^6ia@b7-oh$)`XTH]<,T$@pU/!oV&2a$4V5ja)l0$07$#D4=<%>Ko4j!Xs,(N3>(jr<]hO7^..Xcrh9Xl1&bh@$7t9CfLO1;%"V="^i</<]&?_ha$;2,n&WM6]fH0VN:'<]c.^KN]B$V3DnSAM;k@X%aJ4<mZV(Shcj-dYaq[ED"K37]_!:'INUA@4b=![%-l1sr=s6BCCtAMTY9Xm:0BZ3K=Ykf=gfO=LWME8=!ef*%.q95\Tn3g2C710l%D6p(]E?_5]:1,q1^#`=!!aHYLNjD<X@SP[?nte^.KlQJsH)&5R/;Lk1eXU>Hk"Tg4gB==i/p9$\+c1,EWR@(Z(n>hUV:dg@d?>p1%7o<Fn32L._T8mt[%?+14bdusWH;OaNN/S-f6`+R$Oc$VQ9XtRC$H"!K3K-sVd:'SNJg>n9!<u7KKIZEP&m@&+QHOe39Y<s<Q$'/`%#jXq.ELfR^>nA#DJE+cmB[D.Z/=AVTQg?C@:1M,R"en!$<u`)RMVY;DhafKb^9XT+p9$IMJ`l4,,c)28Kb7eCc@ZtXM8`rONYRIe%TXDonY!HYbA%OFX,+N==2s7eW<!?nh.5!pYB]*b\.,O_P%'71$-lRa=c&3=]>C/b"a5)Z==Q:Y+EIcLF[W,MD>T4.t#0(ZdDXj01%U9F;(9!E&k")L^SZa1K^_o&Y^XP&>;Sg82We$8-?Y"1JS(hHQh7l3lkWfI8;U+*!LlnP`rXVqRT*P-)+8lLlT?BnI:D>5Eod54nc%c6EMYUm[il;'8rEU6o):ETEd_)tMtXV6/koE0ec5D"jeua)O==1U%o0h!K&9IoKrj1s\?R_EVd>0'j]g'd&pR,tPiJfU5U!m;2#j%5N)&opk=8FQQ0DH[D`<TMoPO\qY+J@Bi983hE6Kn<4?`TZ_hXOY[TXo"Yju\8qCQe?lii6"A#PU4[8Kud8l0eKG!2GdPau62:-@h%@,[a&Sf-l>8Wf)UlES/5mPXH;-&hufQ4!MM]bUn4[SnZTkqH%:j1KqkgpFA/cMU%7:s.;WkTh*F^fgspc5RO9Cd\9DNC,=MHXd=N%/LX8=NI(K*mE-Fpn#[GMR.MV3js'"u7l2Z3UfRTXI^BiM(r^Ah[UrKVZ>7BamQ38)QK.+-DUhCj3`rbYe2,k*QCd!JQYgcC"hr?,%P\1sS@C)m\l8GSdNs[Gc.[G+>nOA9fnX>Jn$7N^t>*rfa?OAO1I1E@[F5X/)MoM+21lOJK<X#I`Yr2o5g76LPc']/UQ>i#j5A@)'%@9Ol'SnF[R1`c9HUUB)<>S$DE;_+qW:#9_3r"nNb,1MVlYV<(8Nn[--hGMMEgc?QD'sauoqT)/cK>Da/@13oA2JCZL:Dh27>gTS_%@#q'P;]Tso3"Ac-$AEB^?>UI243+!\fdKD1=#Xs%L3_=fNLSAsNdJ:%E._mraj_YDb?'QDaL^nYjA?VLj/e-2ND$BX$7qAb8LF$G%ZfTqF6?3kCrjftaRRIe<.-1/j:!P<iEs,_&Y3'=pBi1O:l!-?cisL\`A`dTr^k#ZN5gm.g<$bQ&dD5&<WZtRZKe`8?5omM14q1"l%Pp/dYMP/"c78ce]n];,<!8&Sjh6Y5,4-Oa^"p/_TGdnhB=j9X7is:Tfg+Wf$p]_cS>U;[g/,VH/j^`h4-7LSi&R'&H':U7(.+"B0%0uO#^_9J?ieQ/,>Z`mTa.)f*MNF0))-0VGEO&$P\Dgb3*,&dt!%k[IrVkmdm'moGlo$Gcal=h@p5Be4"@F1G;,e0)"'hR5@?k1FQ%3X-h;Lq)&P,7;_[#QrU!U!)6MI26t]i_0Hj[f7XWJ(P_#hN)4$g-Id&m51l+a4BPVWrQs'_p<=-4Dck`/==>N[Dg_Zd!W)S6bShB%@/n!C^"]Q(99LRo"o/\l73FJS,jlo:Z$T+S&kbb$Wp-AmU,c5M)nR.ph)+tT9m8NPO1"-(=[Ioiach1nMA]o_(_M3O2uC`_ClN@k%T0Sqt96%`kn_<uWYRVA_#D8SF"li#[!G3,a_'GLQ0B@/X_UdZ07$-7.]n[P>;nX6s<d(=pJ_'n6Eq*,5kuu,cVT$trGs-T(2'msU%!@/S/p/K#7g)a#Ums'MNSr7s'HnqM>gIcJ],G:OuqBHKsoF:7i'3me)(jm,`g=HFRkce([J3CO\?/K"tDdfGR]>,agE>Wm(-c&Q3%\^ZTAE*S7gjI\#Sp:K5m,N-U-K]'lT+gSh_`OJaJMRk*,^kIc?"pP-oXQp3%U`6L]AuJ4oY6_kNeu-dB,U3J.;*(8`\1(%H'#3J?%;JbnJ#c@jK*e.H$^#I?"8k[*CUgH3l$F_T"]l>VrSIUd>PdpZkjNUHC<b!3OJH!dPNm0rpA$@Xr[rD`k[R?S[+fdD>2<,;D]'8Mt%4"r5_1SW*r<Q<[P&9_Qg"/=UM?ro^R`r%MG\84I<nIptlU0XS8lhl=bYDLk*XH>`8-D8`8h\Yt_2'=p!+\@7J5mg2gi#$h5p#Lbi%Qrd@s_Bq>MN2gh'bo$>t-TK?&UkucgL;j];bms)7\:`hPqIS`l&!7YfO>E>irR-DpEIu0LhOuXZfgR\>r;(\]4r77Vl!H4J"l,m5%LBFnk[r<=!XX_.e+;DEH0$BppS4S%bmh0DE7YF1b2"PiLY+/-):](es"Ei<MXs=icbJSRX9lH.d`<'&O/N5MuZU<=2m#&41@O._m%>k<f'_Q!piifCA'Vn1k,',c3t:&pg7N7]G&[-dn_R/bPYpG=r:.$J8/qSjdNOPMN3.3i9B4\cq+E%:DDb_-pJ+I^9]I$-2fXR?2$%j8b4?NgGC&I*=*B\Bk6?"8n:\&H;L53:(/R5V`K7$dJrXPRQ7C`->a@QVN0YZ:BHXhT2:oCT^#I_0uD\LV_;=`?OYi!95.O#&L\7%_@-(I[F)BAAn,.d$]"*d*Hsc9q_6qNmknV4f)SCS7]aeKW>!%#o&iQ0]Y!iG2!-m0;8os(D*t3[N'O';pr<I/*dh3&lhl:dJY-@7%XR)R7bD8;1rM]Z'cs)Q-%8*;]"S)ij4@B!Q_$rNVWb`IuX61(009lk?;9c<m:SrE2gq3u0UttSbkO)=FJ/K4DhiT*qe=S6mVr)f"%:[N@plsUOD2dgqeAes6l?W^ZM"_iP[#U;FX>%HeU/tmoS2=<feG\8XLXII<=YQ")3lVOsG1HWm0].lF$)NtUT0n(FK7.L#0Km;X<%+Ppf]T3Kj%CrXP>\3*+"!SGD)"^#;lQ^IVA6t'NJ>#=@UZ7hukdDk6gDcn:l^Vf^..f#`#p$s=e-_hen?F:Qc\/SC4T%k^RMM!,;%O70C(9O9(Ma=PE6/s<FX0*jVqq]aV/h6AL-%<<_D1Q9Xb5>N0on9qpbd!==[P[&'3MnO)Dr]0<RWh&H\Z9_,0LEY:DN$u`MoL"7,%VM_QfTiQ(6<-k_]@@02FH*:teHs)S&[P)0Kp_+g,)7a2bZH!&`eEap\p,)Z9iH&H!&<nP,rkc.F_B$M=%`6RgB:)[^j=37+Q_k/+%D#5^oLfQB!;b7Du+eHl=eB)<"WqWR;J^!7GC+Ki0_D^9:2B9MHO5nrnag)%QFgh$>&Lh@/UfL+V!b=3S%?41DR7!hgTG_X_)iGRN%)$F6K"5I<HU5/)M'sZ97k/!>mX;?.r2[LLPUIN$[#f0jnq0sU6MVX>]ejg1&/Q.s#0gPSF&)8Vo1^.#u7Ku?JqN.`-^U>!;hGkZ)%><9s"4rb:0NO`E`3Z_#6!5M<Vg8iKN)-YD(^03T_.LA[nkXEOl=$)c52f,X"ArU!+HXfpaDg)RT_J*3&*HW[-qLB;#=XRE0>LPUd%"IEdrI%]kA*jKLUPY+29N*E'D/H"+tVE(3C,$It/nA3.!aEu$MZpk2CC>>6DNT3@(>NP[HbaV,)DXH^Op2V5=,m[PU;#uQX/.e&H%5<#hrXcPQh^X7fqYggY4`eNr45IaiRQI8"%CCuC\e^b.=Pap'hW@=;;>a2,Z4/WrjIcsCS)M>2=0eLpG/]K2[rs7UZ&QUn=pP0E#%%Y:67aW1I##)Vf!fcCf\ddpotd#;YfWu(eg-VX?h3/I&+k.Q%F32nj]R@%rX+jGrtf]d"ifu"?#61D[1if-]6=*i&=9F\==-*p#:%lAA\)8)9a'ZL7,D.9'>_kMEk[:PRA8<3,b[^BN,mE?E"AW'E9FT'uE[--38s?<1[U/ZQ"Da_5k3AAD%/nCrKk]?_At=A6VoLIJ1g%7hIW*f!Q*Nb1J-AhAY;I\;6NQ23.Ogk@u<=d=/d6gToCDOG^eBajma;.s!;l4fXd9&U%_%j_kmXYq*2\<=9]CUmP(G`H^6\J.?%A%*WYpgB)<Z#_6lZO4H._C.TF)@&3kbd15Ks8q;:181bEs^'"NdDJ+mc.Wo[]DpQITk93,#_fV?aQ[/+Cec$fHbHRp=82HQ2PD2/Dq%CUKD/"4UH:Uq*koZh13mI))7$(cE(n9k^2L?%?hL$*R%R]Za>,lO!<l#\:9"%1Sfg&ONhc>Bj;=ZYLUfAsWRUa^<(sR`j@+SH;0f%=QI2"7a'5odB7S'8Wo?.`_[aB!*1j\(Q47_1R(N&QL'*!ghM='pr"Hkp\%7M^lrjDS"Yg5Ta`'\Sk:`t<;*d^GthPbStI"[\JTK>%Io<,i(ntf!n.Ge?&HHgaXtmcn)!"o<Wq4rBd:]sYV16pr`\Q":HfUp[__WmS`SB)mWc+gZ\m62D1<J;4iPrg4q6W2=>@&+$C2L68%ipXqLZ4OF,*Ct"2L9X@ME6fMS\al3!`'H\Mdf`sI&e71Q/,t'TjbgPuLL'LZ'm-kL`RG1W@Xp(4]gbL6N'mD4&B4PgEm:p+g]p%`%9ZVs<AHN?a]'.sT#h.Z42TI(dliO/`gIKE<-G$&U$8VO)PdjE(Hq;nl.N:W9<!0iYe0l.3O2:cRlWt8g18He3HA5n'%94+G=_[>)%#ipem:?:f=:A"m;af>9Lg-4m63ickN^:+F",r>CobaeJ3$="Ic]o_YKrDd,2[Tn[o[Q$kknH0R9&6WlYDl*(V9B)B*T:-N%hh?4@%FHMP/U?:1b'Ie)DB+D]ZUdSA^"3Wc+/(n0EgVtN#Ad:8ZW@HIK6IM#Y"A'+r6=!Y,>/I3i:)'I-nt%c)VB?f]6YtY\UARDHP8Om>%D-8VDo)acBA))P!:l1:3lAB+n>UR;>bS!9BgYp%Ums_Etoi1*:R4F>Y_oG*4bEn@%N"TEN3%:&K`OlWin-BL5Ci\4'[OTF/qY=EA%@;\nGRAqH"Z!ufH,'k#\gWV1(p9>kM^pokJ0r?PH!>taI!QMJc3%T4@l_l2mq"^se#^09Ioj^_WAOKJ*)]q*P3-d]kf11f3W/U:<%-(-K@!O7Fr_(FB$VlK^m&p1ANZ7,uhNJel@-ij[&iqp^Jdg4T4oDh>h#'eFW4fo%:A.s9/;AEI&YX],+KXr;No<gkD]&B(2+c'$j%Lk+m5GR[ID]%kS[LJJ^]M4O:I,mSdK6St*fcsh=\.<8n95X+3#[I"7+[8j=20Ltg)T*#XLq?6.DN$("L0!tH#1pZ(J2=2mb9ltmd%XgJ4BJ27aX=FtKp1BbW^f%'>^kG8i;1EBBI70]bF]('=c9;'W"3nD.V*Z9urfg9@q"be@`^s&uT_l/AI_^WkY?&&?Wq4l#B!,^&R%!D_$O6G(UgG+Ypk2cOUt!?c%]$6_D]P<IbJI5>AC`uUZ8$JLHuVo5!(L?*e2nNs\T7>akb48X@ECmQnB["FR?^-AIZ\6<!n;i^\g%C3>CV\u>8b*EP+r`=CV_UFaOkn65[:?Wte9a5A"@b7GcTMMJjX23]#eMm8su1?E_oe:Vgt)T[Eq*]mnKJCM*riCe/tm&R),)NFHO%HDF%f<J</M'J:Efhfb+5E1^tjm)-N).MG1FVIbTpfNrSVO:U\6,D7[ifRda/0VTGidgRO[m'e#K=YGo#fjei7#a7OF\gC(!&W:Gs%)A?st)a6HJOjV=/r9+'t@/r4(=Bo;m]3L#_@]R2^c;lFfIH<')aSKrXH7g<ejeM'M?jMp^RIRLep2VOr0Q4(J2*DI,J*\WFR@UsD%?"X$&*l5bVPu>*<5B:$nWXe(*:.Nf@MZ>lr2)[3YJ1/^2M<Uc,8:A,D#7d4T4Q*_'"+K\0*O=I0f8dtE697:@$Xs$[>`KKVGhEd;%T$T35,J:Q=lsmZ#5'C.46S:mBkr0?_(!+YVZ.m5k-*pWOXS+eT"!#E!1=]q[oS;]\4[0hUQaB8+AkB#4%rH"uesC!YFKQn,n$Zi;%a,&q-N$(<()&Q'780)b>AWf&%THTgj?3;;\kkZTr=i:f<g)3m3B'^*!A/hQIIFgC[b%WdUp5lGVhrj6q7$s90KMZSgo%f7q>A'+_%q\(*sL!n8H?gLJ_QLe2Gd^c,W^+OH,];r36*49pXOX:\"?d?b:cGtC)dJ4AsGe^s%$3Yp<?J[UZFqY?q95>%X#fJQbCffij:6\+6%_esK^fqWHG7aOf17#YuLFk>r+7d%Jna.t&#3M;F\.0\$SqgrR/=%rscQ][kT=&.)Ib7J@NOoJq6RL&I*]fBLHb=lAUC6t)\]8Ic2%a4`*f7q5\KCcbqI]la[LgLKthh12asO8Ll<KaZ:!-#C#gGriWl-EpTN\VNoDI<%2ZYpI:ZZ7jct5"#3&e6H7F2@(h7TPj6eR(Z'\%&@OHAb)WW+qoBYHTqq:t.o>S$T+WmU*C[hB?o=c'@TC4`D1MCeX6bB]!BWLN81c/!,<epW!s,n*69d!FKjEsmO(=M8W=KQgfWlTG%.#ZbX-huc0[ArmS,U6t)a=eZ+:TK%?foj/0!-D,NfT!2R\@]95>Y9!LPE@&$&Nr`Qkup",GP0"D&WL<aWlKLKCt'D]HWq(S4:-"W%h_N=Iga6>g)k^*G5m?m)?AoZ#:.8'"a0_)1Y9I5WW]I_f.d>XR_bmpT%hU7AVRBOSmt>_+]3-4R'tC5u^T$.$?Rbl[/Cd<\OW9UK%dlk!3S3RO2`^V8:j_qG(oan<k=oN*nU&ikfN/TF4b3Er%>GThQK^\[]>#`S[=N$=i:Yi)HZ[U_q9EeFT0n(ru@a#P%7oF@,OPt_K%f(O0C^)-Z.D.89*:QDI%I!(T4V]W_\<:h#YEM+0t#PYY-8*CYPYd=7ai^V,dhZ-*%W$"<%WX:\A)_gFMiK+IYf^/2Wc_=PicV6nJ%I)$0Ibrt.`ZuLAVXjG)U)*C=tb9hX&5/N+lI<,6B6$[lZ!d%,DSoc.HRQ-Q#X_'"E]BcqC8\).-a3"U2W9<1^2N3Fp>6*jc`XK(M%n*&EEDE/DS[OAWV&^8C-Sjgb5IRliH5%EZ>$K`.@XEE+VGERHbU%ChfA@J6RdN2=!fOiKW)B]*chg4L`%5dF"`smc=43`01Fp9Vf%4p\7Vn"U,7KD@uPZZB&cJ/D=AZupcVO6=(j+%nNgR&$Xg\u'd]>LrtTVdutXo!^[g9I:Ib8PLO5Xf\Ykh')e<QE!;(E`3*Xn_7t:%@:%2lYfYcY.+Y*$-.2!(f<du*^f`L2mh@*j2/[Gr*A1O8!'PK@r].C+H:ftXngV/K*a_B_dI$4U2MH(jdt?tT[sPK=2GbA3E37LM%B@a1J3m%4u-YrT_26#-T2VWE2ld`W&Q]`(^Cu/fPpmiVoBSVrfgF6#Jr*6dtX,EGpf15m`@C=L7.:nZg$++G,46UJE7;d/_Vb[sk%MmpJ>0_.gcr2,dTh,O9U\RqclCqAG?B9^6=pQ/R'2pm/_%"MOh[TFdP>*B?$W/&$0)!<6@!W1$oPmZi2==RO^:aPBqP,'s1F51K:%O_k4OH3MCV<-=P\X9)=;X1n/%`^?Au.>;0U.WEZSUGNSt9^-:`AJe.NE<f'<[A--W?PjP`ThhLHf]p:k(Z;VkZ,0'g(4hl:&HBA!%@C/2Vb@-U]/L5B=&-?+mmI2'5n1<s:dUm^Z/ed:79CsqR$BtkO\]((8FcL@*$N8MrH.pjhF4BphSp3V)?cC]1b<%t7]*`4a?O,.j%]e\XAI@r7'7;ka7SSn^-=XV-''emu1#\Dd>O_p^B4M]gLnMY9Hmnmg_h5oIOY7:_#6iPZ1fRAo9FN@PUH6?i#,V/OMaZ7KX1;V9g%15PJp"HZ\OH0npldkJ*j%#13_lpKN1e?=1`j48/@FCjLejeDAsO^Z>QnOfs&[I+pV)0r;!8,3D6OA<&lWuas,0$ap&8UE33-A.7C%Xef]t_2,cZ&@^d\@LTB[buZW@fQ.3t#6*kb*d;ihOLtGcnf4]*f.L$TD$a_eXkIH(*2@lkaZeuTB0D#l#Sa*0C5fL<i,jA69L];P%p,f;':7gm3aN:"jOs)C[$%<!g^G,2?^t51U::I"Y:jbm\H3_QQkfLV[;l,Odm0H(>LQM0"ieq=DSol):4DhS]p;$qb4.-5QlU-!K%>p-kAf!Ps0,$_#J3sca@<m#LbK@hP_+Ioe%@64[gC4*koqoL%A#B]<[aK-T5V:I3H(h`-BQ3`0@<TEai)hr$J@]_0B8i@a9QG*+8%([/\Q-CU7k0mtH%L8]r@;T#@)L:mf@qseBS0i+-k[<D#;:r!OuW-)&RQJ`+eMr+-@^gG=;kZ_#r6ZEmrUm<XP7m8,HK)&a_/AQl6%V1l)]I?g+F@KXf<B0IOB`5`&@-83b_p*ML\S*J#dkKU)3VDdh$_^V,Wac@6-1;b9sVK_=j(uSg9Vh^;%rG7#U?=_f&*2GC(QL[DM%T4Qq!ruNa)HfShSQ'iJOBAq`H<uX]A0LEjJPJm[=EbEG&"C+3hJ;nmPiS!5:.*UQ[#)='-j?:F8C+XsA<C"(PI:'P!eA-D?OO\EC%cq0"_"PLfd4-U*&N\\aG+NYESb*A6%j1mN;^[Pt_F)>4)3bJt0?Zq+kR"AhVbZOL.F,"\s$!Ug^m<?b+EKoZhNh%)BfPt]B0'']9%eX9m\.Q_&h1$n&7?(Ao*<nagt7oDo5X\tK!8PbkBmf)^`Xq7B%,@Qb2RSrWT"l&L5X2A2jb8X\%>7gupVlb_rcuo;o2SB`UA!-/F%)o4uY6^%+Qio:%31&q4Z=Xkf[?>P3^X3tn-++C@/SM19fGEURbksKh>V.JS,D3_ih7D!",T8P__eWT?l)?-KMd.RM%5?K["j248T%.V]f-^5Ala/?DkEBN>-#G&*Z+=FHbJinmf`,e2EA!8nLE[1Rs,iU^PbJp''FcJ(ATd"ue!1XBFJ.9gX/hPa"!s(_R%LPu*J)X;0p%066+$b?q9o"%k'eJ\mHJ,op2W8@'#P;"c-3Z!LhS%NZb-egJaLD!nPSLp=k-:kEJniAB(R5qO*!VtB:k*J6go1`b't%M9O>ml.j2%L9EF_Et9oMHL:BB+dHdOn^2i$2jV+Ei0o1C)Sb00+)ca)NNW6F%ek^B2_B^C"M4B1W[_#d'ac$F_IPJ@qN=K>$t1D.V0M.t#:LG!%@gobq%EV*,Mu@1D@(7H__GZAm7SPE<=K8coLhN!4G&h^fC#oA%,J5AD#*4rdeO>q#"N.TR(pe=:Q69i4@.(ug3'Zs-<N>-CB&:V?%/[6($kprl.rXO'gPM5]-"ut=M*tn)7:sM,NGHC^N7baG?b8AAC,rhIL"^$8fNL.8tF<IqbNK0_f4s\+BnP0(Cfe/DTlZG*c(Mj*8%@5Nh!%YKBh?a\tGgAm#>%[%-X/1pqr+05$5^>P93BP19)Q#IYm2U&)2!Iu#XW*nmTDuch0h2f2R;`K`)^fTAtc>.iV";4eJ@UYa+%:e^5!8X\9QCgo*`eg'D$'--)Vc%sg:\;i+MmoZAP-W"t['&K**8*==g681$<0f.F_?Hl!@K13h`$HG]aq+r8b/8aDFC'(e]ne;k3%+]I^!:*oOfKL5!F^U(dl?Z2k.l7"B8]a\,$`7KsM:U3WSa#RdeOr>luN]];5MR4V!mB/"8;ZcLN,SnkQ>?*Pd_s@b?dL\c*0,/mc%3JfY`n96dPS$=[Uci$?J'h"&N"rM7MkVWe/`X1DQ&7N$22">h\8VWid0*>p#)`,[j5jaN48n1NOdo`Sk%NWs[).+/(nl!HT\>#!'%U,,?bolSb.*9HSJc>lnrr?rBC=f$_'W:mNPAY_5"V*$gi!'`3R6qMcZX8!nBS/r";GbQLeA/NlN/K^a`X'AmDm@70rTUiKt%3W.J%<8O^C;`[>OG81;'hH.f\Z#@_GXB,S2U[[Zn=c>QTFn)K;'QB<t!0PDu`C;Wb4l!ni`PZS8$JibM$lTXH^Vp_t0r=E>A6l@>'[(f7%<"dL"L4&$_rb!n;9Vbf+P'n*_^GVYk*$BHJ.P)q2D@r&](^L]TQL"IQ^IMHK_AINR8E"3^rl\D)onjC[C[:JP3"cA6-[OG)XJt:@%6SI/r\!D4Q2Pd?`PX8pKc"P)Z*FsTRetr`3q14r2eFCc39Jjc*;f,*+aRWb6^;[6;;$hj$+$h?6R&SjBNC,8778su-X0S12:fCPn%Fpm;oRcB87Lguju<!=(EglbU,"I:I_>9(eAe0lY?M@kGgp)$B=43=[9\(gE.>C*Zl:J<%,R1BNF5/u(a5sea#[,q.CFB4Sr_.3P>%ErsbK\G"qTVu$6j+EK?a]EVd:&Xp%7,c7T!;r**4[H=cCHtLu+;mUtr/+-17mS02A`?Y;B#1=`"c*hO[cV0gs<r?Ro/@jF"cB,W>%\PI(=Sh'?$o<<#`NsZ1*DXFb9gZ%=d$\!V"k0*H\/E^rcgEWp^o'em6pD9V+fcr:J7X4:`Sm.1l/V)/n23"1LacUGGK,%?00<ZbM%KC:akXO(&"Jc5[+R>FdtTfFi8RbAAmd"\4-p]`XRh=nP&=NIcWQ7YpT):?`TQgKKe^V6S2HhC@]B+liL5-a>@2.P(Zc3mmd5s])%%nMTBqj3"*,%ukE4Jksb0R)r!+JWlH=QIIGT3h\bQk/1Q#n!gS:Ym)#akn8NO9>Ps\0.Fgg!N9;mjZ,j`DHfVDLhPNe4p;.H'3mbA%jXTmt1(SVXbne%D]BYC?l6U236AN]!fM5XfTp&#@LCr8J9H_1(%&,qf!lG@^#'-I#1,e0a,qe$VMgpS%N4WYMaiYA=[L"t14pUte%`<_.keM!/CJ.H822j8oh(LQX@a/$;j\@N,J_pj7C)?APeDHp($h,H1&0"9./4ARR3B^n,3DbpnqKem[bcZRHfXdqRY:PN\U_GH\o%7j%dVP12Y+g%`tB^Z`/p0;T,43a>s2[PIZNc8-5oUl6lmb%1DSR>+:N'/:urQ2/L4lWOs+XOddH[ga)^X5cOAbcOLup%*r,?iKi:%Dgc`OhNF8t>dC;\2)l8<=4\K8W@>eF@_`kdYB"ceQ,RTR'g^,d$EMr6DkOCZ8be'e?m:e<RJ@rk'=(8X=6Li&qV(UMKG%H(jq'75%6Mm#Or#p+FeKXLC?[>aJJ.$&/;'4CFiKod>X"$OpU19MlA>.)frYPW4nW[[oRe4ecPr;dEGF2Jae%-Y!ME>51bKHNZUuhY_TY!l!%XJ%uXd.tGR][g;YGV&qaVE2lO,@$HR<fr>D>B&8@8bB+IC-qNec^38LC3&L@JDnrS<#R:-AQ1Y.9`-Y$!k%q6IVLAWRd-bPS"tD^%28GRRWAr!Rl^H9F"DiokAuC+4b*(pnp0E`t?>&cJS+-cA!]Wsm_:WB.6WKt\Lm!1bZYWcUP)1]<"t.pu@L9"2Y`?#=,=7>"%*M!9%&CU/!QZ=aTOIef4*L9AZXkX6jOM+F)pi@kYHC@*<,LAJ+5SYh[-o(3J'qV=tFW:"X#Hd`9!(*-OGR80dI,@kId)T;cfHd36P$P]0%@^4$=>l]\ST"Cn+rPSFO4na:^4tY9'Su2JuF/9'FV=ul$)NCYYE630Ci;c'p%6m6<A4Eq'N3%Up?/gB5kL24>biM=#gb[#jDM'EO%r_*>T'+jZ#E$%`uKE48k&tnb'QB@eUadkc]]Sm.g+L(XoC(p`f3!S#G"goFfbcX07\XWuKNp!@ICpLSIZE[^oYE8H<Z(U,EHFSqs%flWC_mM:R922S'-@a:bf%]]S%*luWUr>Z"QetU?R/XB&WQtK2#i*_8r@c"t)OU?,q&64]U7DWO1KY^rTgk'.f[Y<517Ei05Q!Z49%F.=C/^+OOu].NZH/sZ#+&]Bi>EOt]A'MnfU>gG2h'9!-PmG9:U\\o?K=c.uN!r-GQ-/l=-9V>o$fe(uJ'N90R0'nGS@i2`g4;XHN%=hONX!9dMiMP!65n);^rF[C8lmo6SpiAl>%b_#I$".qd[[Fu\7g[%"l=6@dqFKuT7B<r6i-tQmMT#%/+0!6>ko_8h&%R8]7#619B%BYI5Ok?O>a'AM@$o8\fC-d6Ch$XemKbCr#\_t+X\Y!\O1M?gJP)OUXWfIOcb\!0988e-ONlUnR&W<bIb`PQM#lq%a3RRHEZdg'X#%9;ON[*-jT$5a"Xg=IT=m?Gn.]e:q7,0/XtH(@)#k]/"';hm6h4kbf?`2FraP7.%J8<D[ik*W-U\3FfN!WaJ8Z4FSCIWlO4.pt+j6%HA%#112P?lnG\uG/UWg23Z2FXW`X3p@:Vd+aB5RSkqK^GS6p+1IEL9Fd'#37QQ*QTi,.`mB]aUn=n3fJBmX]ImPup_WEdH!e+8C'%fP"WF'KjK-"59A$ZI8N(6H&O-q$=9tG5A%Ka4f;4A;d`86]cZ+!fVR#@i/,g\2ng.3$0jGM4Z<W'SLWU[VfDBE\/c(fe3AE^Va^B%ZR,iTL-<ON-`'-B;;/EN,ZO7Ac%lJh>`aV;0A8-](2RCnl("S)'sKHZonbU9huUiQbSgQ-`^f4L.B5G>k0"l+Q[Kg&io:0Oe61Mb%/K-\^H7l\lVg`;"&8>\j_9XM"Ne,^+cP@.XZ*IcpBdI7g2@"']CEao@O<LcJ9F3_6;eCEqk>nu,''FZeJdNagM+?KBhq,D>OqP]<%YJE08[$'$]8TVqXRj2\Br=3=f/oo)I,u:$CLWY7f-htMDf!&,7o8Y5=JKYr:'[oF,1ql=Q3$6FGj:c\d-Rmp!iV."+Ok%BF7-LD1%MknFb.,>bU0(/7L`N`;:Z#GRBJr:b!nKXS_/6:0[ZlZKgR5(4c!t8]KYScW93D-fBO].,N%ggg"hCDoNiON;U;nUGfog)ZtRJ'Qu%,L=osDEkS*4GReQR6"5eEBNhjfA':$1!b@?6h!&.6$&e()g;6oM!A\I[H%p\,kji!)+tnUPuF;CBfnHA+%_meI9$2n!,@!H-m_%5%(r@pGO_.ZfcO"6?Im6i\%,(NEEPfVYbhgf;NH,(]^q[(Dgl0ID4C+YudJ7\o!8DD%g2Loapr!^,3Be#Rjd&MRod>qZ>Et0q4m\A\%"]&,ui<2CqN&e'BW]IaiHVF!P5:)i'QiI+K:Ji#.-mej,5pK1dTK*"Y1IhmYAjl1Y#]sY2!b?\_U&Ko(6:XN@#c=n&KS#hfbEC):%4mtuZhopl59UpWNC6LTW4;,'a:)jQ;o=jef3D:8Q.ZJ@E/nTFP3!<+E?&S9>T1B7>$LD:Cf+ofa^s#N`Em:`.nBES&Ysk`3%%9J&%.Ulbs2OjsJ[<OK#O>43b%[r;[,c=<&^"7//-6&W5ai*)?9>01,/)D'+_N"t>p01]=BE278QsI@4:4Qc9nX5-X\].(Zb(T\UoI0-l%Gt4%](F?1EnKg)CBOY*'1Ir)T[4j%I);-;S8As5J]010Li1.!NT]6.X<QX:<_o(<Z&"#rgGLWF+8a/Rh(O%.B3'6@uZdQJnQ,iSq%n)m;&H>522!!V5U+,V$<FMGOYg6E=FPrSa%@F'"9O_Q8KAA.1Ufn_UHEP*oY;d!UaEmP#C&Bb5_o'4(H*!q,qXrg__kls@TBd]YG%7!8&&UUiArk&FC2Tj[>,'VGVjC48ZVG?.aq2HKXS"<+@4)_!tKji+&,l]rUF<K>bS4.9Nc?!@#GnkboLROt]"Q]9]Qje?/SC2fHQ%[0_g0%o;X_iQN23]Q'j%_2+M%+;)XQkHu+i/9lX?i_KK$Y3qn#i3K>G:6M\='mQ:-<5F?dDQKu]C)bE-Ei'-4M5--.[9]X&$=j<t%*:OV$-9IW5Qea:]o]3^OPQeh4dh>eGHV2M*JofZr[&CI))_s1%@6:I'3\IU$YPT9tkC5mi`87(!]u7[!c;t3TPSql=SZhB*YKOJH%+>Xg/NK2f9)O1OAhu<VIYDLdorbEIk[,U#j5&nI;JsgS<7sSJE]W\K>!s$J<Zk:WLfGom.I4mB\l\7tc4QH%Q3c9B-:WdiS;&h(/%4)A&)aOCclWjLU`KV>B-Zp&I7+2$LRj\&W<a7iJF>$01O>i0V-J_@[IY5mR7)hY`rUMsjf_$$lK,s).A4E)^"O*64dQ$VSfWI=^.%J?gL*q9LTWNT=8+<sOb"nKFNRKZkEqdOk>e\(5jF(0sQ&fQ]aeK/RcJNcqt`PdGnO!F,R-bH.\#ZQnJkh+`EAGNq4m%7J(I`,I)X%d/MhPnR^L:>hd^VhO1(B2\:#YKdqUbSjZ.f\0i0-31=hr\IJpd#"Xm.!k;.H4h)g)C4ftggYmtYmobJ(Wc6TqF^28JkPYUhV9GYX%.L;_nB2n-P8l(K]5slJd%2ajm1sQ`92OAKqs1VJE='D2Q)`_R@[Q3R!D_-kAM.+C6LSc8_pG2`");D26S<KUf!n\#0X'J2[LZ,-H%NKaoS43+,-cA?(S(bac<*)pP$V^-!)8$/L5&o',CV(6:B>\\Pu5/e7bO^E"a[6r^k1B/C&(71Y)Y^W-sBZ"khs3b'&;K]DiqD7Jt%=;!5:!L1BZ:ASkMIVg_\&4kc-KaA;?2[R%oq=S#8GAZu$CdD9aq[;NprXkXL(4?"aU(O&eUsC/nGZ*/F9Mk.j?,LS0Hbk?V(ciV^%$@a$M5k92<YtUVac/F,k_quk6_*2f^D<h9@-0ASdQu29286Hi&^tDDX)d==7BhFMKhNr"oo;^5A7l5!b4X(:>JF`ZTrlj3#:),m_%#]kI2%"I,tc"'Uk#"\0hStQT<@pNd(r<PP9!:-6/%:[aQ":^EZV+hCK/DS9>N2j-hnq\L"B'sVF%JWrV6VHm`6*+A9C\t<rqb217%I5NUGR$==cP%I_;_c.%:."rPdq6;/lq\'&c,hq;oW1Yl^8K+'j*E3rdQ`aYFg=:e)P";s<Q0F)1]QWh?SuZGN*atg+6<46Vk9O4r%b%rk7k!o,7F]BM8NR*$L.[fC0+hXu'Lr/ic0`'Lr&;dEtYM$8uo=AIlc"CEG6e*,oRpr>V?7u[!f/7kCZ%sH=Ccq/\Bh\@Pr\m'H%@]9BUrR`ACZGfW/O8[4T.uU^k5-BnS'PQk)d+Lb)TPB:5rr-Z0RaJQ)?gYmuC-?67X\4(2k<agN75ZFL'\L0:CoU4i;E->_ZF?dR%CGHOiBQfATT;WXq3tG0^Pn@Qm>Kt_G.o8A)q]f1):8L\CiCSj.(q1q$='E*t+tkuKah+D)RR/1;]=Rgg*1^7s=&s"IJbfK2XtY5)%T5P^OJ_BZN&k'qRobgN<o"+KJ5d7XiS\i9$qPd&8HR&_t51>U.EJ^mq>QVY*0QgHX7*UX^!kNX(+!@\hkrS+A-')0=.W(GnGc*jh%S'b<$$uMKYb=8kN\/FU?dD9`MFL2q:7n_csN9J$r[EOZ,_Ss^>-MSqqeDD<(nEEi=f]olQ8,T)a,<Ic'oTj\Ymlj;^cpW;rOr#T`%Larg_IWmr%F.OXXWTl?DWN'/kOq-_6%R>WsQSV#ilRIq7)-sX^/CDH&ULosm=2Bu!'U@]^.KD$-3Z@#oka.l6L>I1/YlCh5>l+QQ%0WK^IShLMdaa80F0E*#--Fg=sCC(;MWaqU($9!tk[l,113=8mpM:d,Pit_7Y0FD#qP`(1[A!"rYM)bE1,Cs.":o#CMm%a!G*PjeI%%Hh?u1]RdM3@lI7)^jC>DR5$kIQ,"Z/b8kls"CRhNFdS1@hg\OXaVA,?Y3`WV`.3>YtPl7G[_4K`h\h:*sRW3!8Y.nb_At>UVp7*%kR;2=ml#BkK@Y.%^]U6t(a(?QGeGAh:"QSQiNl6YHCenVF;e-\_Rt4hk/QeC.:+5c`G9ta&@J4O^uq^?)=d*onl.nMC(1VUV!'3\%c/DEa1u$qm]+R&/M]ncI3Nc;Ca7u3V0Rf0.0fpGKX#=SP_:U%K``f7kG-oB.#TemU@O7pm*i^BG0/TZlGG%_cYJELn79KT46an<W%C_]AG)RaUg+[ilI9\l.XkLLDko_2%dDs=BknM!D;aRNrr3R6mKG\lZ7E`GjIf/D_]`(4c;7E.JCWY5JV_9>YpU\7?nY+c3Q;ROOT%_IU!L9:#qpVdJSQ_uAnYjOa/KX$-aIF8*YtBBI,(.]]-fT8f\0e]B^;5'N`9o-_:"#S7cgn!Y.c]SqWjG4K_Jd%&@fB$QRii:fnc%b`]'sP:.+ubNQK1WEH.?RXP!o\n3',>6bq@3BeoB[&!UZdKdDJI,S.8#,"jS!=[Ec-;2!m(Z%L@%Rh#C"FlJq+X_6J41;T:#HZ.[%Hi>jSqs>)O@Wi9?F[qVcRB]]>n)D>nd[VjS!Q9!*99_<b,W9fD3G`A5g!"LhcZ9gpQtpPC3m8mFT"#F*!qo"@=>L`D#cTJTelZ0#%TjB"Bec=%=pl5HHTWGF"Au%PPM:[]^M6k3P$NE-@c$N=TeI_F+3?+(mF1(VYEP2f3L7jl6K($O8SuVUMmLUY</Yc$a$G$J\U1%@@%\,Z)2cnKF-4=?@$j6tBom$tPL[7q@1dG@KFQFcGMY\V2^(j`L/7G0=CNj0r>$1t*(5Wao9:U9-:@p.;Fc2,,A&_saDFas>No0_m0%;_t&O;F=af:3Ou@83CN0^<pY<l4^Lf[$StWVP[ZPZ.^\H&+dViceP]eq8uXT(42KU)I'Vm\//&DVNcKe=S,3[4'N_:ako=qQ5[8&%1^_#d]eg4H!#G=>W>Ui"N+AGq_1%&0CZSH3gf"(!YFGT=GAL@+.&9Gp1Gd<g<k<o)K0@.LeiJM(@]-DIp^i>H$4HHl'Vj^sT7_L(%."89FJ<-,g;B\<U;]Rqk<Vmr^aFc.+8hum"S7[Je_*5uNQmtb]K_2X6h;51'FF4k/c&jkBbCJb"Zak<`O\-kgB$^;c?lsfq=_`ir%Ue>(J*5C[r5:)N9,8C5hacnt62p1k;Q-nnB@O,J:,'l+/1*O#2lOYk@.V=/,1hS,%W)075HWW4>NR=\!"Vf(/aGAK5$_FCEQ!C2]%2`W=RoP$)bl<K\*]qtb[2]Kf?1mr@RanNl.VGm+!!4&(R(6LXRm"/(K6J]:Z$Ff''F>nal=Sj?=7?5A-2<^!L[36*.'FIR=";HRD%9#]5B1_uiA(#a4>jFJ7J,kbuG$D.jV=ebq2f9]6Kci=XZDK]Rt)gNO;M'Ka0G'OegeJQChI?g>fjlq":rD25%<[DCPj)n>'h4s1E%Zn&8G&X#;2WgpD;4jDcM>c$Sk)%lOXdFF`V&FJ`&0ukR]4!TkbWLg`2-s>ou4N+s@9;*hjH1V+uh'VTl!4Y.K+BIZ?ZPl8<ZUZ4!%T*F4C33kR,>T#5*)D%u\;;T6Y#+L.d89Kn9/u95>8coJg:/jQf]Q=lb]lI'ZV!JAV3P]mLXftQ0e><l$V,WJ':E%"NcM/HA@c]1m%JpmfgR343s`gq+)3-ihMT(5#l^2i.l)5D.@&.DSs;.Ht]F=j*9`T4SYffN9G2`h-.()4HfVq^nj@'h[5lWZE^4(o'`K-'gZCXMg'%]lFa%)IA&IY(*S/'\R)`'qC<P%E.=uK2Qu,?[ZD/-JDQ)P8L"bM)(X=j^goC(4@sDhM.O@a!JF[P@U-.e`$WK8#$pW8n-Rla'!MN%W5_2@W!E%<BDVFK]AXT2c(@/SNF+LiXZ*m(2^[cm)Ppi,ceYcN07*(mIpY(s,eI6C$"SD<qn*?_nLsmer`oOT\Nc4HF(s("I8Y8+%S:Y/PMk?sd:\O$%rDK(d4<L9h9p)ub^P\35D\IXK@7)FtD<0WF(`QVM+T1=@3`8TQ("Z>0:@h_tQ?Ho6151tVa1&efr(p7cZlOc7%3;nH>9@fY=Z_c)en_-F=MNr45JM.nk'$S<lJ&+EUWX:?>^(6n-:VFhR9*o-Jq#&30fr1)UMGpR0&\SWqmPt7M:2OHRjX>C,SZ!?S%q[@r=iLlgl,!AT3oANMd*f&n`blN:dLdp+b<RG-4Sb_=CZ2$j'*KlTL(X3I>4m=a@!hk_?p]0#[d[cB/*SF\-f/?5uYZ]GZ"t@49%W2TN'!dG^1%Ra:uIptUJX'[Xs+er+Z#T)'dk<"Vjn"XOSgL9W!ogj^W"sP@t$<EcHa2J.0LUo/(%J"dH`H.1d,IKuj;WWAVm$OlG%L.!P+6.W$4lHN&[r][Rtc'VU'YY9&VWOkDIDHA)/9jpJ^bUSI?$3r0a_&k4&P_;QW9K)20]6$Ygi#WW1TANG'1S-mE'd:>RS-JnI%rR%qU9[hTbETP[KWjqDD$k.#F?;90AoNs9c]`d.:C$.?O@4*#jq]Im[6+/@/_gc:jhjD.eOq.b=OU$b$Hn]5%52]K(,='?9rK[2g%^5TnE\+YIfc]7;o.8&>:bqW[Y)]lGUd>ClArU5hiQ@-FUM_D%=(!p-WrI6!>8qQCF^#I7E'*?R".E/!@[rsL:^5pP5;ha=OTaC?!%Ach$t+=4qH*e?uTW="W*e!U/Q!2s4pA9WNq!M>.TKaXnnI1goKBOIVrN$i+[C5bomS=X]1R(B.SmNMP0%Jm<<Lcg+S'DQ3Q[KPO'%Ak)LACt*eb5U`U<<%f.>!N_'T'P;E95IF#B<[W,-I_e]%=Yp_<k\?jM\7N4D*Rbl+d9=B[YW9UBB<7G__!XT/(WN-b<)e#&H$=j&%7+L*\Gdd&8;<Q>-cL/C,WrZ1(A]X:(V@ji:=dniYT)GWkpEl7iRto`C.O:Lc2#Y-Ng&t&"Od(3XMdVC)KVJMgRp(c\m?A=M_WCpV%&.q30ofohm\jUj[$=e4((nW5R+Z6u$>R\1M?&Zd<97+DShV$Z!^L1Yi=OiS_;iia<#+@B+C(r0Y0bQIt$okk>O%I=eh4='L,[.9>%>EC`JJ<'LQ6"QlIUrRh`plFkK_62GR795ctprgm??59uM-W=cVGLkrRm?-jYMKPt5XnM,<X!00Es8>1T6@*4c`ku<#&1W!ClIbiS%TgejA^_V8,p4__:CEJ*ZiGA<o4ott'WIC68QccmF?d$PFkK8JBV'lDjOZ9.3Tbc.a.HZ)Y]A6ATKkb6n.GJBGI%S4YAh$3egW.@\%1H-!UBF/8(g*JB![]`&;TenVUp=Mla_+]Z](rf94Dt$/Z+B'MTklC\[;mR;H7iiG&)R6=j-!5"Kk]H,3ktU=WHFu&+^GQ)$fgSU*%IKTE1Ii4V(%AY@`c:r#P!leu\m66Z]1#l;8]Mn:a8G1#k2/$`f+FLf+ImaKUkkMlbC$07!-.f=<)hF3#%)5N=Yu)oR]ZmrhN^!@n%hBq_j]*@^@&Hm:e,WY*I;,N=B:CE7YXPk%dW-_I+O$T,A]f<9]oVDanabP)>pY)J-G-kUCK5nX6/T9+Og6ER*;8'o`Nh2IPKTD1p%UVpfF-E83#KF>9.8DRC3fcu%X'Ed6BN,9l_G?3^d?[qD)Ci_#Q<gf2M87`N&^u*2ole?FGlmU*egpW(#0PQK-eM;[G(<M5=q*.`J%9Q=0<$;j2#""jN@\]o&BT2-[,fNOMuJ&0p8N4Ml[rnu<;H!_3bp-&c>p(@VHIF`\AN?4;#%VmPV>#(55\l&Z&j#q,Nnbq)^\g=SP%+#&_\2\E""1K]8f235jP8!V"`,SEjJ$J,<,!k7l&Yo'08mq1SRZE;HU/J8OZn9!$*nFQP!i\"7erO(k4qZV$JdBL>r7%T&/ind`:%U\)]tTZX<mf;K!h\!d;c)*D%d4*i[9-.oZ+@)[YC7I,9JX>Z=^HjF=?nBARiShebD)SE)WKR5+>L@HIWSlb)9)9TXSr"B_d4L.D0%,`HR3!WjW:AQ>O3I6V==).(`q(=f9cPa$Y#q<Xo1GUD(EcX'<<A3cMiM:dn64YS4>od;Y=<p2#EcfVcKE*<`D'q-&oBE%jmS'-c=%9Fep3IpjD?UmSL!Z?r3<$MBSYSq=egi)J7>+qs%pE$L)*;n.CUm&3(79'nUh<*'ZD]dR'h<J8n*6ALp1OO'aMZ#AaO^5LD>(F:ZO%Z$t]=Td4bCKF`NAMN&$<0<;Gs$A9s3[_A(*`/KYI\)=eArn&Wh(id"M5"*K7ZPp)t2?BA?`dfRB4pQaid(Cfe9??cEnec,''Z.?s%#q!41)T#b1i*(k4JeI(K(s4DZ.)ku^:Jii!@Lj*]^(r&mgJK4Qns7.;#"Z4]=11TdPG=:qW!U;FNcIrr&s1-(deG\3e$nk[Lf/[G%]t04:ThQTE;l$#4iiqAM(c4-"Rb7\(=8,l<N;3$`*J/F``S[Eqi.lBj!$JKHX:8YH1^l_4bdta.Nt)LAqusP0aP4VRc)X?-*!]l4%4T$o(c_PA?p"t]M\0h+L6WTZ(\>L?i/[#<<pE4Du!R9=D$\r9/8l=3i1Kn0DNp3RA_T\!+eR!^b$>9(E$0#i507^/D$%=8F1qT_!%G3[8mf<`"SNUN^%gUr18\.eGrdQ<_d.1[5a01P>4p=G5dQV%f<*c,!jV1$=K\sgKf(6feLHT@Y.4'MBeYR?M/6t5W1!8P'XZg\e*%9*r!\b@O23jFc+SZ-&p7[\)>nqi]GK9)1Ya]79-*L[dUgP@@HfUhkMYbme4J>AmmXIEEiq8tq6Q;;'X:V*\JJ#l4]\&#lSK'-i./%ngE07V*2B`C+N\_Lu^l'mflS+'&]Tl<Lbt5)Q>mDF;<H3<DrqpICeqE0'SPY@/F<<_Ac9&c$?\qWc1&75M1I0)b6WbkW6$fj0UK)%p3E.Z:X'^QQ5+*mduu]!3/%mU:cT/'mdr[@j82.+"';Kj*f0IdU'hpbpBH`_CP'*S"DE?HfLV;H;-Q[1<V%.VHX%Y=V:*r#)Y3%J%J,/o4RMW^$K+1fO3hFh^j5,Eh1)NOiI=+6bmeRg+!4P3+^M$YF7YKj_d`*Mgn<;,HrShXB1+Cb=[!OK*$ue2AQPnjS4jVJ0[J3a'%Aet<;lQfh1+ZY'6_Gd+NWW;oll?>OBQ.l?rjUMlQ[Apr<A)!ZEe@\N+mAGiTZ`-:f<2j>X5<1(<XpQUl-B/pm8T,51%&8qd8iu8n%NC<`=O6L!pana6@?)6\Q?+gWT-?NuA6(f3/;N(9B;[Q[7+2K"$l0CF0226Ot\(uXn,HdlK7LS4b0OA>@`im;4,Gc>YaE9Kq25=#7%Z8_u1C,c+P&B0(;@5^B(cZ[k@pgJQ3]CK?:"LgUJQ+RP86a9-ReCf0[BVoZM%2]/<\TG5NFDNLbo"<bYk%j!-2Tl'hf'ViE\k$Yi%n]uff.Jr\-+bl%)r8XPg_sT!AI.poT[U?o8WpMrLm7glLEpqmm+u>O:C+#)B7J!>9?kn)t34UjjORSUhGfrl/1ulchq1J>8qc1>7%GOTQGb]sec"75=ZO)rS+qrs7/3u<hTTYc%`b'+O!BY+hTmutZ?b"ss]J=RjRooLXS[OTEe@H^0uFjc*<$gV>I%9,ue9V)\i.)ec#%2*^N.]9>7#)rM8-7hlSr8Z;m3^'d_]nk3d#pq>Q%&!KKtQnA.dI_j6e&HX$A*[K<M(U3.PO<"5B0H?XUhu1.2/-H1A4<N*)>O]4Z%Obt3(N:Yl$@iG4G-Fcsm0::EeSZ/dTLj?8Ei>BR-`Ec?oqmcHSlnNCEg[jdTm@KJ2s)+2XY7rPnFi2Bn`Pj/.aS2>(WTX<C6$")`%J86USZ*+7bTqMA>ORDq.p\jK-I.LPA&Q'@6_MiGf6-(1_aicnE`d"Pi8]gMM1dglko:no.IN=kA\Z"P#pnW#JQ4P9#;IBnCV3BZi%=t5r6=6_.<(`PmR$4,CI7J6-1C%+:gHA<WiH2WX=0UZ9%,M@19lCc--)j30nMN#lE!KgDD1T=C*<g2>NF1]O1Tt0JeZ$M"L^l;EE%o-"^_Jbff[5\JGOTk?q:ljV_gk;m%c["c@VF[i79T$RS"#pdLX]'=hR\<gB';aL/%0BZatF`O+^k7UZ<-]_VEkrnBO9,Yt8]N?O.%`c_[3h#s#.EH+D"!dqRg5NOub*N[<ij*bFZXE__A/cr29AH,pIWVkbX[A_5#dA"1_;k(GnF?Qi;j2EFI$FNT&IudR@rI)EM0,*8U%;H;a@dEqfLI^).-4EsT)8A)UZ,s:R(Vlo;0IB"4DcNT1b#Nl]F.\Nh##E]$*LuOJ6-^HPh6d>3N(AZ4YdCVF(Y'fNb>X\qtQU.g1%,6i@qR.AiA"u\:&+M#S4[JnEF^q<3g8gZVYP,N#jU=GSJr01,YdkNbXRpS!&R89K=C]$#Z,g7$.Wa2Sg-VgO76+W^O782`S';I!3%rjNbaC?O#oo\f<Wbirjh_3+J_&DbYJ>!A5h!YRG1_icg`>nkYV9B(bcneA&LST])KU9DK9%7659HL^U7+PH6]7C@j)db=p(b_^`h%3+ga@(2p/X6jX*mj"U`>Os:l!dTZUf!%UtfQ%7Z=Dn^`_;BpkLWc]IZMLQbdHStABpE9J*07W__s5IDb\,1[NDuT"is4)Vo:]K&H%p-8QRs7d]9iBR6=)#r,Nr3-.t5CG<eQ[ea*s7Gc0rPROmiRU5"k!.RLop>6i^O6"Shu)ZPr280He3AijkMQ3pYQ+4O^&I!jGa\R&%+6/F^rf;R'5F4V6hQHdKI-*WWGb</s,N?]VT#kOupm`LU;Z,V3id^VsYHe+_^VnIM5Q4H;ZAWtMb4TP6%CKl5=Y9eDOp9tYms/'-%_r&guZ7`<he:mqu@<[FgR(iIn=OcXf(-sO?2F.K4Ai3[=Y@-LZLWHn*9/:sD5KF(!2_[C?h#'Wk_;+2sE]0(LlPO`K1/SkbOr8U"%(uY($<nt/C&qPMI'1!]oQY0_4<Z'(BA];]';g8Jk8Fu4>9mng'5,CX;4?Ir5idFr'BkN4n*pb("%pMYQ^ejDj8:R1n(bmsF^(p:Q%KMb_?iDI2V+X\ToPK^TV2]j`:\5@eEkXk[6#4g&'O38L.SQgkZJ3Mek+('8'^RNhf/%\S.eO_Y*hr'"#gr2D7ma;?aA!"B-m5.6P%fnYQ$2JhDfmh4:+jMOn.n(9^Z2G#CNqY<=Ym*S+mdCpo*ZJpOYHVR\?G:RZL2JO"Gs!5]8:rVn`rmVU-ST@3Z5=D^RrWf(/[2"He%j2R,P:-pSF_hThsald-b(@n`sY"-,m7C)Q=^<A)Th!f*AgZElj@2KN-;&U7Ep3ejdfTh6FI)[DFJ2Rp,J=Csq58%!^VXa'JIqn:p%m7Y7Wq*E''LFq:5!.c4G[mAFN01L>&UE[ATc=SjrQ,F\oH2-ORZ4AV)<?=l>&au]HS?L8$NHeD"R\[>Lj5N\!Q//CiLtDEU3CK<q%GR3H&_khF1jJ$/srdA69j"EX<)7/(nK_*D0I-p"f>0&CteUKaFq;%%o)k5=rR>7=QhI6/_&7ag*G.,qV>V=m)rpfq0giCER2S"m[%m#9kZD<t1_NbJSeoAJkIr\?qQrc3J`&1npp$g't7SQ'5R;c8hA@7JPg#2#.dEDIe8mPN7Rc/"Lj/gaMcIH\%La28[#^b0K'h%]>_%)m`G/Mu#j12o(b8q(K6iI_i[P\3>uU.J%<FV\meLVtPG<I$@`j=V\118^mVn!RAn-$'P.J+AXd(m?$+8%A554)-*YFrXm6qg/:FR%-VDn/AL4HDYC*CrLN+,c=GU;?-^HPpPP_>+G/+%M&&+'=%KhZ%0ho#M3\KL>c)?BK[@X%3n4Q?:60]C.[#*'Y#Q6E]S8`B>Sd"&*%abc5PIWj<h:T!<aO+PuH;22_+0e0'_24nf"E&Gm,>c8tp^,,j2NJf/><OTe6rn`#m+MNcQOPK'+/EAt@#MTLB??Y]r,R.FJ[W11<%pf#M?=4W@ZkLI#oLH((1Md^5!m[>0Q#%Q`_&]nWdQA&>uES&P*J*nQ=h&59%>!(Wtg\&(&*:hGtedpXCq9ZRs%Qu[F8T7mA5j5is%q#7*HVfuub3]Vah37R[074^7h]2H`/EjXBHI:R_GJ3#,TorQFV'RceFI=HSG5IHbD"2e00OTf_TT6M`dJ;d3D[f5q-1NX3>jJCj/%ECNQ:+4m[=a(l1oHhlD!34%f!,#U;Bbb]CA*>OY+I#@mle;a-kR"R%`%5U55cap<.8H&K,30-fhESb$VgVe,te4H*FVsWEK4GOLi%$g')e=B?"-BjoN)3DPqPo/-<qhZ&Se/C%`t5lQ5'TI\38Ci`#ZMPG_alhq%_/kg&ch/:gtRY0V]A.kiB984(IgTj/)0l/%n1\8_1%:ZR%Bcp\-n<dERMOR%,YP^@0@bgV\$l'`J3q92+@R;jO\A(Mr4Q(P<+ZtM#W,X..+0,++nB=8j26@`aq*2h(AN9T9X08A).q%7WF%gWW(4%bd&[nS-:bPFX6Fj,.)CC%H9#g9u/`eeaQr/"8)q<mmt<?P_-XX=n6Lr*J&BKXs.X/>-]>=#P'_=JDbsgAGl:g4uaGKPu8o%;?OX(K%<[lE=`hgabH.A*SoYF"d.N<*0WMq/P+@ckG5J"_9.Ec".j_A+;QIi/KBFHA@H=bS#o3m@WXf@M4VW-T+a@#IT$.BrXF8%%*0l5A^knCtG*_gR*:Wr>F#P^T+HCp3%WE=rdnR,0]D.KVlTn+`?ET+[aG"/CGLDk<$hhlQa9R7bAt1%]@m'M?4h<'3Zl?OXhXBGk%)dM\KB$6*8jF8rR!I3jq&X:53$:NnNP?9[m7=8G(1<AfRb\/^Sou<A9lI8!T>n<[6Mfhs9/BEr._WtQJ7>$]Rm\!ER@W,/U'o+7.%"dPi*A+EfA3W>LC$M^ppPC+7h;0rS)BR[_<(T,YIT]\5t@Y.k/T$*7HjuH(a?^95AlJf-qJTfD"g]nY*WP9:LQYGU$*72ibeQM!a%lc/4U^:1]Rh5lEB:&Pi'`3gZBXF=iF@*-Zn50t6Pf15Dub/JKVcC0Z,N1it\l,bQ4+I)0dr=!!E'.5l5]Rro?BlX+>&a$Lqj.?4=%(\@%+rGMKdnp]GJ>T<.=e>M'p2bun#.o4Kq/^jamN(S>p>EajU6?U\17RT1uq:92oE!]KJFtGq,_g$<E_/AA+^.]Y^k*_Gn%ODj#%AfNSZ/7I5;6`(<=;AS)"=#'pb92jF*e).KneM>)@mB+VoftPX`f-ifG*&O(c/%>UoBA'5S/\t26TQm[)SE*/gYP@Zs_Ld'S)S-uK%p/l)hM#QP/"*j&j9B?`"4P&6pS&h)pm4r\anFlp-b)Fs/Q+(0,\BId^DZP$SGm8ngc%O.1;#&kBq"6h//'-Df:HO1)4if((]paGE%h<Eq?H5kp4IbKs\mUH.7bs<%OLMgZ`hgC<t;qnVb+5[Sq>eP^3io?TWmM%X'd1DfceUS0t?]Q(:$He_JomiBK!cS)s/qNOm$/HJ9%J%oYd"a1)VqZCI,&2TL,0]J=e634`[S)c,59Mp_CNb==09ng`EDl%;?.$eM!SqjR$EdOjAb5@+2J">hO?^jW'+82a;oZL>^r\QnX%r]VuY*a900"1PKD_A7k>?-rVH->!_$KQ&*^dqm$ZNk*kBc!#oJ,7!p]I<*3AclhI]U0RY0-Elc]3ahbp//":)Fe&t,ml->P`ersg%(_Q4q[1U;`Oal5T;W45Vosbo=l5fpT3AJskj(9+IH+6b4.T4i@\JL>oj(eE5?_:I'!`^XsGa9Vsha\tEgEOo$Veh.1#kc%M$=HN,%0i(!Un492:je;7f+r-qs.gY,CW7!H3*6@jlr7#q^oY4PPRI(?O$0.XP+`\=VRi)SiP#[ZM2QjR0.3rBB/qX#4Ac+Xm5.0Q'1<qXH%[,tIl"o;%h1I=m6"OM.(nl_l(F(=*K'rB>-g*VdR:5K:\"oaM%DV$esZjqS%a^K#,beDs9EB]T"]XEmPLCg7QKgsri,763d6QDoB%lnF$MGm<-g-O2mdAMO9p[`(lOpV-\,"UKu(P35e9&a-f8'J/`=+H1)J_RIrQ48IsN$]TrbI^Buk+0a>4G_@mL49K,hX1,YoD8R8u%2,j\V>_7H?]oXBY6%AY'5JJ636bi?KYMl'4M&Cf'R5sSiLiluf#rEbl;^EpZ%Ko(,AmP^[=$mJNN+9-jqVX_iRfOT65]X,jWcue5%%iH29s&Y7@9R8>7X@0u$P65n9JF$5(/+VDlMfeL\%"@K@V'GF?J%_Y\mf4Bfe`aDt':MJUQr2C`YD;_K4`fi@c"lp7@mg1k%!$*`%LhaW-!*$YBNK-lbqK\W\;Z/Qpq=TcX7>Q,p\l8n81XA7r<ff.#['p?\Ake%l\^:-%OcEf<Ejf3p61^t>g2A%dDB_T(P@VZ@Kr5+P%Rnr'Q)LI"Ra(@1G/Wt>Ir=8f@$C(@s&Q9eZ'\&gg*fV;ffCsqCSG2o*YL\;f\loU2>d-s+HV[WoD;6Pf0,#JE9G:0ML608*REMD:%P,tXb"jf79$+kLqbh2`>qm?s<mGJ_c;<-4S]>&\+aCAP4l1]HL]+q-Jc/jA09'I)r<]l8g,osgXn`BP1H2dLJN\*_d72X>IcT+Gd%J!0$)H..bu[XHT_3%Q@9LD]qq``4O:E2ZsT>aH@5cjI!J\.(&(%?G@9j*k;2$p+7gs%M[%Z4VVH_Y$kjl.OIbCuj(JYjM_pgF8"&%GO*Q%!+7)C\^K`4$'8:6=1$91_q<tbhIr,pRdF#)S9pA;o*'H]4[pI0CqDJJT>3W^Ple46G669sMd5;brW:8[2a#aZbcr5GHJmLT%h/`m"D@S0Y/F5/r=Fa05_j:4u'qjLX=M4I$GK'K9)3LkhOsVqo4a:"!OKm$WI.4ig&nT7Uripk$+HVOto<0@]ZY<-_Y9[kl^E6^m%hR\^tT*H$Sh(&`olE6PK;+q%EREL-ZdFL]?q.L7O1Q48D7^!hi!WaC[Pg\MGcqVQLF"C''qktKWn2*%E*F-^*qlIC7C"Oj9X#6-Y%S,kP2%)AS'02f:KTIOU#9?[f<IEe7&_E3^d@A#K$-'Vmba[`?ZO"6'%X=>TlaH8"s_^`M#E,-&`$:(@B)Q[BJgV(*7^:Y$*B!@@W%?!Zk'kV9Sc3/iK>&"\se@`T(I1C<%$UboF)2PSN\e/_A(YT=W>PtVR\YXFoLE0:`XlIUqJ1OG-%:I_@HJeDC-Q.CLA[@519oLM3i%4qa"U4QMRq>RD<TQJCZhRskKp?VW,J^PCPt'gAe%;GBSX0-d:ir%K60f@od?Vf5%!XKoCVZ!1Gae/ERE7g^cd=bGeZP0:G0iT\[b%"2DB?_iAS4W=lTK;.9/FCTMNN`sFbMH\UVK3%@/<X+Xpj3rl=b+LHq*b$810^m[FJ$E_6/A.ACNhTTB7@4-M2;]TQtprO25;W1DK%7WDaL6f,;r/i/(,]b;KUfI6gC;b:D+IS[(dL+5E:cee\Y!?emf.2>6#cb23Bi:Ac?QtHCXfm6q!i;a,dSP#REg.o\H$*W<Yq/kBt%.N$"@c5WG&huj4uESPL8ZYOPsr]U^L,8T/IclP<jMh)`Y2\98cV^mpT)KceN+%<qo;s"hL!=*#(ejuQ2Z50gip!q\Hg=2NG"Q4V^%lCCeVNH)QSbFpThERbPX$GO3OPD%IL`0kEK@#FKW]Jqb(a:46sd+%;AS\r]%KCK"^:c)-9[XYWC'3uF"9Rm5<VnC%PQZ<>1DZC:h%s%k'"9)pQ8WQ`^[4t!saW`^!PV"X\ro0VBYIfFB`WR^ljHC/N&#R69XTl"XC=P5$/?1>.jf00Bm@I1t#,[=q+LHmORPkK?<4"&Qk%(0M^I[7$[8%\CFlWGOD\7#'$6`]%$rjN'H-%r*lF4GGoLb\I8gCOP$b;@i$0SnDZuk!cZMCk9K9dSjr_re@(sO,;RQ%&tdQRE%k-%GqGjhT;1=W7*.*@A+8MR1069,qE:SH*6i9-7Ii;UE:d@EguaLQrnnc@<I<$4G.RipCd^K5aUhRgStlL/_Q!AXWnTo*"(];YfPq(&%92(p(B2Nn+K%8P^/1*jU#/hV@Vq/`?-UU.RXF"9/&j]$7W\?=a\RdQ]S,ftpCt,Jl2bs6e5JWQNPt)>"(+a\B+#*0[E/6tqKDdim%a(/E]]%67U&K_l%$[_-eLHOs"%+*VB!0BZnOf*Xi?=l%6kJh^08TJHa9!.EM`K&pZe@]st/(N.>j?R&t'9DggEpnAIA#3tk+fAa)%OAEJiaVgn\/U46RPB))Uc/H2'nEg4FZ-&CP6#RX?cmnd#Yd5n)N6m<NXVF\<:UW7oN@_`rQc"OC8teafqrZefc?XOM)>9'2emsZ(%k6eV?8_tB+-*lp@fYLq[66^`:+--eAc0TWXRj.0fmA?)9SW=6mpCoLm%)0&s_!L<o*Cua$rm",Xo1%HYIWnV%[Y\tCI^ub2aKPQ8%Gn<*HOOir.(Zhj:1&(R@2V1Z'(!(197"=_H[Yf-7Q9$>[X`F3@`FaWGdhU%S5fjcrQOG(@.&k2Q;t%@T_KP[d*Y"7lApf:%4sr:C%VSrJ5L"A6E'>62kS"91!FmNsPX>e:lgLW_k+Z)c0D52[roAm0]ZDo2B\htsU(/19f+SPN?#pjg#.:sJ@^K*#G\`X)Ki^b$"[LYP>%[a=n3o&(f.Te;j_C1:Fk(d07r`8c,1,0LKK_0n9:+1nsZc2%%F81F[MW)G"qB?0PKmr*kLGES,QjMm5U6I7eMT;F$_6Hnlgkd'>U%UGkDb#@gKC^+m,CKDJiepWt9:6XUBH4J&7fU+.$qT%]iDYm9!4_P_bsX+5hm?'`QC_sM'[2N0#:lU?Tc1ZU'O!9K:MCe=QY,sc49%K0XA7Y0C'Z"E$#S>]dZV&)E;&njn8m%$s<L%FS7i%]@SEc'5b9AgK5TMW)jUp"V&SN'h@C0'UO[\-3fGF^EHaP=d@;et"`c(Dff4%:<>BLFpX24eWNHR^E)Cg4QB0R,nlOZG#e5T?SR=5?*ItP-MbU>hTcT1b3df]H,]qVrr#9XAD7kAY,`gt+BA`4/A((o"If_UDqWKH%UblXt%YV3W\S\KIaRLhi``[4*RX@gBqA^3TPtu-m%o?AGq4rI]2+^n?@9VL%LbP!aUdlbn_h+?&@FVP83_qKV#"gPPgmMq;btPK!%l!#AG,VC39J6@5(@3.8kX$ACC,.J9oRfke'&$I!mc:ebT/IBQT_99uUTX$2!nBNpJ,2Xua?2:2#)8ga4\Uh:r3HO<h4=_]'TA)Di%H,u%=3mug7=C7Xq8AN:>Zc>n)iH;5:ai"rSc!070or(9_4276NpTr"nE"G^[cKFa;#\UKd`TjILdo/'/hP.?MI\<LBj\@'6c-/.;%'"p4UTK^487!a-%eb4qaL!i?;==j5n->Cntdem*foA>0\^e&o<nTMb*3l&dJ"R`pW=pG<%;Uu>N'7_0)ID&XBmqMFKg5uR_(UFAg%?:EU/Ms?MJc9:RMB-2r9F)ZXQED5@R`jm"]#Z>pcZc,?MaC-"'7qL.ObMuEng@fIgk:^=gm<T&]!LS#OO(l+Y4)eaY0SX(moPluD%3<T!L!hD%(4C%lGE*Rp@LGPY289bRD^<`"&7cV%%@?@0#VSQ#ZW%>'1kNY3Pg_&'`b3%;D8FT_N$V4)4%ZuksAc$6M3NoJf_P,C4%lkDQhHl?TB<`=+46g_Ur8K>FJQ['3#l:GUQ:[g'I7,Yid:m*l4F:;ZjnUMp>\Y7kj2/MN[FKoFW28Y__`dW$sTWA=G6q5V@ZEX_0%*&VM`f5.hXIu-[RLhtjC*)F_r!);.9.NZ#qYCL@3q(ng:i<LDSN2)R'dsnGlQ!Ej5P[(55c.Z1?1O.fO?cNXr7L#GTq;H!Q_KBT-%4U<7U/X8X2,AWl"WS;@.Km#pX@3<$Y"#jBd<_`,>;$;J%&XiWT$+LOQHl[/umC.gRITaiYWh9B-`X2G"`E+uI=d3;#P.gOi"BTbt%LO"]7J9#6lFgX2qJ%.6C9-32p2tjATE&QEnnIg.1$kr01otlTR=mRR#QfsJKQCGDX9L:+qh%0/;j6tU]Z>E.BoV$SFmWk[T#8g/E%FBf7$Q)Z]He>-mqTl9T>\8$Zqpa7XD@P!s4/&E.S3:_eG.cKLbb:_3!P\#OA)rVCQgK!d')3gkX*/Kim]rKt`>s<;TYJguu_COst%eFkYb>j@^r\o-0G3Q`VR1=1r0d5>*aj4E^Oo&[Q-?@-qFU.)GI6N0p4GV9k=&=^2a+\Afl!h>6nFOZYX/#o#Wmc#`9;;uItc:62u%[=-"d6Xb&j(FY@as3!A4"&pmA6XXP[I]`^KqNj+EcSfNN2p21_XUQBQDDFYim$"cN[M#XsO8:/Brk=#u3C(bg`?j?lXfiU?h*2nI%]qlZs8te@ZOtaEn?]=ke/.W]\5;p;$%2)*O^&sMX>!u3?e_W&+OG#]uYGn'c0GH;rDGhE[UD_St:UY[-<fs=/?0'W.M&fQkg2h8A%nTd>3:(A6C4C`AlgVYubV\#qI>,4lBhtT4@FlAKH&H2^0=43HUk]iOgD]peg]/\OVb,b_7G7;9]Gq/-I-udMf"ZO"N"NN*gheYkq%<X&21L=564mcCVhT^-c>esb_6P?bL$KNf)iU.An#)4Zpc>i,MY'*H`VC+;_s`4/g.*$ge]/8Xo417&n&<'Aj-b=$eBiVXrC9,Q=i%:t/3T;V[Pnq\NeodTbf/H0r<?SEc-=,MiQr5Lm84VcJ$gVZ'dBpsQ4ECri_]bU=nYs7/SpJWrf9;,%iASX)"6ED[d&QAK2Z^q)01%+*t<t]Xgha9O#QfdGG`Jch4/)ERr5c-3Fj\6Ih)_F]C>_\^kp]<dSlP"62]Wpgb2?>s%9FYo[/6i<cIrNnY)j=Dn`JJ@R*SV`J^4%<)n)P*o..*)p/hBE3H5-Eg<I^?cBpI0<M8J>Cr.trn[qPf^ucHg+g]16U/g#jhBqR+U=Z^GnGMINJb94CtWtbQ``[+jHKW-7]q,n%>i26@H0s+h7G$gi"68i/+A.^7-ID&20.qo0)"V@3)*<t0O)<1.l8`tRlame>IM#i28nJAFp))^$RG1'37CfA(3kF`pdA!gqg#E'*%NP$g_'M2T$<4[>m?Y@I)0^/\l[ITM$p(t_,fHX,??ni!u<BZWbpFJnO^mdm1E\8`*idK@MhXo8ZXQBNG@5qOEMYm/VDjV"O')C)R%8a,E`aVRu'l>HXk-iSJq@:Tin[Z_o^:'44bgD[bM8@mit2L^JJBN)%bj'i,g[>m$M1a"cdY!u/h>cY:<U"7seN_-`GPq%SGWqK\=%UihPI1X>;8Ce3%;B0"=+h+4Isfs$IRk$F.oL_a^bE>p<=+\,2r]fJ]gIsPScD"eu[1e3(,]=/%\.(!QtpLN,="+:!J`>gNfHc!up%8^jYELO)@OCVt>l8%m-(Rqc"ih%\l'Q<qKU\do$R-Y0oNI@HU!4J+:p/8-Bt/Zq@c<l:W23Oe9UR0$:@)ip/JT8fqJOIW@Hl3hj\%6FYO7djgt,>;!&P$E&YYS))*LIjmc(fJu.kDFi8aQ]aBVBn>]8A23:F#j)*qAVNC<kCU(P'Q+b',"1gSNPBtmXPX,MLd>%$-T@Vk%'aXo15hFnkGVC.ODa'Y$Wor7=>bDG2:u^1uSp,?Bf&u<'!Zo.ge2ijq-cId`P?J>)O?djX](TB9*oJu:5@J0\\<C.INJBAW<$,o(%>rL-;Kf`Ea[lEqf[3@_"k6BVPl%PcC+V1#ed_b'rX/NS`NYbM/<`FdN,F[1D^cI-$*UMt6[WW.r?8")Ae%Fe4[2MlIID_d`<KI,U%1P/n8LaeOgi.#+dkCQUeb9ML"9-Qfr7IRp3!co!Ud`gGi&uahHDID"O(COoTrKO,$:T`m\PKos-'J58SQE;$E2D*o,g?4Df=H[>C%e8H](2"A)D(Mu`l!8K=W^a>kF;-4X$O+A#Xh0-qn4'm?s"P<i<j=dqb_!2VaV&Ac_Gd,dcblNRW"bnG#l=nE^I>DCj_F)6E6^g(P%*)7[Iji!N(\c3gd?lS(imMiBDUNRCYKo9[:qNC)u^*;7c%/%,rlGPKnmjgLX%KmQ4brjYj7+?"AC@[s:!6dFgS%?N'f0$@"2qH&-%d&cM$i"\OlD92sKWc>Hn:;n*p&fgWs[\-I*_FDdFO00n'#R/+jXel,r^(FuUg:V)\-nO-^XNSE65;>@,kO;t0P%AD".Wdk+d']_2%P(bI2Iup^BaMkM[`GFjD?shA<6T%_6bLFXP(VRUc<X"Y.=2p,05g.DS#SneTTq)RW]d7&r$+`H2?QI9kSa5=0Q?#(:/$j5r`[0m?%N4)c!"*]>ZZ*3kA+\F7M96OlVT4u0M/K`Z&C+cFC7<EW>`jefhR<EEjL:BM@\4bN(c;qJcQ7%q^\+.C_;(62^"Zrjq]ei5K.oD`A%gqeS0pED874/A//%%sQFfrQ@k)r=?@K^Q-J4G=8^jAh^o^:h\fT5o?3KtRe\A8h#,q@ouLGsePr)rRsYc:uRSg(3GEgWY%n;^5/A%N,$RqYLLk6`\`.pD\YN(bW+ho*<Kp@mh\&Q?g_gEQQ[ES+fo&FZU7eL44^<K\rb\DJGF>P%sh`>6gQCCWaQVoK59Dc&j'Rb_JbZu%;gg+LPUB4u$B.HQBW4>Hk^'MgVD#>i:U(g^6_//_'"YCqOGA7.EL?LTF[\4*Cm.&Cii9`BCH,:2[qa3^LXAtnm#RIk]\je.$+::j%MMi2r(CcEOa%*YI/!!?tmq"[Uh-?5%bAP`q4;lc_B#^O(UTtk0N7\DPe=ZO5j9$R@bGHBj1qSk9%N<*c8$SVQX7d"P^:";23d?VM%=\UA]A`(Mnap2&"XoPOF't'$K1"$h<%;\@MbNg!6B?^](lN:aN3G,YudsOFY0VWELUaROYJ2W=pKI>D"5"*73K`,ZkBrHM^AKs[]%$Ym2bnQUdm0"&$\Tq@q,@n3uHV*M=mQ0'6e5;Q'obrqHP!<&]I(Fm3Yl@V6OOkjqhC_HKi"%!-c!d)j@qL`?ikZa!<cj6FGZ?$^?%&dI!_NOr&GbVoKmkaa';?SdRUTB3T?o&r2t[r(D10dA+,>"G[`QUkZK#rk,bTfeOWFT&`_8&9i'T'J"RXp$i$n*#&69O@3`m\A14%IBPel0C'!O%tP%j7ASaq=_ELEaE)tm2Pd\Dm0o-,)I3@%))VgH-3uW&$$bZ`PtR'bN7"E(/uH%%IZ5s'3&OYGD`trQm/facb`b)O%hSX[gGl0B-O=^_0D!XbOKI<>R&0JVFMaeeh)%1f/r1f#ZOndbB5Gn3$An757S70UV'`-S21fXPeZ5I.Ye6$:&6Sn((@6919:.mu`%;]=$CH$u[YS^&:iQPhRGhEndZrZQ/hWH7*B-(7^Po#/:Tlf43CB%S=c^PkbR;g.'Z3GUUPLKtico5)*m'q(gN1;Vl_LdM9+/p@L)%g]u&K9HaH#pau185Y]U&@<.'EqMfPRnI>\Q04Qa^$tt[7N9l7fdGsEmb]9g1[`B=iD/ZfC3rgObHj&bUnpT:f,-)>Rd4C.a<tsN/%aF_WX>$V(*)<D@e4ts1B%@o.g3f4-FHNF+,Wu)lE!:79M-=!H*!b[?$/_4Om<!cSE=&F<FYrgnA-Uf$$NZgfOrt\gO2VdFtj&:R@%[59G>a[7$1F@\2H*Us$AF4>2[-*Fme6sXF3<IH^sOgUOLY83MRRs,#&O7qaW,#T!HSQCliAu_]&T]"G-a.0^,fu7'NZp9T)D'(rK%*`uKo^N?VS2!k#<)/.9gI<)?`@E(X21tKhZdb;[Y5[>os;]F21+$*9(M(MmkZ)&)Ye9UMI,QU\3r9ZJ.IO"sh>cJaEaR/tGln&N$%f@;8<r]<I3Y(o(DP#X0qe&W6=-M_lZ'VhKRTN3L@2=\qO9Sb<K`Q*T6auI4"N4iC#<hbUe1skR['os1B-i<f`2LQVX7DDQI4FKZ1%eHl#p?SH+j[LI6\VX#T2_BM[nLh;![4ro\9I<?M$E+4bDh^:YrV1,+,XD.R`QeD^IenHBFM8Gs(PV>HJgne1DOf2V"mTLXFZd@nb%]^I1T'*D60m35+&;MqerNT2F$mlK`K$TT2s8fjA*C0JL+PCVAH/5L=GY">Z$i]Rde`+E$*_tbL5Yi3Lq1B2-p\f*\>URmbL"Z')C%+Xs/"S\_<;@GFX[Q[$qd^CP+pq(M`-0!-nm%e(ZJ,b(/VfBbt]p`Al$pfemIJMe\"e7N6!`HIXC)-k+C3[0cMf$1#Ko>2<&PAV!p%gqG*7RJ3&+6H2^7lP*XpG79_nc3g(><XPe\L8s==RoOaUWW>MV6,&b"i3N3-.A@6]i<[Mo(F$tWJVa+"p\?rk*hTC@.^bjO/sq7B%pf0rD6isW/gl-imO93226%W5JY6(A>Zs;2;"Ue,`pN`Tk#!Mu-PTcdJYKZuCbAJ2$M8cbj_A]V.N.e10AS56ONAWP8`#@2)GYi,u%MU"3VdGNb[.X@X&-[Yu-^&q=a'u6U._,Z3g#TGR:/[@NJCl?Pl+Mig.&[(d4R_eDJ_ClNHqY>'[`[JfgUSMc:eZ*O8T6HPK&oYbM%?1Da7C=FrMa&'5RAO*[H"je?OWGUCKL$p+r/ar_"CXGfS5(dDAlN2B15/o9SP8o)5Z8LZNa.ae/@-kh93>E/];TSaFp/pBhCqEa^%%65NErdI$c1;3Bc'[:lB-?9NqMjXOcT<ru:PP**98YS4H+n<(L]+&9pLkJhPKfq`[jJ>*CMeXP`qXXuSP-rG&eHQ+!M,Ts*D4^n:%2Z^aET3%1DIMnOMc>207K-&E(liXIb2trZ:OjkA&8%b-6=/&H,;"`$fT)7s$Zm/UP_`_;@RB[:17i*q)7(*U"X.JoH#[c)GRh(C%%1),q@X@:n?#L/o6BrYea[K=:fKs7h`3=AbSbtRhPLKukEO_?V3$9f_2rdHp`5*$j(*==40?tR_ZQYrE5%ngW>Yn0A/0g2;G3`Ol9%52bJu?cr\p@QMr'^M#fAXs&V7VU!RcW*Sk,JNFm"6<T`g+*#^2&$_#+9n<0(er%V'W1SRS@.'MljF1(m1CU1c4V-#amt8u.fWUQ+%MCah^@W]r#,;KrIHX@p=l1h?m3Kq*l?N>0;@6"ik$rB$8X9!ocB_olo6WpM>fYj3c@l7/JcJMqCq?['"jVE=1hS+rmH_Y@WRS`QF%c6:Amp'g#&-;_l/q2D*[;RpDp8oq5&qTYQ73V0c=R#]ks"nSZj>IP4iBerZ=@uKI:I?4u!r_sqeSiGfpcUmddC6nG_m=H"AEHMK#%r+gfQNgQJ(5hGB$QPa+J+ZNMm3ko>tEb%V:Lba!abumn>$6u=P'g*9s4S8=#E>Y;ue+_teW.*)\qV(t'o*&"iJ:>[^9H(k\=O`s?%lhU=)$kE7be$:1>r<m62+"`$pk>FcXZ(c'j_kJ@Jm\QPjs8,;Of;,m&T>:I[>4pqUZW@#9dFu/HB6uK2VtoA2)(3;AQU-(1efaER%p<HRBLsU,YrNBJe6d:D[V2<NX(ocgK#'H);mQ<87Bb<V;Db/RYO/K]`>s(P<4%t&9ZKFo$HCL:$f'7dt/Pcr!`1A36>>l^rLW*8>%^5k5RL'2463"L!gV)6Q0;LK9XZ0nP:lP._>m34FYc[fE'UOD-^(UKCX?Qa<FaOSOT@!RtTEL)baa`c5_',p5n*m*0m-+buh&2aEB%/9EOPH052!d0lPia^fsG'I@MX&mE+oaF,J-3='4dc'T"B7J8bD-6EmL20$XLM1n^kJi1#7"NkZg)G_&*pXBpM(H\X91EioX\R?9%%I#l*aRke./RrMn_@k3-KS6g0:GLSSF?*:63`R21TME2V1/kg['1\S"/F>Xk9+<(%L*Q1%JA1R\OI>rM!>8P^Zg97%Q:POBe>W)d6%4j95u1heXWnLJKX\BS:O$7\&<=q)\5*S!a?/mW];GMANP)22dKY6PX73>X+cSXP`%\uar+b=.^bl!-e*rbF*GQi.'iB1+k8CH)ii%*'Ni0$I[HWh$GtM2[fO_?mV:LCI&Q$^D=_1_56\KIK6:6Q(^c;-ejXC-*LufD+\*U'5EYnhKPg5+JC%;jNP?LW>AEo-tj+;Tmnp-%>78Iu$XM=H]aKsAM:2U;H\?%C)BRSS2(f#_3HJKQ@!020p,d)HC!@Zh_O2J):`RGU#\3t([WSp6r9tVT&glW_-@)#-MXfqIFig4I%3l/t!8'=daUR2AHk5FFi@5p[!3;D`UnF<r._;h(iL')\:+U2&#p/)P%!a"8.;*f3G>/YcGD8Mrs4cun;eB;Fd@hB)80<s#:e?]JI%bC.gJ`#n3"Ah92ce:o,/Jd;s^A3mb$)eedZ0!Hp.j\^:\"CQ*%r!EJ?2?8466t!\8nim$[<_]p^hCW-C5n-VA!b.(-<1^gj-;=NE%([%;tJ//R-pbW*hm#Bn\j,a3lY'#UrS2;)7P*\NDG/H57q,PtPpG.rT#JgeN"hR*m55dZ2*SeO5NefS"J`n=^jfem7([q-E(,tL-%)d"e6'd2Tsptodm+/,r"&WbM]ce&]'EVRB"!+tl&rhHP!44`oMq8EA8,Jg.!bn5Qk]V"-eTZP$!lk%W8Q,W0K5P/&'@,#=9UjbAn%*J14n#2CF*.mCoJ,s.M\&18JmdRX%Sd=PEGG4\:\9jmOF+m`[ML;ZQ269Z-F"uI?]<67U?`sB*M!`&QAfjP4r-B.JWY7)_90HQc@%cB6%bcQeAXd?t1MGuSJos+NBdj'6GK[eo(2-YgYoI=mSmie;4ql=UYRnF':JT`F[na@%'9($4Yn`NoU_B+/0)]1n]DkQEeRAaNU:%,:=+&0JX=.O@)47+t6Ne'mU'l/jg$mXnM'(L69_1<qKs$^7VH+6EeD_GXTB?A1%IqF>G*f%cD'uG_dUlH0t3o$(6JW[ui882fl.L%\4E<EjABMWqr/<]f19.)>orb#3PZIul+kPd'Hl3lp&Q*bDX_p5=@(k7!-4B:eqpP?:;KI\O!OG1oXDCkNmKC!'17D=!TS9&d%qd8%\tW\b`-Sg^!q%"1@+Q1b[aQ0PA*'&=9VVg$>9&1A'kWu!Qsen/;Xuq;ZBs7gSKJ`bQb&]%_cd5R__?=K@YO4Q!I%9E()'(8`jkih%WRGXX*e#8mXq9Np8SnXXE8tiaB'jS2(t7S<H<E&)+T`*e"!$>"C<?$\BK9MO7"fDX*LL'!dkO9h4qj\P6aV&E'jJ!NQLRMb@4[+k%_AdY^4uT6t)(G7R>IdBOPtn6'\VH_3#I>dDYo1N2rFk)q3GFQ)jHo,3Er``07aj6Z8RJFJ--=*)W8@djlT?W6#BY#@f:MVAX7E*#%%9g*biX4W;YV&qBjS^f@@H3+?C_H*%\K@X)."PoZ`UV_Z+cN6E2NX!nM4U.5Nl"=JXJHcOkgBt8j4E`HNcE.V*V6!u,6>YT,.]..%lK?dg>e>*0!QGf!).,OuN?+Zqg8#X6U_RKcqs5<\*(h*6@)6r8A1l0+FrTULUHD&(1lZp[m`?>/cBW*SUh,o`I;r'F?-a6QZ@$Lc%-EoA/+O0]oTVk5CY4%L+%'k#'7a)Ue,'T%qM'@Q"Gu<#Eh[?qdXL4ano\kp,eW>lJ.qVGH@jZIa7"9Z9Up/a'G8SZe*I&O-5`:EU%5gmK<Yu3PqpK4b^:?7[1OG.E0830cVJW*8_0!U6MpL:0cdj.+AS%qD_L,V/G&@UUke>?`TnOll3T0cb@'-*N5,O$6XK=Hb;E>CVG%Y`9K#^#5$ujar,BGf/)o="FW!9o<&pT.RL>R=s[#[7OlDP]+HCmBdAeM5QVl?NrmQ@ssra'V]/qAS"Vjlh<\*;r;$geSQ-Fq(RKd%)Rsa#n'"26D:K8UWc?>/:ElAY(AeO(T/r&\B2H#",8"@Z(*ZftKMTXGo(*KX]Zmm(bqeNli5VH"&c7UEK##r4?QaaW(@6-N[T3b_%,e-#](M_B;aCMB1"N&BZla*'#?k!.6OGL,UM#(,b&uo[P3Z$DE!BuLsZEcZN[QCOFCo5.ln6nesdscCZgn@!nif7;7@]Znu4SII0%iai7'qJtgr95_SFB&C>8I:`*XUjj7dV]2uWj1eqoZJ8^0Skfi+5MSFKPeG%W1+uJZgm@3GK>H]CT#_/90)I(D*!(rWI/b;VhL)Md%A4Zm:0>KXL#."Ze^0n:N2DSZM0GqG.O:BGY/;ZR>o>c:Q>EKM[R8qBZQ&s:]RJWHp+$2!<HUc$Sn_sg>1)b^kY;gc0N'L]?:]9.6%cr&#t64RC]q.sYkP=!O;:'r+odV#mQ+f%@2.!.WJZrrogfT'3KI!kbD`0tKj/Sd)XDar/2(^jW)]stJf(s?#h?Y3CRi.7s>Nen?u%6HL5R!\,.nV<<9*7N5")?qS]H_fD,H/%o1cXKW^i^LG<H;tpG1L6gp!>j6nN_P&R=iJ7^MaB)KVNRX08%(To^IAO([6r+tA9/]Sm%)-O&t>WLG-o(guP.^ageL<<dW@TJ-fBE3m<**oqh6IlPLW9Os(!8(c%?48Bo#F;4qi$9BFV<=Vkbrf]J8]Yimm;A;P>NlaM8ITD<%Q,A0,N9nV&1*CPA@S%:*o.#b/2p4ZKLmX$u"cZ"s\OaVb'[H-rWh\O^&17Ms]mUcD&:'5MaB:0Qp@7VIHF!N!E2:'?M7.s[71`q"%q<,"^:rmd%V2@Humc/kU7F4%<-mnp=O>nmikXb$O,LI0mV[q.gL^aW6"C>rbnft#;'RHR^KgbAAS)-SCH>ERV3cDII=ln[oPp+"8%6%u#^%ep[50L2:53gqgX]g;bjaP[durYj?uaNFa`;M-@k>#c#Bp6.bSYq3Z2r&'$49b(\8*e5V[3*Jj'<8t4CR/jYAAN'c^[=GiK%6\UQ@8;>"PL&3?:?r0k;Po:>\]9)p<'co%:A#Y?J,WZ3n]9dq#_P23/AAUEY3:mr(&2S,Gqq),TQ41r)X;nYu'4F7J`)UXXHg"Xr%Rb@na)PJ?K]e\An+2lqe]r=:C8VmeS!J!SKYei)Q%=jj8$F_"2"^m--LW%8l&5*k:5[pl]9p\".;U$uc*FPbM$DJu\P"(Tu*afK\%WF^r4MAl]W14(=P_Am9B$PYduUX)t2kDMm2#rH0f^pJoCHgOA`kf&]SE/\oF`^-*KPofDr'SD*4:*'IM*u(I_8?X^\^h"T0W=9Et%#kEic6S#tFfIb2g]+RLf:muNq!B7f1C*9cBT`NU,"=Oa\;Xf,97Y5U^JW/iWX6<-%?*HS?8O-19'9Mp75khV&Lt=`NT8QuM:V`1Z%ej)l(%7i&@k)'DE7`B28<0n:G.s48]EV_@iRoTJ\F!#^QKs3Q!CmiXU+O+sqe"C!T!Vm@%7^t=464pN8OoKKAl&aS1C^.%>K"Sr>%#g&Zj1N42*`qLcB,9\fVp+X3e1?4E"LD[8H4Tli75+;&P61D,>/R;G;?X`\L?tngtD]GV+"5H83-9s_O@K<)9DNXia?-D?a78d.L%CU?@#JVCfHBF9j,@3H^Y[M4DuP"3QH?\H(a-gV.`72GSn_9rM`%Y+u(7%0P3:rM2Cg/tVAPI^pr3lM:)C%Mh0i?IojSkLU&TE/m9%D:JW!EsZA8'``^l/P/M.pKkc>]>>p("3CZL&md*to\3*g:^BWTR-Ac.VIkARgVh"&]F1*#2Y/4<UGjp'.32+[Gpq_K"6%U,UJ_t`%9iiI%i<Fk?SH0q!VBh+3PO)ck8C+W(rF,jC)l^ng_BL4tRJ`0;+cN43/W^hl_?_54[;4Q;*&HKg3-JKGXR$::5!\@C;EnfEg'F?3%BdY1c.(F'^Bi^N%./'%V#Fr:LN&3/XXWN)>V8>cO3NGF=V2R/2ZBLgm)5.uV,uugcSk'd]"3eU&^Q0q3;j<&U(aIrM?6-a+&\c`$%o*"BDaH_boKU&dcJ4E*)[g8LVgU/$PK"7\KK[/Y0B"eN(Q*6`1<V8qg)t;tJF?'=3)Tqj[EaXi\)PG[i2o+Z3!XVI:Jq6c^GWqCt%IN["=(!s#r!)s/5.$g#&lf:KADMH=B<Rb<inR!#!J<Odfq]#UOBuHK9VCbZmV2YoUh_Te'J0=JdkdgVuY[eJOd\R:(0`PH"3]>8P%(A^6/r<X>-cBgpb*H5[W*Z<O),/>]"%-.j3WS!b,bCUC1]$)3LW$O^<##_r7cAo/:Q&?ZhDU<FBIaiDN2L9%*W(H(5"mUiD.<e<3%'WI=%5#O$boN^X#+HLam1;u&oVhhRuQ:OZ"1q,sTU$5'^)tEZ_e-ThNk%H<+d'dC,ld\m'7]FN4R6`uV&:&tc#@X2bdMNa5$)o+=%gG4W)l:=9`TFbhRMiOW7V'Zc`84l=R-]onk.FfH".!&'-"Uf35"OdqN'6.Z9ddiPG@&/lB8YI=u&9o'M!S"LlAhsJ.;YZA(`!0I@%RE?!kJ/g#oUFGX\PhE,R;u#r\Ce=&S,4/dKgd%l<;"B@4I$U:6.fK]/"j,Y#ik@tXA<`1E^su)l6%Rh&detOYlS93$r.pKiM'ujh%X)*(.XN_9X:s.CgQkM@_)#D1ill$h9L5VKC)`!%fZ>GR`k-6;!hB<G=F;!`biWk.u.VLPK3>>V\aHZdq!U>lY;-job_'8tsVK"3;%[g]*0W+(l:I4GEaU)th7V>u#VWR4fT3\n)Ge<S/Z8[b>!:b$2+rZ6>u^;Ls5rQQQ_.WbaVT,NiaB)2^Vg0IRY.=ecTV+"1rYHiJG%?Mb)g\+66t;L9ap?Id4dW6i>%aYf$e;9m)sTUh9r+50SX`qu4p`3Uab.pn27_i)&+.qY&*#IR!l9XPb2M\6as"+r@b6mT6M0dT^1%bJj/s@^DaZOqCfR$@*9->kp!B^1<(c;]?im]=bJ11b]2CD4-b]_<#Da%&ElT6B>Ch1b.S0A<af%o,mdsT,;pU7"N?D$)[oB!"P's%hGYU'.(!-_B(7&8[03fS\9NP'i+Ndcj,3ug7]$]:_Un[tYj+(R[:`YEreA#0T!HX2U%[b"%;8Y`Q:T0,Jq]4:T=Du)#*_a(QRX_'%+Q@I`-7PnZaoF)X=.q=6WZ6l!#KYhcdP@Nh*_%*f=]-;U>&]0<"s`V?G=>).,Gf6V/ced^Z^K^7fV!aGY21a.H:4HK)cb1^:fC['%'oaP:aF/=D6cLVejPf1/+I<!eA1PUUK2Ra@!U'<9/\J,5V@(0CAKjU?LDG+Mr:"\pL6(ld4bbXUO8W?0==BsLOeEJjE"GPs$5u+d%6BrV9Q+VCDF-(u=0eBoqWApJJJE07^E)Q-INe):+i^lECCec+R_DVPDLeN",EN@6)R17XSa+qR<=`">]dW(/L-Y$A=`Jme-mMm#X%1[cR:$a>\15R%S:\KDRH#cDbqA<Sg[O(/9PN-1lB18qbS4;4\i.KUDl\1M/qPUQc:\n%K\2&+F)*(M@J8Mqtuk>3R%A?g5Jjp3)l%BNP&W/%kR8jE1+#a+kF^OBl0J'ojh1(-"(++\P7Q9od,cK_-Hi,6r'R1;F<eQ+g2`NXN,S;Q7Yg[N[Xn8!?b!$!o>M@@VL+>=K?c%+Th"A.Un<'raT%+a*9@f1Q6jc6K%6j&rK3ra[():.d$\@LJ*\.2'V::9_.U2E`@TA.rp`D8?K\jNZlm0FSM@?c1(jlDK!XaGPNqN%3(im^k7#p\(i=F>k<,BrKQ<TWMT19XT8U,&<6Q27UG,_SFp&?Y`LX8@"iM!7*$6NE-&AGF(<B#m"tieD$O[uCbqU@(rg4hnEO2L^%.b'_<JjQ?2_LV),kEnMJ)$pYcBu1^4$p14#3$qmK*1!K.V9a.6.VGEI^RX"Y-$pA/;$!RRB:>b8o'$@s/Vd7CBfo<F+(7rC\gW`U%q5H^N6t2j!Gp3[BVmVNKg;;$&^9"IM5=<Z"7[k>Q+(@m[Ti1YUJ\DVc,?`WSiAEU$C?/ln>-&#33-0_$bi)IdhuhD_/K9M2XA.A$%on;?JC&1O'S:Iq1$;m(,UMSPudt6?7C9fGsA@U')1X^1_gX[Q=>?uQ/,"H84V+;G(=Kn7LP@h>GQF7\3%\Z3^K?@&)AYA$+:E[M<%@9&6l:):h06kZL.mk-\0J4e.Koeg9>RNjn(`t6T(=ra-R;<OTOoU/ISYQ^^=Q&$jLB:BSBjC9a:3s#anRCkpJ5(Ul.k*.^(\cVO^%`M'gtE?",`*M6EVP=A31X+Nb4.qk:>3:Unu`mWd8l>IIZ>GZ>$GZP\AFjqm%dc887'.O\/5ZrbCrQ3Y6Q<>>8Q*<>LWVKduDQoCm%78[._=Fri+E&qA=*,[YX]%jC:SHTXJ)J0SSg*VVtHmReE^eSb:'i>7-8[0krWVAY@`)%jjQfu6iX*bK*H7?-PS-V+GMG&fP^tlfg%!P$8Y,,rY&1QedZ*]U=B7D!,jM?D#]$1fG^4qpJV(RjE:J1U%h-uD_1K%+aN2T<J`mL=e&#JLUEF-V;$TR^)@4\:ff-e5_eEas&#%RiI25%0?RdbXc@;_*X9sS,,Gl6/\K?>SN'c>hf>>a1B\e-ld/7:AI4;]tfb^J]k%EW7^)E[n5f4*.QBGa:.<bdDQ6*RHN0jHZ!`%%i2t58.(nE@!D<WnX$#*-TmBi9F9o'0^3>U'#:#J&_#/aZrYr5!k\CD3,MrUF2>AXlK^o>gFJCI`[BTgamn/#5Ms1hXOC@N^c&9u7%U9(C.a/[Vn0#KdJZl@Z4'Fqs9g>hM8)8!_?460>YWTPEnXXA\+,W[jua*]m,lPu_!-+?&S?[!t.6V\7?PA=l]kUsG9<J5QXCN.hW%'Ie`aH'LCI$CpO4^,*XsLP:a^Wm<##hpUqT0AYNY?(]jd5a3!UC+OFeEMuEe7RCo6;IKe3Ng!'ecCjHLl57^Gb&"X8?o`$GOo_J`%MH(6"1jfWj0<;:;9"n;sVd4XFL';Q>ZAStt=HP1S/fI:UpDa\SpE(JX.!-<UN;6^1"No8Z'Th;/iS9'UQceo1LnH-E`He&`#GI)n%Km5,?!Pi5fOs`DB>nsLEC^Lh^@Hkc9>TM#/iJ92tUP8>&Sh$"hB_f33PUm-DQBBBi7KXI/DA<b+`tFIaH%!cs)),hLD`pL'L3u'"%-.:=0J->IE&b46U%7S0rY[e`<UI4g\&"t4"G`E,BFth!)1uKd(='(,U6D;A6kR`=Jj?EnfW'F"'jiX+9/gk^o13F#IOjtW92Jc?5%c2q^<0cJ.E'p:_uI'd!$E#e+>k%K;^!c(IVKd5?R@nH,#8%S$hL`AuZNoha-a-+>_A:O[p7LT[C9GB;p8RcFK5f8PIm%?,.`l0!3%&/=gK/p8cPc+ob,@[TUjU/l(O"'Z9UNM3f&`D%%&)Zpt1.05kf_k8,0:<3]t.a16;T^l5tN*SuekV5gXX("Lu9%ea5>)2110(W?7%\R@c`%ML;2>1\oa&WOR1>ReW--1pW,6ROWTR%l)@*0hX?YUWbIo'69-o/Hg-UHG29EoBCtb#(V6#r[_;J]sA>7%A^sDfk^Z-rX"H%Xru.K)MmSZ(TS7^jIn3u^X>-1L'E>q42tCFa;R[tS,hTG.Ok=uEo_hhJ=Quul(SchGkF<OU*AQV_Hu7W9?ES>nC.Lg7Kf)FnUZTc%2TNm)"IafC@nK.?e3X9VS54@@Pb1VdA>J)qBI4h"30`jDU!G&'Kd\&fQmuVpEWRlSQQu&H?Pgd#XN6SHr.4K]lQ3ir*#T,qjHm_.%@kL5s6%U.C](<K9)&9tbA94l1`C%NWRi0k7WSk>i&bTc&T*GRfb3[J*G2Rq0D&sN?>`U#GS1UVd\7\Gf`aBrh/dfaa.=Esf%/#G'%\&VtpKhV4tY*?O*V(mWY-Y+I+,piQCP(gh2K+j6J4Hc+f!:>;Y<q4j1.E8"f*%[$G.`st@.#nbSW&QB#UZ#^]/EsmD_gt478e8lr%[=Za:eBEp%AEnJ9m,]H&`Mr0k[&Z/]cdI3faEc7@UtRR=$>Ue$7CV.52"rJ5Q-FU1"/%et>qN3S0]imN*6[+L&?EVAC/Mp<4/)2D%R2`+7,Gh%4ifnmc#Qm\m)ao8>LG"I"l!h_J'XHnNCbARLeT:M:ScmO;7?iK^Ok0[e)839D$47V`DB9AM0*l`o,"*WI6'd-gb?#(j%Lo;'l'%KaFhBC0pXIBdf+eJ]VdZo[jo#cgI89rBuY`uOX<']s2JqQVF&EGFo;1\EO_+]G_EefbcW!OTF4Cn2?bS"/HZ@;<-(_u9i%i6Pp^Q:u[>qr6:[R!X9e@O^\jjF`>DUkeG-E$[!:IJc$8n\f0^+GL6Nne?Ke97LP%V#1tE?6V!P"NAQ'*2+m,VucUuN]hP$Ktr/&%7l3AR`$IsH#r'M1P0^p1n#?W@Ti7]!^h/X,:lC+gN^C)iEHIl=7VDG16:Q_fi"7.fqlth0KEeA/OtT\VqBLefocg6d\'RPFU2A$H%*\=O/YP(*ffY\"lX<^1b9@RaE=2;cp/.Q]T0?=5\XH5rO&C!RW<N(r24@;UJ3X]FUcPR%(nY&qo.'E+[E7nsYpX)3%Um2!9(+mW.%^-Y(T@,Je5cO]+P"QM?0CjpnKfVCA0*UY$QQP."<H`<+r@(gE_fRd'JFMAA5lEE<L#U"`IJDLRubHtS1Y#d13=I:_8I^%O_)mD"*%4ra]:*YoB>.!/!]c=q:g*(^1/q]sVM'FIV^p]/$<&SE*p!u?e>V02rJn]7RocB/E>jetNH5;a=[$m+>?["qs%+VQ&pPn\NWGYP\R%$dL*i[&cfk>K8T'f,)$AU%%^\Y`OKj!fXOB7n@tJ_1UR#kkC5,ZF@I>HckLbMVrG'FD]8+T"&O6bBsVXAtaj58Bk&KfE.!9!Zr;J%\6hW43&E=tJr7j,1^*NL^udsB&<B3^0$!<d"iXe=%7HF);J__.m%BH'b):cP_<OB2#THi-!`Ub%c&9(s&`"Q8Ks6SWRCGYZ9XkM8%Gp5MD<;'/)6?5hU7K\uE0h>?"!JDqa_t%cS6A@1IBV6cHmR,%X:`-Ll7%(ia8/UqC?Ni&ROO_F9MU1]hI&3%e#g%&diC1E'YSn$O%l<)c.ic%W'nrZ7YL;6PX*?UE`EJ#0#":;X?m&:X$*7#(c\W.(KZnT!k=9)J0%0Fa_Oj$i$%ttKXkFmfc$E[67dCZO=ptu.HSfa>Y%!/(-`\K,`Y_Z4!98.I?LLsVFY$h&&A#/nuRm/_r9I"s3a]"pTGO]9+%+SFmT:lK>pJHDbb*mMbMGS9rpI%OoOl0p\:Df;F0YjUjr%#+<@\Wldn9KI'K_83-=.)i,KG].U(j7'"%/0E>>J;k=CpK4Vka!18;s1#kX0<%(_KLski45l/Z[c+F2E'6r^F9ne-@(4hNn,o_Z%%5cYl+cl#<uJL-,_/;Gf]JZk<%Oaup0OSeW#MV<qi$Q7[H<?7eg0_>pZP)@tN(uHg-TTl.o$5tB!9;'mMpk;A5&</2$K![.<l;V2-%PSt'9k:dk>*shrKEWngm'#hat7W&`RH/i_/;'#"jNpnKQ1E&dd<m7Y"E%@6O]`8MNOik*Wq!4<gRS$NZ$Vt:q`#KG8\Oi1l1kV)J%OL_kG4mE=`56>>IJqLGhE6M/B((LO4\!j0^3qo"(<Hi0Q,[i#$GbIs&#s%Mk@.[TRG7S/>YQF(#:dpNe@seZI6?6(9c'sbh4%V.g%9EKAG)Fbm*RRJnR53E.N-+D+A@=&FYmO<'=)u:;Y`JZ#@SK6]b,\%"3,6@dqV@tiL?l:/mFHN;"n.>`?18$B`5A7*kUZ2&rLHuVu%#\QGl7=?apD_/F]Ep^dL@cULMTq_TP865&59nbtNj:;^h&#!D&I0pA!"p/sILV*nq<0!0K*#L9L)WSV^HGo[!i2OXf5ab(==LsC-%C3^:H+C+iKB(Adn6ukRm_`\:Q'b2Z.d;3%J,,Mk;Ju`9cEA&Z%WR)B^OS*_s+o,/l[[7\_!>T#PYRKP%$#9ecLtMqQ,,aZ>J@6;=%!U_b?5-lGn7LEGGMpV#sM&k;J@'D3U@tY\He5=%J-DYSMPkdkX"6&9X&_4>;of*Mo$(#=;N2/RlAb88RRIiC*!u?4+ia[KY)I,@%%[m84I=$TLumUGJ$,(BXX2:9k<\_&U9;aT>,"s0q'FJ]*(UBO2nVin4jEp)+ZKG7rW`DAS1KU*b@0rD4"A*Mn[(kmcck=.N1X3D&*%U^ErhK"R19Daj4jI,+d-fu=%p.SGOEo+f1#A/\2b':cp9;:!`TIg(s*!SeipoO%eOMO4emM/ieWe=f7G.624:K2f[j`0PTi@^B!H%UM18m*7:HV%T_5;nGIr%0J!\ffd!#1&e#eC1+^5P;961"!l,HJ-PBHKg<5*[Fak-7A#&2rSs^GO@A"sqm!p3Z"Vi`Cof5*TTMe6@%5$AOe"-N5#E'hk(/1q-8hKZ-l&Y9o*Fk^P[%^*F&C4uN7+`iZp:Ut+$\QkHCAF8k8L(%9aQf'opf0gl;6P_uKV\TLQd\ehb:<]Zg%n.nDE/O@Un00hHpcqQi58MgVb3@Qa(O!/`O7]?"tOH'IZPPn>;i'a['U!r6/*&?jE!>)Kjk^Y)n[!bNgnL]9T9JO;DWBTBi/C=Wk%JE(]6#BOHXoPE5hi9$9</k8o,l;<k06n2rf@sQ5/_j./tcm\.5o;I;(Or.nniI9ooA^cpj+V)<`$9A6EpLJmIA8iMFBqan[\K'of%\-].Tp5n/Hg]Vte\2!-e'SZGr#tqh="C@lQ8&23e8f*/fQAu-YXPd)GQ8VhQ)rFmjc]=!5XoW)V`9@Z<:0\sJ^d+@NO<57'*5`6Y%4&!aN>`l.M"Yrsh\/shU!R;bqN8b&O"=Qu<I_`M).C(?u#t?$D2s036$$,)4>Y`$L6rG4`HPn'M<<.RV2\RB"QdE`C_O^kmK0bs"%/]2uZq*3T_+c-O,B`cn<9YQ.Z[O\(=!Ero!)]d5&03lB@Qi?+WL%QaG*ek5:fI<Me6"M$@/A/kCgQ7"]\13:Z%+3/ET]hKPOsoIS%#b^7G.1S\:)3r%s%+^Pp`t98PZ,n+EYsgjn#SeN3`0<a4%bSu-)$tgi?P-)XDcnKp<WUVV`peX2aPO@&8K\d<ETI1%K2J57fT?VF%%bIOfUYW+fMAIFJUml.0r'LRABB06@I&!+M1ifA%S?%dqmH01FG\8h)D</cZ\9B0qDj1QKj9MH]@?aB),T)0<A!Djk"=U%HPp;P3%-+K&#cb]LqG_\&P*]t^D06(N-O[l(E3!&jA_lH%M^>j/L!#.IHo2DMfe+g]sTAlARg[r?%=b.R$_8p(&R1U\$@UsK&bYSf0A7Vu>%lrXb`AnLXn$t0Y;BOiq)Am^NkE=N(fijFb>Gn'ppi:W'r6(S'b'K/W_M1OaMP%Q!_cQW-#^:1&!UKjSrG$+P7L^[#1C7YiNPdcX8%\Nu*SYD,Coo'Z8FJXP<][lER$2SSZMDSX=PjR=!5FsMi]1%@4mI`T_nj`"?lNm,SVjm[ObT$YPARQ4(U;ekH$9l-tp+#\,a3F'"T%,<,2]H$m>'-88%&AjO=I/3SQ:65U-9p3R8`#N'\]>mQKqR>=ntU7kZ*&f5]\blP8)ng@(P$d[@4l@]\VE)Qq<JUm^<8Z%++iARud%i+V&)1[Gc?NApss5(LBa)3YfJ!^6FC2"Gnp<J5]IP=>h"$6^/dk7\#X3"]TAL;9-YYWS8sjs&cZUNo+7B-N>18$WUb9`T$B*"84#%`t^sa"ql*F0.]Os!Q5<#6;K)@i=KEI?6GUVdlZ/mmLq.^/CrLUZ%JE#"ttlpdQ8YN/q3N9>7DS3fN$U7IjHf%:jbPMUMghRN8fIU%eBeIJdS#^X9:0sSmXTk?*SlO)"%trK3$_Kj(I0@6M.OMQ%cQlLOE5Jn%0]I%J@3?C;IWg8PsdTR3ISEa$sIJ+O[^f23+SL7^_.2<%f<(_5&lWkeOUF$FLi%Funj4BI6,55S!+eIIIlK3NE_#%YnBYs[>sbE::F6j;/W\[%(jSD,?N`P+d#b3>mk?p\3%Zk^7)U]5i($$p%,;<lrnHl@fi1,F$/`a9)i7r(hY^kf_M&hR%!>(k!kWNTpH*[OHLU&nn3d)*H!jZA)<)BS_+tsOj+NQf*:W>:Z+pc?1#1OQp?R.lP%W/M@]6E$iol2p=C*`iP`o42T,?qiVO\Ae7bi=Utb9b%.@E+_TpgjgOor4j]WYKt$Un:j?l)^6!]fRV&)5VIj,&Fb4gmfghNV=a[?%]AeE!iQ+hU).2E$g'0YCPboG!\;dVJSBYLPgd%:(!te$9@&Z7W+Tr0A>a:I&a)$fXounOe^kjIF/^9m-@;8Oc\Z>.6S@\#Y^RlZa%m)Wl`J2sFR5ZQ&3fL2][LjI>K@!jG_c\h6!1-Sb$LX#`&RU/YY_eOXRF.[7.dr+-T(<,L"%Ya+C.1/5[)ar[ZLdIEI?sn3a!6^>[%90<]3dgLTTl#7du5m3U1]hI7L0n4_M,?Gbm!U/8(L0=upcqHj,"f+4P":0@0Y[jn/3gatmN#0ZZ"`piIq.^k*5RtWO+YH5>A0P/G%nn'5%3CM=a?VQ25LM-dS+3(fZb"r;SKXX.&jJ^ja-";\eE1&j$=HDfO^j/?^H%9?^Op4>"/k3Gu?7:[VKb2V$;8At"==mt@KoCDC%RDUe!@u@qPb(EiMH4*bA6p%[Z1Sq*pPbessm?!`k_:^S\'H%M`,#r5WLLnBE6Pn79kSb+TfXW-7J]n2S$hD7(fDL!D\,nH4e*'21%LrJ<cI=N[6#XP.W4B@,[Y+j`3p/TZhg-_4r'l[Op$0F:sYnRNIE=5$IUB57`Ufb^k+9uqe0qZp$\DWA59&FM.)t;6t?4[R.6dR,N%8H<`T7nD#L!+?Vabh<3S$Ns/__Bj+.nX7*`ZiU^qNek?#HV",V#p0mk*#LX`!V7R+!07N-<!FgB'Bl#a%42/',;->81C7A:>65**%r()UObQe1Um8:"p4[lf,$mVR+bfOUME5q)TB1pK&`)<8S2JeP6(ad(`IIUGi@k_/ET]^>dQPW:TfuW7m3C4tZR)<R*GZ#d\R`"A.%\RIApChC)7>e,]>cfOf2V#mFiO=+f\jcXNW`@U4\b"fOdX=[u_/Q(^CW^o'k9$o>Ua1;d!qKV-B8Aij"3Te=3@CeQ](X7=VNRud0%eW"+U9L*WSNKGn48QZJ5$e`K1OFpP.4j&`I#1@Du/hLfBiUQP-oanVM.0L.oKbt*I?C.0d(qD8^O9'kq.^P[rF)N2P$SH_cEnj=)%9MfO2qfK`g,'94RkB`O&#;gbJ^KScU1urUOi*\+&,;k=u!>I[m7cT1"`;,_;97asIlS9_#]\gf,6)!\H>_,0)TU;(',6hu[Lo\#r%T+p2\>@ud7dXm1K_t4t;"XaWojj833.M%G#<,%0JJ<u,p>CBQs"2Xk05EDWB'%0+pPWY?>!e0RB@Zbd\,/=kG#Kjoi5t<W%BFl7I%`Bl'h#J^ic<$kVfm/SRmZo#"oFHH]7Lg7K^0h+<7+_`&$9?XaGhTI0X=c2H_UqOU-@FpV8Qp`Ds$PSR@/`M@eZ@tBCc0f&hDjM(L%#.@.O!ikk-+X8FI_?4:&fglj*>:;287E$*b>Ab"K,m.XJ@JCQ\%o]!2W5,A4qh7!s)lJW_%+%=pQmL0\7i?mp;(<8*N@mAF%VF)I%a212k5p4RNed@(K4p?(J0G)`Ucq@^h*V"&8R4KS%q>#\j5j7nB=B-n]c8D7:aKC%Q.$ffZK9aC!+RjpY">qH0!*q-tAR[hO`fqn`%(I^5L0R\4+do[sW#0KYsTg4.6jmW-rU&i=T5:X"@-".s)Xu;$>;\h6^JT+/u\t#N#dYq!uA4?^>3]Se4kj+3mGM!o:(g9BY,#^(6%8dmUhF!=*!\]Q+*N;i$<,idUpjkg^[8/*9h//SEL<5B;gCu.NS^&Ss?2Sa!t2UVi%!c].j5".d;0\V%5+pl.W77aQicKK#BTEBn)%lH5n4+sr1GObNE3$$(Pb,5C)RIVtpo%FT8bKRRIRN-$\pE`gE@17i*$(B&="8"2%V+D&a_Fe"C1XL]"A7T=)f"EL).A*%*0n2RX]%b"BK(K`M+(BbM,j&kXuCYkiB\"-36NKkD8JaTO?]dP8#MB%G\SKUWhP+U%LnK*Ct3<,0&C^rMZd8X4f=$6Z?Jn8<H,pluoBCWiAM%&JH<uD7BWePj0L%3]qV[9G9^`#uR?N@X=^?U>H?LiW_9%E3E5B(d2ZiDT$O!r:WGg.`,@W.^qS+)?NWA'J$4SC/!p%Cu4BE';l<?%LC\d/?*oVU:pFs7SlT+^.Mf$C/e/Hp#=:i#D+.9\LqP#MU7ePK*_4.?(4F?0og$L<hl.3UpTU\N(<054C-uK[P>;=$6**$g"As&g%Maa;*)KUtn(,FRW/+KYa&IHUm==cJFK_s6EV:96f5$!d8>iL)SaE^<(QJKn3cm#1dMOlX0aL*DW"LUr9-\d:t,8j$g>=,mA@mJ>%%*`VQd\]f^4]3;gGLeP7km!>@%rCK!m%[d(Pj:V6#1@(a^5l5u](>gW6O&T+o9jN^aIH]Cce:q1n)g@k.Y"!03+'Y3.3+'%Hp?`)7%Fok>DB?@gV!7YLghFALo!a&!R.jASo`CXa0Z7aiD&K1.BHCUI\oOIqUK4BQi"a6d[4"<s:J=?s=A]Y_kXIPMHf1+d&2\=t?L!X;L%@=XY3['N[5!2`aCU/D(a<>@t=cKNC>$e/B,6l_K=cLb\k[.4"&[(8(!`cCSiT5'9p;VCIhe:lo3375!b*[o$f]TQu$BI*aI\`4\?%*AKdphOn=K5YHglJADPX+Piq/O;F0.H+d#s:_L)fh!2,*dX?^aMhDgfDEr%`_sq1Oii/0iJgaKDi+p-i0P-^u*>R@1b^k3DAME%2%UD"59R^DM:2Q?]W2$r.WOYno"7u^0MOhIA2E%iEd:LQ`P<Fn*AqBZnTPZkX/Jqss0'Q@e+KhEk/X,MD%GGXjsLCllZEGA,b/`pUP%<9@P)$D'lSY4^mJE=5eRAPce4I0Cia)sD!mm\,2nj%$MgL1TdV_[Q]n;I^EoI-!-<+[uC9TH_1f>l?LT="-:(<@WaKQt)XR+LbGn%5*9($m4RN!9:`c!H#Rp.b0j(kL!A9WI#M9'hg80K?ufEiD4acu+>H9K2lHaAn7%A.=3t4=H5Y]W'#[\6IR8Q4(UL/V(s$N([PYgS%6LEoYNBl$j.Fbk5c_fD/4&K[4BXA7PnNt;c'%7+#>.-=CV9TVqrsk/Z::o8o[S.;s:43V/.6sa-5fI&cDJ^/dK!2$F!YDIWOV<@\%`j&#l6M<kYJRu6f$&QkS'Zcg*7"SC7g.c][3sQCe_SZK#;WMIoQ:h`UP;t0FKQ#f-Ec7Wl\QuPgMoF>[#9eDoV,&V/=<e#"J=q?E%MRn],kb+<*!VIdEn6Rqh#VjU7W.-$iF9jH6H>?-6A!&3pE^)m2'Sj%;0'/i1+/da83FAWRe`oWPSe"Ro[c_cj^a#M@g]5rcUfo+q%WXA#()4sntr&s+ed0a[=.)l/f6Pja.8;]lmPQrQqVkYcW:tGoooufX@J;^\ZG<$UsmE6>3Xr1ou[Z8Ug=ch]rEqD>Ak/IIpF==J_%5m4;Oqcd8uJK]5nAZ94%Ynp8n3np\X(]]s@d$]27a.na^J]L+&Q@Biie^>hjp,Pg#m[r>c9Mm31\0a*6_'qQj-Cj5&O?u"<Z\n7I%N\#qm'p=bT7MVG]cf$+B>XLuZe-\PP>LAa=Afqg#r(L!*919#V+WG[-R+-7.]oDEa[gNI7^f]*bQimfu:a>!G8.=TQ6T*nk)A$RF%gb&oBO>D^nSnoJ`D5ae9496",JK=t=W0h_A>-WC<Cfhs/;(.^6*QZJ%oUbQt\2LD8(nf;X$)Q0.P:DNfgTM'jI6g?L;#;i+?r6*(%#>CV<UCUq1:l'LV.((Q#,M6O]a"g74moU3mdDZOj)g&Yoj6'llSJp;fc=?+3cNP*u0*n"/3/Lm652G!"F_J$4O^3a+6H3PU1dkcS%!>8K'k1ZD$e)6H0&8?[#,0cHm^8`Y@Zo4)MXOmg!OkJs+ePUjPqW]P&"jDNn0cZ?%n]P7tY_kDe^)TpXC/H^LatS5^ZV@Z3eGY%3%(B@V68V#1l,CkZL4CsD$:)++:2-m-g7c<eM`*SlC'aXMaUG796@BPDrNb&e[fnpAebajW7CXd5W3EmG@=1cE(6X0q/@*rPD+C\\.%@=VbO$@t?[<@m3=\('jQm8\2>=Ht'MTT&)i2H#P!:9=o#C4\j&W*ogP3C\fLYW="b96skeZP]V&&`?5_8Dl0Q"W;NMfEkqtBZGK/%.siD(F\"9O0@SR(*h-aGW=dbnP^(N)EcSG-gS*+R+ekiB+^oMF<QaL^';$f'[ReHGR+&GGU%C55@:pV'G0'3>4pY4,@M**,"Y8t3%q$LdOUf@dJ2Q@O*'Y#oq.b'&?!g0Y?a'o(P>,1'W'lsFWJtX=&_q^tO&W)o`9=`G??S(5`X,S5R0%g(Gp*p<B@uQh&W45=9Un!1d%+LVYTZ:@b/3:%)fTrC2N%.(Vh2P.S.Q/3_C2('eVkfSZ6eWDQTDe)=q^[E3YfgXF_9(g,TE\qD2D,:_>Vl6H<6KlLP+-C>7Lc5kM%6mbS]*(N2<G::s=?c=Bq#\HsH[MIk0+?51oYTU<:bcS>AWsTni_I*XEMM07YStZp@UbZV?b_-s,(<RI"XVb;`=OcgdQ=Qq%_mD.s%XAD)_MF0/p`dXT7-.s2%jT>fG5oNU^(F^C:%/&h%)e'"2oO)f]q(Z"c!<E!<lXE/"6#(:S<3aM7_@&`D&h#M&9ISm*bb%g6/;k(b%'m*1`)[92>@Tjr]_>rt,NA`>56sZlG*-*N>Y7e]\W8*+M1CNbM!aD08B=&mN`Rq=S1bkRe/>Td\-mTBj.u_h80LOF$QqsZ?820lq%7P*l%$]/&<r^5u.[IJj9j)b_hOr-kr$R%S*UmHWDl.OB8^fN$cmb"Pe:o71B`ep[HJ"CVuoQ);bCFo\Q#aBWSoL#OR($MkXMU2pu%.'I)rF'tg5f41O!Fp5bh.7@<S_A=rTC$J&n?!1&o.&u&RHh$nunVsB,"?WCu.Df/s=C>h$r?_/A=IWTR!FSC1RuA#/<tCiepp5AD%d*e]nQCT%r'.&jtF1s7kOtb(>9M,[VL&o1/#aY7#,]sDN=<$-fiZi\_p,u%U8\>[<:=?i4P6mI:b_qpa!eB?G&LeJ5lm\F6Eies@%"[596G)&4)M*aQnEK^1J3K"!1364H-X8>Nu!2h63-cBW$Cum4L?Ck8q]_,bMS40#b4AFXYe"tmOXrX)%LTY*[d,BO2q8b-'NRZ0h%G8[4W,Y,T#6C[_r<Qp7@5"$.T4"fP<D$Gk'>r5o*F>q!s4q;Xq)C#7MB9_"7B-_j0c$fH[Sncb%4%T)Sk[Hg.AU6_"Q$K$3_MWkK%R,Hb(ULNeXio5iO>7%*l'JG(DY<E/*]37lZ`U&HeRPe7i+>r2n-s'8A^kt1P!Fmjpab5?<>sVP%6q5TpA[<R8,i!9Z+1<Jtp>sO%%QUd9eQr7Bp'`AC(7%&310QGJ:/9QiC(mW"34!s/(iTqNsWV%\d.E#I6A'430dNg2.muH-Kq-5#FcNZ=V]Pu1!>H<VJ#+Wde7G#5'%D,M;D"0'!dVX)J(BLdW`V[YZoAG(\EH(,C[Tbum!Ldia[>%dsd?`9&V\kep?O\^iL5Y@,!<nCou2_\AI3eo5u[GsrSbGlR:=,)\3%!9"*d&5B^&)P@5TQF&?W%]@,H4.gU`FlCQaNlFOs3e#FITKmG#)!f''A+i:N\Z(Bi',9%!jsQRt)H*0Rr;e9O>VbfdVVR1WWJ2N)%ioXap%Z1_:XHScek_2>NUdUe0_H$eILmef?ZXEsO:2qIRR9Lq'pIOpIjSUVbB/bZPo\dGU:E^n^`>TI)&HJFt3Xi5"GShV.!976<%4GXp.TVZ3OUFXgh\2FF@M4E-,Q#VOV(Gk[Rn&a6DE]H62<Q8F-WBri1Znmf]!3P0Ah:+08<:$,u&7*NP,0q7'rkQ[.QB;b!pk46K%*ZO]VJV)u]1#8$m+_T8"'oL8hTE[O!ULI;fD7DWk)B$i^BR4'pKPg.kH!N).$We^OKZX@+p4;[_+5,Aaii?Kr"pV591H.''!/kMe%!"4pm6)8mf7:$m:/$>_,,GH."^TG+9r=n&D5"V>T0DXA;8-&5mILrf5KC8A?jG94OFScd:ai,_OAR+D7C]gb(BF5"+B>C$S'PTU*%-?d9+-t_!b"!#/K*>2hITM"39K=M#T.F>GrdP-j(.h0Z8:*n<p_<Z-/%Ci[Ip6?IXYXM1f6YR5Dd0Ehh$AW0^o2)qYZbHs[ks>_p%Md9GP0+ScJLlFkFG!*1^YfKC>36Y#:hRE9&@K<KkK1A%bX[.L&65:X^*CY%"Z6A+>Lk!F[Roi!rcrD96T)b]HUrbgW>,42'JJH)Y%.*U7qo"$Hkbqnr%'T.:'I-G)?E?u)^Ba77U*jU>5gg`^N^#p,137;1UP4$-n&D[Y'?(Y+gDTnGJ^ro.dR&YPXIB!6f6hWqK.h2`-%J71bG.'pnF$<YUbk!TcW`:<r3R;J)H1rFoI0&n47:_33Z[9PU^JE9UZ)1WSO@Rt]<FmBYk2Hm"L"6i6f<tc&<i:M7_&t!:*@i&WZ%k/UPT+_]+45:,mIc^r\)m-!ddO#*9mfHPB"Wf0:+P7LKV!=(<4XE&kNae^s'MtphEGMcmI(s4KPOV%i%@*!m30NsVb^s%Go..S)1%$5rdFOuW<L\pT0]P#.MY^uU2ck2ksjE9hmHiiS^hiSM3544!3OfYKO*;&GI_WW6K"fum^!kleS/Z1476:Df9HZ:8"#asjE<!?Dqe%irn6uF=;pUFBo']#sO%mC-7g73Y;D`;$0q;OfAHlhBpu?ANpq9mlhh$!(%Dn%n7[eIMq?Qq==rh3=;X@,tf"fT^Caq`+8"CLe3^G%_]qMu'2Z,OU63Q/E-3jQ3?7n2i1IlQ:Bjc0E!"6+A;cbj0Se>U7tKfC$#bA'$"<_#=D3ahY"I(Es7"[@-C5Y)$J:2idP$.T30o7@%-fOl\!I03tVJMQNoaG];CQnc!GS3Zq)MM6F]Td8R:u\ekT$jn9)Pq]G=9*N,&^lu"OP&OrLKB;LVdefUTe6K_7+)\MX!-##BE`#f%0BI;+6AZE!&c,s,?*_c`Rgh<lp1U-$i$78;DP[aLN6hc_KbB/B"Mcf9[3qNBP9lq]Ac*TKA5/?k3Ik"c3JLXY7?=2gD-WehTKuGp%]'VTaAXfP4U$!-n]Ede<-Ch:069uU(`>d$-/)YM=bREAUT-L5Ac$YfnC)9Ykk/2uZM^*LtYQ\JW"r?ZGjN0YTnYKT2`#d8`M#3-l%c70:HB@!]9;HlI4q$aD:Kg5:#O,'jla3O)4mn*bA"lHA1(tjDe39%jQkN'sAbJ+rsSWW0ElfMc2pu)bVa856oC\49Bh.Y%IIiH@f%)tj+*gY].0e'77pebn3=hH*5'dAP:RVrmU2Fk'<2B!d^XU"9gJrq:cWOdkX6WnJ6<'i!b4OT'eA5</GMI\3bmRP<68/07L2VF;0$%Q#2#QeN%kJp?Eu)H/kcNIlD[qe[iH,]Phapd7!C5>$&uFrFfba]9.JW[*0PH-4E-8Huo0e4J_B-CE/.D,.H:<a(3t$ip>d9-^oS>%+6ou?jJZ$cs*ro?&)^)DC%J?Mhh:iuE?_knGGE]Vd04gf;b)#P7mCX%P9Z+N9H5e^(S!SW+9"Kf$h:u#6[`+`o"\_T55aSJn6[=;%K<FTk6c\KQMiO!N3]PULF\Me0)%XDb2m^l+^0KeKq&^Hn^M0Ope`@*a@a:Z9X)@s,VQB!PkW!j#k^6B<\s8G"*p,mFh9TVJBqbcD%,b`T@H5*tPb5V^EUcKu+c5ubDjGtcX)08=1r5V82j>V9bhZ)rHJC*J=7?'\XJ0o)A_J[9KS.P65aM1^Eg&C^U<-rA#f.Qun?+]`U%Q92,1Is+fUQW$#8\O5u]Tn1Nb"O:ERNNd>)'B>Eipd^m)mMkPUlJ?%B?]X1gUPgAGkF7H<p#l4t\!bY/IPTj/q2ssimDID$K<&Yk%^8#mXCjJ*A/^3\UHDGjh:BicSAn89;FIW33(go*D28#N%4KRF!P&i&VEHjKQe*9Z"InIG`40<hl[eZ<7-L&!&Ot@\7][GptrT31M%e'JFf4$1-)?ba2$CP%`>:=5<UVZ=HtLpn\\&d2(IVmZ4mWYEl+:*2VUn#5f/NCace(kEN&%;m29"9RM9UQ@kL^M_PnT!,;7+.H4S%&S@3/+rFiUWE,o]1p:f^H6j*UpRrp5F<aqF^,tu(_I)`L9l#f=C0YDc_P^2UQiGE[<#O<+Q(l^EkD,rsTY0ncIQ72q>ZZi8XlG3"%a*'eMeLJ_->)gq9`r1>W?YW!oCSQ$!h<`K)m6g9Ldn.jRd8R+Ag_np^2&_P?8i5;sokRn%0`C)8SCRA[pPgQjh3Oh4mop<^<rN#$%s!Se`cUWu+euc"r"tt-4*qMl"EHM0Y\\WF`A;Wrsr)6Dk(r,Ihs&HhIc2;NHIfB8K>Ms^C3pH+,XDl[g[p&fjmUtk<>[atdGT):p%bE)F>Xc;^K,GAk[qVR9&+c::\>FWFWI7(0I/73a;FDh(lGP&dAT0Cf[Q]5Ndnpot?nKAKl+$4^Vf.TXa;7sR5UNg'7q#]<>9X+LX%BkDdA,[H[=?o"s8PAP..;uQPN\``)/jBnk%*H`9[qd]ftDoMPe2jLAD>$8Uqjh4EX^O<agNdl%)g"Od_Dt_T75;T:rir>Qb%=K1D%8lZZlhaq_;B_-3XrjPi/W?:>g@X@4OH'rV^5VDQF!6V:`dY*4e&@KUY+AG7%^X1(kp1N3W,g-$'05U?+WG='a0@cf,VoHHX)f2F$%QbHq^hf`AB_fbc1ncROjZX6A^5lIhRH?_l4Qgbg"KqFD)H+7\I6Sn`Q'djH%$?I,`Z#2J'Sfa+W^00pS7j`^bq;2Jd!rojFJg\4&%*)?%mdgrkbk&nT:n]g:iIm)RO-D)g1A"&M4k>%d8PAiEOe[8GYr]elM&DG`N?/=;m?ans06CieGI$^pnr!Ipqrcr8:fBLnJm2pg*%YP=T?WB3^UJ,Gk?RRl/Y>SkQ;3V@oT`G.5mG3WH77p"lYR4oMl(ZrGWFU,:RpW@I"q>]fo/sGHC)5phMDTUisC390g,^Rd4Y<A]K%+)iOm_NcN,s4dD3IA>$&n%#M!QS/-ohkdM;<;d?"BUIZ,F1]nKps2jDJ)<7kCtCu(L,Ucr@V(V\^\qIaA,0IgPlEu'de9kor@`VZ%s23H]I=HV:J"7?:?kmnAdH[W!_SPD1oq+"/qp0b\ni@u>Nc"NZc$u!>WrMVB\<N#aa)(`tHel4]1F&ppT:M85!eQ<YCJm)#d.<Ki%("`B0:+J>Glcj%XKJ&abKH[9OIWZ-([u&mBAnp/:q-WXd$`\F#Hu<4If"p_L++O6Q2sNUjKSN$pI[r/[K8q/tE#c'a8c)?HFD7#Z%O3^$IY&BpS7R&cac22.Z7oYNkDm,=2EbfIZ'(RMp*!qu'r$4t`S]50721!niZl>Q5-$*4:/]@+f_pR57LO,jQH3q0tUg;[XhdWmq%p+@Eb!4pl[old7\])?PU$.4K.f_jQ8,2.YJr-,4;r'YYI8i;(egj)LA'K7-/&ANm&!^E]o3g\*;lZs7>B6H%Z?@#,BenNYVgJ@KQ%=0MTpL2_K&g:mOS7`d!,UFHf>qMs`,q/m^[qjpfqApY#]`EIhaXid)UC*UYOB`6a(rS71OcKNjPD5Vi.H[jfG8+%9QfmT0$ouGt9%p"tbV_r_VN?'^Sank"5/?XIG@_F)"bQPia!WS,DCWo)\HaUEIXY+KSJB\HFKbd&O5bM'SU[HC:`Ss\pJ*fiM8T9;jo^3t7?YH(T4%kH84eg0(2cjCPp6^O8`>JY;[Ca\)S.)Jg5iiec:#q0/V,"PQJ>UtY:e%pEEtQ+n8>SRar<lhC(m/&TW^J!+';qqK02BIDKeimD_i%G,Nm'P:on$o1co#7udE%H7(]c[H:Kf*lplVHoJ`VZ>MG&7dJm-?;pn%)8n8nPs6R-kGm2:P=*rP7]ZF2:?o1"H'tH(<.A`>G:c*C%qUed55C32T[]nEh6Yd:)eHi64RN/a;U8flVW4N'XAV3b#-iKk))_\5NnZAD@Nj%b1Sg(pOH`'lY^4dHV+0UMBB1QQjXQ#:UYj#pT%r/mWPfcR&i`Ra!F_$kWC(Ud.\]s.&.*R,i-B^0AeeOhJ1<pt7?n5m;iX2bfH3C@>Kl`/qUWsQnYDhs-G9-^=8f5#Tu(Tt#3EJ>E#%Vl#BALS%Fl`FbA1c-u>Qo(i9ioUqeY9/hlG3;EqDioScB5!?:hDBG$3BAl$_[EI+e2!Ju]OLi;t/L@!A9("Fc7>>.^i9mUH;"n>A%?bb<S:9SCkR;-#CqH*8D=k!*3n&Ka3V(u'c>C/pMJ'X"s?aoch'(tPWbM1<0rMd:VenK7_IpKIcmTU'#c,YM8G2Un((b4%"AGQq@%nYef/eo"bH1g=q0HRon2r07i"RqD!$e(d@"Q?X)8[LCmr]d@7%Y<OVoPcXV'rn*fk5MRh91-kCOQFfHB#C(sPI[9e(Z>#laN][@#%04?p9:c5f55`.GT7./EoOt1SMpoE)C>"eIXl;:Q#@@-Xf]3oVI`FR(/f?&Hh-q&p7P":h9X-&5O[<4eJjApc/\*hu7;4"447pVjl%2X1p_1ZYZR:OYHM(9[+u>/-Me79B5_]`:/p64_eh>MNOUkT;LSO%E@="n&Dd?V_'3/9qg\]W(&^15%'T7s$/u-l:B#2EAOkeoe$a%^:gsh`C2Xr_V=JUT!'1N=C/L`puef1UoB5Gi@UV8i5r$Pj<D?CW'_(USJsZb;:LC'"@qV(dM7;]#qM6:PO$W>ImuA$[su;/$`R.s%qaXprOn[q6aA^rJgIU/ZmY-<d69.l"P/>D/)Op7+"5^$/e'RsIqtWeJd*lE-\[C.J<7^!9HIaTkMQkOXrRF+9#?93`H>FBLBi:jM%HS8Ai\Wjf;mQs)%#jU.0`FpuK1^t</=DCKfFkY0.4=f#W\F(;cZZ)="g+I;0+=O>^f_D#MJq"T])b=\[Y!!QP\[R.Jep5@!N<aKN%;nm4W)XRV&oRt^cdAG:/+=1PQV2`P@SI)2o8;!C-<s@rBW6d/a\u9THglI%DoCLrLN5YSgnZ!9h&@LhbO0$T(;K,^>?;rnXl0=L.%+"nTcN.,JG-5(R:P7Z&ul(]m:LDMbAIlfe]8pD72?JdJ]"[_28UK#%5Oq@71CKtjYWG).Y%pHO7rTC>m=&mA@aL[Tc7NI&F=%i59%6WuEeRLk8t82clB_3'LfmCV,N6sb-iGd3rG.j6%;G,$KqD@:63?D-.hR!.Y@oC?2(E,0fqXWu+UZ]&h6B<:)=d_:mk&,K,>ipjL?%.[96FY_m3d)t2WPral7-,.'D?m/ILW<_b9J<d!iJm+f`Xa+_8ghV4*LY5Icdr_7cbj0!dtXDe)qGOBW]I9NXhrj'h8j]?)4ku2OW%2WO3XNE)uWT110Jk*GJmNm6p?NQ:1"DNdj\Ik?W(4YIk9c$q_/*330`*36Ym2D)N7a#7NnH>TSY+W9(tS[WY/F4ji[gaMq94FDQ]%q75;i^UVk&qJ,EsBP`W$[T^jIQYZ1gqsRV\iq@E"qtA4MG4VbYZIQP]C2JFU55W"+['k'fc`Vt_e;HEYEGhO,q^Ld5(?A1+-a_g_%ie_3b\gl7aXk'!8kG4=;G?36U_J,s2[A3-7M=\E+pY*3-D2Xtr<3r]F<r6a^G4[o+]JK7b9O-r-k1rA3*US+!T/V6Gs4k.\IXSYm%me!7HmDHn5F/M+YGCT/=pB>')h^A,5,EnO5<N!\#hThq-e$ii9XgUCG13\%X?[1VViiMEeA5[R)Sso[Uam%<iRBB>VD4*KYc;(KY%C\ECce+)hk?t=:%r%t`uR]Ejpq9*AFVnoFU_kXWI]M<r[40Q@>X%nkhB\i)U<i=e[/t<grpu8K'5b/rk9kBXBIFGaA(7cdbnT$.n%Ve=+CroUlNLMgb9GBMm">PbQYQZVLM]8k>6\(eHaqY(6T*S%,Mak1IDp&4RE8PZ2<=2Eori#4[oYC1K`3o*M2XEf9G1sbj^piLj4%I,-Q#g3Wa4:X2Y;S:<>;C2M!qbGs$eQh7FU*1aInQojud^004JG!?jW3kjF!1O3%b3AP_<126."5O[dZ20_"/pq;!81XiUDX8R-"%!M.MZ/apaIfp-N!lpK38pbXaoSSKf^5GM!".ase\K;7/V$$Nn&EOVL-l.8q9G/!(-3ZXW)O73'^LNfpc#,9jgV]TMT\%/'4hYl)/%bN\YH`]@:>Zpgm3`\Iq7=1QtqDTm<`SK@`3H'@"Irl+=&F]52'q7ZA/lX]9;1+r'@mFCgUn&t%<f]buPDWZ+g]MmXs(S-R[)WnVD%SNOH`3M!=sS:(A-F3WA%Q^,`s;l9prL2MM==R1@V=l9\6qKD@R`n]hX_=,-62rDn!48m`5paA1WpSE5>%u550:\-X'[XNW%o@D^]%_<O_[I'()EkqqWnFM%3I--06IBQrgd^/`'Glf4P,oVG])4b#KdT[UHS969Ufc-5qFLEFX?]RIQDb0K\Cm&(0ToIc`[]JQgo&,X*)%e<sL3hG&4*ct`T0rsCfhW(rO_Ld9H*`\(R$gI\<Dm4M:]d>Y?ZQ0GFHbjpdrD')G[Vr'Onmo.CkF$02/GNjP(9@@[bRhQpuQ*BuY%YGBY7kA7&ugQ`ZAFReBXHD\<pl]\O0MGDumj'#0!$GGA&?_+\)bO\*beEU5qrV6'\C$4NgUf41L3k*Zm+-5S3h7)OMlVU!4c]2cW%mu?4slXOk8G8G=kS?Gl7G.i>!b4IREJaN9<an:KbphHNW]9eRE\349<pTA!^^3fIi:RUJ5@k0\:[d.S?b2(tBF<Z)-CM<_?]@UPn%#@Fo'k'ZR/fmEJm<SRFoch]OT=dtoPT6%^O5PA0FT;Q_Dmeo1O$r8@mYL3>NRpT'+hQUHHCI7H#V>G&tqRD!g[@Hj]mI\N?gFoUq%YB%Tsla'qF>.<fX^YYO]Yn;At0Rs&*[f+h+N&tPK])O4)OoK1rfUC"ZIeqZKgTERt?Q]8(.sHuor:TF2@IU7&_;?/3m+^m;4Pei.%rpf0)l(R'OrR=sgT+AF&<ig;P^YKblBUF;JbPHB<p"-fqj4DC++0SJ;a7`S.?X'Y/+!4!"h:7S8e*qdZqn'36mbm.%"+9J[6ERX;%&+-W?;k(e1cT`5DB.)Ssr=iVN<\4'\1c)c?A[\aj^&0_Yp.7l(:P)+ha1E"7$0l*hr]JttU02.Bc#h':Cj,9,4Z:(Nl-%`WanJ3+%r,M[\D#/PA)?+dbo&n"pAa`.+$_?..pp9(Yk$9a2UK,^6lFHa7HCRUGdF2_Olj,')f3?qqX6T*#j\3PMNGg-&:,Pa)>N=#YdU@i_%SVa6C">@N1Jc*945[ihrimXItmd&\T1DfkXNc0ENjE>9TY6P:mSHc81.I#6.o0[YilLaFi6)QeSIX\1V40:<lW=.L8enqekl;-ns%_4C#LV\f,thPk]UTeGlTePBAHf<8Pr;Oo/J]X^8`=5@I((f&hL\Pqt`/AK[(mGCt0<i3JDZ9qBbM):XA%[VI3eoNnVDLBK.bakfm%89-cqIcNJ,H082*aBbV)qX/K<=7,g:f+?br^X5O;5@9bWGOVVp\beBE`t+KU9%7W>s1"QJW!1CJ;Tk^$=#*i9q=X[Xgj6<?O/G5<%gBR.sn&3*4b/t[<F7:V]it(bRa,6^mDhNQFj@X@iPCB,6?ROoSl?n6(?2q:'%!8bbr%rj#3NG#0\mMYt1c?`?O&rW>fo2AXZouNU%c8Y.DotRr/P)E$_ZF@KZ26$P::e&EBP9NZ#I/*OK=/"kNh*j)0lb,MC.K4k8O:jB`A-[,ZRrcc>m]O!Kg:H_m+"%#8%56?)XQWI8%Qi'.W1P<gYWI"GVEF/Qol\YHVd>Bt78``>URpE'XpKht3a!Y.>2p?3ZhQ*(,2_qAY;#F0Th)+Mlg-9fCjR\.5q`"P+c3q]\E5oJ%%R#La`D"1u"hnP_Wa(-fN/QP/I-i&OGA?s-n=,UYgReh)/p11.D-!*c)=\ZLl0t#cfb3,mR<Lr3%=8oL2]^@"5Mj5GKBCh0ed^+)$%nYC@OB:gM6,Ek97j85.UorYnPRrHU[\?kpuQnm^(gq#K/'TP]1p3HGn>Z\L[Xkaa`d!I+FSUW/&Ei8%p]\0@Y27<',L.csbWqTE+%`]KDD&?A\.ENEcKT<ZnIAmUBuRE=[Gr)<H[kV8bN$F=l[\WEO>nf"CN\^`ZEGb+!Iokdmh\bID87I$(D[P5H3Vn_B-dN@SERFb4)%>X;j=$g/fS1H1TS\s*\Jq9ithmp1@Sp8>jB/&$/c,hKM:V4>5hhjVSMBWpbmo<GfIa%b:pS5OZ#i=DZ76A]P=)ti_3G4+%^hDFD]%1?/upH1=\UaIGK?qUbMUH'7dbdfqEU]-Sn1ddg]9PhD5\f>k![>$I<bli97n345=K0_OEC;ePWH-V[UKB5(n^ci(P8T)7]Bb]c8h%r8h&N@_quB4bj`4(VH#J4=++@Uq`C#Gsbc3]3f^dF'1OJZ9OqY$@2X#%eaArb3r\15#j5-j?X]rSuQ]DO)&:3Ch(0>NhUNiCuV1o%]JJIF,SaB>KG@-Yg&Y8+:!rfD1"'mc6$(UQcRNYFFVh4'<r^s[)QV6V_g"5c4Xc**d$j4On(h7BH=X=>_)Cll]3.^QJ6VhrfD5-Q%^=S.5N7QePSa<FOWjO!A]`6M20D6]-6bI!^lKfKSPZ8shb[n>eLdKsH.BuT9,$nk(a=/!^dYeHs)+^(&I*nDT](S5tQB;hUC<$$:%Xe5U^qNK%KUa]=!.3F_FMo&$a8QTb)Dg)!C+@iF$%P>=TI?9M[$^-<Sj1.MqRI"]c0-gPgN+lA]YBN>X!6P.FpFG^qc>R:aj+lV?%+"=baRiTHuPgX3?3-ef]kBq(&fY]^Kab;k+e.)2e'^IgOAFdLl=hj=nZP)GBV"Y@:G04.]>d9'[,ZlUIJAli_8]K)Q:?I-1*OFWf%Q]Se*CR<mj06j(CUe$i6nAu?_UWMWT]/1f$`$-T:H3qP:<3ks-s3<"&Il0gG`,o/T##Kd?,P8_9=akpJj5I]%B]"4UREX&MPb$1u%k7TheOWI[eG9[%HQ!Kd4AJ)WRB_A,&aj\ieX-9Hb8Y9OQDPf6"BiZ-WPH?Yl]pE<,du-FG=b<'=4]qXWl@j#or"tGAh^6m3'2G[c%dpDkgFORNt?Ou,Ta!'6)^$H^5Joe[$ED1aKHf[o.dI,0IUg%:p,K2$Y0D"D@L]BR)-,!jG]9b*CZ*J>Eql.ctART_urn\g?b9B0:%Id1OBkL0>KafJ6uMXOj@X\5;IKEr*)T)du",r=^:X(YXa'f8rCF'nEq($f(t0l'US]HQLklLTO=<U<o*PGd+/HFK(R,l8F<ZAFK_%#/5Y_Q&D`h?DGX@[+"3MVoegj`mPX>^)k[dI8ISt7upf8'$>r?@1[VCb_,Lr`=%V^cfgR2j3(pV:-Y(M8r`chR5E%KP+p2>.,&\@%'J3*JP2)$?:pfq%ell@NK/YWQDtN"tZD7X1)KQ,GPVs-diFmVc]74XkBJ6mma8JpnPO:cE1H7fb*ffVf[.>NoFLGpA3lb6?Hq&-6%>6h,:HXl/0cmdG;R7ECP,n4E8&V-3\1JV4e*?RoK>b.JI$I\$1o#Z'DLof+ApIAhZ`qgjaipPumfs@UU]cXPHq:F+<De*lr"pJ6A%k/pPgT'^&+\\:Osb_=dhfEFUK@cR[(/akjWahKjH/@j/s+<'QElW<]ocBIZ?r>L,&KYL;'dYg?L/K@ID!su$K""*87n(07-XGlqA%q\H%SMkmV/FY4WT%Q,R;J&T.oYL52?@UB>umo-@8><'t[p;Ou-Rp$\tm+G.5f<G$%A-u6Ws54=V)J7hmE!`.<D^"f%jnnTmG9iRS%WTc!6Dl)kaV;*bFH%BL2hfHcae5D0.=fek.@A*or=b>+6R[c38l9^fpFH`U"?<W%L>+8j'a2tVKM:=:^,!%<$c\nm&a]/?>=SqMZ%%[HMM:6uuaq3'`//oeQ[&(?-h=ZX`SQ?)Z?\I[/#]0Jp1nQa8(pWp.ZoQa)4ic6?.q"j5\Z#!Cjj_Z5Vl;.+fdIsCilO>]%.=I#!%Y#lQiEh6hb]p!Du;sq,KNTIA])[k0tkM,&cJ;5VFM/%l5'rclp/sgsJ8I)%.#':22oV^kaRJo#TNm6JZFTdhH[BW>'q-f/R)jq[@%$sdiU?!"tk$Y/CX,NqsM*B](Z3.e:]>-OV9]&F",FL9uLA*AdpkXHnS'15h@6'mEDHuTR#E<P+=jD\SlMBh><GK18(k_e\_kbfTB%ckT'tkutS_@d&[ok_L>H*CH0:8C!8MHSTTqKg,#%O[,ssqAN8'VYBS&X-_l?dcGS-GU\X<)pkqbn9#8&d.3X^A=X5-nKlMjnJtBd%H^aW8:>Jc*h4A5b-%j%r8gmQb2SOd_jp.KMi*^n%cBY$Z6Eg8aHI4OgSDHWUO*p;f"tLNgGK:b;8,E^`.n=C#k-\uqo'PZpJ>s,]%&A7mcc62#RL1?]?hbdl;;1DLpADO*6:![4VZmTC6MEu\u#1XQ3Yaa<^PEh;W#.qRi'dQL*PD(Hilft3Y:GE!@P0j^5me>C:g''!h%=a0#V(7X]M9Q#Z6/4m25j/9jK%[ta+P0.4c[@u?c6)K'aQr4o2fau0[ZMh5RQEB[e=k-Yn`Sk(2RcJe8'L;:GMq)*t+4tLh!Y`9T%\T)$?SRQc:T/aREe-2]Im&kPQ4cFNU/#BVq%o$9rXLujs;?8:bd_I5_b4gIR>?>S>ie^u*n9r7F4Vm3!Gh#;(?dG+,r54VRiMFPS%*f"gBPiX,S18UV_d]^fD.sB<-C?]NQnkC9U:Qd-[933[Hp^LG5N_Z/,G(q)cT`FV0[q>[c?1hI9AO3t6Q<N?,TEn;1jPskls6+I7%4"CsjKU@lW_HrRD[m8ThaV!L5T8gT,U^7=E1.j.0oW!'qB2/"p\JO[1[q-glk/e-Rl[AMS01Wa50lu]&(IQBHctbY!31&I\PUA6@%8NAu_q:<8b8Fqu4H:>e^`)'mD%nHIYp7o([&s\h_.L_Cp:n@N?.+8[=L`]9E1g*jr+o/CuFm;Ye]ro=_G#KVK#$#i;Z<!Lf&`<r,%;FdB]A6ePa1@`EscIS=OVI2r4J$2sOKO$Tt9J>l,&j^L@6d"QZ=L$bm1E%-T,(Af#e!8>%XOqm[K6sT20;4Mj2SL5A_o)@;1brdH%!IJa"n>R9^1<R5(Hl-&e)AtoL@/T2a%`8'KF[`+?/3^6ZND,A(*u:`?VgZ\FS7HJg;CB#FQc/01=.oBKa0FKMj(4V>VnHNW,d&-A%`?#+m":`ktm0uRb,Go)DS5$c>A\uf[B)6_7bIfK(H_js`HA7Jl>Slt*"ae5=p#jM3oMF?ol`XA0=/Xob_FWYB%O*+,/jDpmIZhmb%l6SU.R``.B-Y:cG*a/9bNV(H`3K/2BoS;\)(*>LWmNq\LqN$CfHU/0(*c<)2e^Eu,4Zl]!'FuR)o"[2g=$3!-,A=60i(N+hZJJDo%rYo`;S0@>L1cFE>\.VpGL(Flnm>LD\2ro3CK.N<uecALf9+?!2Gd6Yq"'!u%16Z0,T=6B3'A;InnZocV4Eu*6&>>8YO?M>IndI-f%iIuG1_K.r:Oo1S[B@%KBCo(?R2Z(;aVJ+#($F-\I1Yr#HCM5E`5mU\7+AV279(X3HUt8EeU(04/K/</TfLc(eae<4Tf5U'8lil@D%)/_Q>mibrRZ_sL-!uC8<?,L^2X(Z-rCT+_*>f$M_h-`>?p2k@6X^!f#BIo]`VH5Z4]rA/NNA/8\N"-6<HEtsf!jrf+qILKUW>C&=%(m17D2S=jqMa'Rb8@?M:@76pBa$7ca[o+h&2/-\G\uEZ,Q-(T)F#6AVWS`N]nnFb>OkB$P-S@qUdaW`:N$+n@iq.WM2-c[>Yn?*i%=qh=19?2c*$4$K2:QM+>,[V)iQa\Wc%>>`lDco+8Y!9JfV4hjr*(3"ps-?J@UK1geTl>;RZ'+Z\npZlJ"e#;1"bBH`#DrF8_Ir\L%Z_8[EK7GaY*uF)]/>5=``mT^b#N0#CgZ^!$r>?F"dHDMWeP[`a!nRU3o'=`Ol+N;eDU&ZijGD6jUP@r_1dE,p29pH:RIq3nRGk@@%?fC/!m?=<qC1k5geb[#PA*NUISNSa=Z!MkYAb/p^rR'cMgsP;]k0LR\q:j2';KHS_qt+@pg6l+chaF&4W-^CMnqeOBD1>!8`I`U\%@7fNf[oXqiLV!=3'`thV\8ct`([Q=6)g)A+I!.f/SUf89kqmVgT\A;oK&(`@fKHe@SH>m9DPmK7rAuYJCF1'1QO.gsoGt'_F9n7a%R[0LVKA?MMo0+hEcC68=YT)K&0B@:kD=>/$bioi2pa3]Qc(B9tDEj#1h'RaO:3Sn9qPlUD_W.+J\G]7Mlh",lo'Yt;jE@!=Z)t.g%mI[PV@)<!E)kkqJcRr3jeT3[N9Kg$Afp^L<fu:?3/^>q+4'V"79]g`bAJn>k,u#6ue;YZEqjoFL=Um>m<duH5,MF^-i)D>9B.9$E%@h@"ji`+oC5$.Q4g?@Kk>3tDqV:VCaadI,/N&alB6B^Y5$eL[9m)@A6c&kSu7iq3-?XFt4>S"T`+b@_rc7]FsXe`.<cQVu")CW;_%-!Vlt\^XrG+'8HU1je?-2n?Pd"/+tVl0U^(m\P5srhAXNEe)TT%4dmm'ME)a%l6a5SOk2B\1[qRe!X\0#)IZn_i1/PC&d1+]$.Hj%A#kA!9kS4@B82M^UZkH=ICU0)T4g9LSORrVLD3HqMP\Ku7YVIKB@=,^o>1q]Ra.^E=46E=U?N$U>R`EVc4ip<p)P/C1nEmY(:uf\%BKFV(ZC-[WO/=`#hoK>8ltM;i3n+'G]qGXfVX&-"-`6A@U?V5ob@*lhosJ6^Ni),[$?E*T4.>T6/(S&aSOp[:)1"-1W<!T84k+.+%;Ze73O/=^99=fN/#EGZ;`R8=of>46H9]9JqbK)B3ktJ@(g%T(IBKFUOUsQE%&kuFOP%t?NFJ`0O!^+35"i-Dfc'An@1\bFoHa">5%"2r27lYaN#-l;YXRT^hX0l4K`duXpIM\k@&'lk,Peu:%&D<d5*<Q`=<^FR-&PWJr9*>P6/)te"g<;2JHOb-KpEdaK+du_qgj'@Ld%qQfEtEhk+X0Epdl.!p;>O^)UWaC'@DGb9Et$uXW"RQ9aMb6PWE,A,1/F-k0n<K8Bo+6G2J_RqO1+"dqB<tNJR/s*58:@M`mA-0=]%E'j#cP8,#n\>9>P>oAX]qu5Q'E]&^X5^-dKPr=M-mPspB+$\[gXcU/84SQuTkJ$Ll4m`\1c=1ATA#\D<hC_FBe/"qeNobQ?/*2\O%S58B2C(@'*!E[YFI.!+]rt#7rHM[W$P_q0=GN("iPm.U0%)n'>03@h54iq7H[KMTVN[Hl8aF39r\Y8T\4V4d)n,bk/X>eYVn@YHT%L?T.i<72_cLL]r76eTZ7,P#hd?rMkp,rZk>aCKef]^3a58P,YI6#WE0,t#<9,)(AjG)=4b#M'Y5Y\+&RAVssak$5Z-.Xn5;B*Et.%2EH8+GkjHd2!1%n%+j@=gnjqL0q2=g&pUS`9E]<M1Kb7RUauo%e3akpoq=S;Mfg[<ar;7N+hX(-MqC.+jp!U5F8+F5V1=;H7m=YT%*L*,Ikg!*(,&=T"Vn[K%*#u#^'ZD_r<>Hse:EZ7Q"XsplkgRBV][pt$+N)^$SrkHJYMh_PG:L>TN,eTdCY4>[pN#'SILtoS\8d(>%2iPhuc++u@jn6,IV31>'&sni<ES'rdN2aM&if_Fa:%jQcf)tJa^0?BC)r[r9<c`4X)+n9Q\SL8!YN5k%lf13U`57P!&$2mo?Q)oK%-%sWEjPpdQCG5[SU>,RiF+s#RX3EE]Le-5;6=;CP_N%C1Z<6R=o(0`_Xu0BXaP8JH07CgK)fG:Hg+)r?VII&iVZZ7m1u,S<`%ic"%TL9@?O&ea$9#"gu_jJ"Z_TI`&g:lVTm\^.K@qiFC[$7#j9G#[6<^q7^\QfGlSn3PA,c5N>iC[/C,bHdb`>E&Pl9a/XVG`B3`^1uh%(d]kp$U*@0P)S@&/n6=-0)CQI>sH$Ec.$.F=cXHSF!JPJLdbl,2Rm4!N5cY`OJ++uEq1M=9UGcK:ZFbb[c$(_O-a_RjHYUKmS2*S%$8Y@eU7R9P>h/5LWnT`fVZ&R!XKg/fXk8gSUA&pZ4<'^Dr47=MH1U?&CNXJQq##SNIGnpNA%fGYDOa3mr:!D:Vh[drV$mjgn^IHI%.3<A;&q\TX$\7Y//fs:J.2<@PpZC``0*on=R@S^ef$nDS3aaI&p9-WnI9k+beCso7rmB6[a<]cLkttpC:4F%qgf7gcdr^gVX1^LE%eoV^2TKDW7VY2>ap2>=>2`.Z0r6mP.i?^!$(AR9d#7Y`,'8Di>f1XH^]I<@>_+Em!Za##)c_#8?I9gXD>j$7`0QkOJDpeR)e(b,8%[eA$kE]T2';rEA_:-XV2[28Y(\=,5SnM^fl>jU0mF1jNCouPaRqnB"oC=/M2`-V&LecGs&aVT0uq7[76WDHC'C3o9)ga;2<]3GQZ%lufY9s&d\'I(l#W.l\h3,l&TTJ'&6-,9R<teX%d[?=4GnYp$YYST!XO<i'rC,rA2K;cspD&mK!8Ai\c8caBbq!%aUbo&W__]f\-n%&%9u5C1[t=97;.Fqf1<U25Kll1u+GGMdG759B_Rt636]N`-pL/!^Eee*)F%^CmnT\1qS^uBCd$JVE'g?*4bp[<RuP#TS!u)j+`^S%D@:W;8C9uc[t\;P8Z$Yc\:3fAee%C1-@9Vc=ne?9qLtC"XRGB(0TsdL$t.b5Z(=i$1m[U,<CT3=E>lB0Rb=XmqKT,ec=JHKV=Qf#%)7bD]\>1m)44e*TXU/RslV`Z6+[=YF8S'8MX9_irA;3W8&FB&7\rc#DE[C8ASV"ne^Hf*'di1*>F<K92Cn:a:]7%_%ojZcUg/oCo%GPoY6;Bn-H5m_F6+&\GtdK#tkBmO\+jileraq"XqB`CtM(/mjRQ(]4QPD.5m5>Yk?'&uSSf+p3o'E#>3($g_F;gsnT0NZI=k)+Gp%NHKp_GB8Q)^:Y]uY\X_Uet`*G!Fd?C:X5u&f0mrhj&.U^Ykp)7!mL(>?4<LhU&'?h^u?2k0"]aDUB!)?-!.tMp4LWETg97_E5c-%%"dn#,Jf);+(ouHR(^*]3PEB2`"dhNM[&tZaYJfsQbppUooaT'q(F%Ul62ArB=oU*N5*K#Upn3#J&_Vm>b(hbCe8Wtf(R.]t')P&3%HN>Oe8IIJ):qf8DjIq.qQ,TpH!0f.5<IdBc]Si:G*?:CQ%F.94)b+]n_"AX=,hLC`6Oee9Q_%A=Yiu>J[RON:@]b_8`p-"&I[O-&%61oS=DQ#+h?a3W[<tas8f.Ucl#h:R]2cRQ%I\fg1^pnj4SfsQbC*6cr&s6Ed_"GT9Xupj0Hs[)rodcV;2h'l3E;bYkrEb-W@_hXe%SrhVm[=;FGj#.Wb21GY0?a7XS:+kc&lBD`BapgP_\A!N5rJD[X@HA@.Y$Wo`?_847EcM&87GSq:ke;'89O:X)eSehX^*1G-QcJbL%DFNpk&9.T*%4[f:pHZ6;`IY@MLt!7"qO%dBN9Z`qB6Z/6?aguENp=Z68hUZM+^Dck@Q'Bp]3^B\B=-,Y(':>._/]F2*Nmj'W@u<b%9>tglU&&on\U#F%?h"1Q,28d#IYE"5(f'WUE;bZr_gUJ5%?SORNQ3u&gk-KpYQ&8G1Tk)iM)aDI[Qe$3@SRtSh?V*o.n91N:/kCM%s,<)^iSaPIgRGNU">@ae.n91N!0=;o-]K<4^4DL486!?ti:6K)V+Y?;kf3;]#Dt0%@0XXBlO('kU&)leT`K03jRG""qRn.(Xa`5V%pPed%lW;$e>l71SrLr0G%3t;K2m-Mu\CX#drF@E)Z-cp5ldqcTPl]M*jh^F!eLuW;XBUtdNd3*@ode+(eebJr%NQcPT^*>>+g,1W%UJmLSl%QWrH/WaLY8&Q0o<^J_mT'gVldqb6q,1J4']J=Doc(hr:ri5Z4qT"cQ+XeLrJDI[Bh99Uf<7.V<kZS,iVF:aqAK(5(ZG3*%0gWmu$j5+b/.XNRY$ZK&Z`&>,dC"D\q@u4)4eao/j8'KT%`BfIWH+]uH)Pul6cO>DgZ'NB=3@(in#H0NCT:ZK`QZ$@`K']WYf."k%oB&96XZ*F^f7*Q^=*Y+h/-/%)QiMn,7CocdlTkXc@:RdL1XBQrlI:Rm[h_bYV-:L]EnY;=ZbK]dX-LfGfC"t9rgFqQ[;Xo%S'Uc,%h*r+)Y+/:8*?TX[R2K5`r_sn&q]7:`*.<+?3I1@D<1@XX4B4itK;7.m+5u$umJ#o%ci'?H`_d`E?gRbP3O5:NIN@6l]Y-PdWIB(U%q6;_3rStr<grs,<ra,m@LN@B_4jAC\mBe4$VPdTLG@GC$fk=D6XbiN+1LFp!-Zeh5L[!nb'+Zt1qid)1Xk(YSiRmM+SI]5UqSE-c%Rk&F-g9t%JXmOGA[]Q*%c$aBj@/m+S\m;;BSo9pmg/IV?QS@qaMR6XfZSf3+m@V:^N/=btC[38Dd;&]1rsEZ*6,Q6TBO=/Tl#ODB%q/q%d[_9&VFJU*&&P$eTrQck_@boeqdEV2L_C)fn++sNs0Dg*;VRb\[T78IebeBZ24e.>bgojKp*ppV4qK_^NabsMU#j,Z:BX1>K%>EuGdqQJs^b\ai0\)13*>.<CPP7.J^T9?,6TU!5e)uB7'3I.7FXTCRMqUTdH2>-h0l`_!sN?eb,l$-E>f)M8A<]dXWF0Tpl?/K[G%=-Kp#moOuZJ)4Pe%=[`k`W"<.G!,<ZHK3cW=1_q=cMH5L(1(cb<E\2S1(A`&T%fd-I,:IOIJ;%DqS)`JA9-_=?F=3_*k/<?rkqk1%oWI3OfY*lcWqARkGiL0e,GG7S:*.WUk+0,)4MDr,A_R,u8dIdbeb<[o5EcgdD'o9fS.ko:=dqVR8IAKe4&\_/NHt%QGN/#ETA)SB%cM+DIhcG<2^8[+"P&]sT".cnBJ'&;.qM1'P9DJTNLUBpup9jh*TRZaMoLjY;Zk&FYG;oG.In%Z3hPlLdA_ETP4>McDGJ5_8a\NYR%SXlZI$d,LA,l%6P"=u^g]0X\mIlc6UjnD@"p;]1pEqs65QB%"@m<tBn%a-]e_gG_)8lrh5[.DZXC#eT]h#m1CCA-rY\Lk`6X*V3;%=8d)[k9aP#c\o!P9X#q3jmrQJ@a.S7Q?.O4\MYJTHs_;3SP86;P/B"O_TYQS)6#E+[[LoPA2qh;>-iDF<Vu1=nXER`I-g7(L#9&2%;&3A[B"f=Gd7HM`GLdh([J&>2QS1SR6$$Y0YO?]J^<EX[F#J6/J1(8HkM4bgqTd(gY^(BLMn^PcH1V$fU!i,qn)E%_>;Ppo?#Lju%Cg,?TdaP!]!9F)8&HIW4:Im_e!V!e3aktsh?`gc/<Wj/iI'+P4(^WG35F9[TqZdg0&e[?[(9<:FNkH7<G)e)Dr(4'_quZ6$FRmb9%2LMXPD4R3b_GX^%8$d,0$^aY>Lme/sSAi*I+$]<ab95Ud1mrM3\bdT')L..Caif.]_IM:Z%,W9!r,oYsDH)WAPi73hM>RH>f^i$#%<Og(*l+8$]5j,a<-\qUO):Z9/N6</lr_+\[p$iAd^?'Q=bJ2h:6$faTT'U@m]N`!CGfQ_)Wj8rj".SmJ84g3C=e,g/L:qXj*@:U[%q]KBK1GL#n[(q!F`qWp\r;%,.P%k4>Mq-n5NLl75H0mP5>Zai]^9KSfr9R>e.\EN2^Ti>-d/`blYNKi51/5u09WXlm,_2DUl1iJ&%n$OP_+(&@-+i[ri3NFr<an\Zfb&(+9MMqf>Y14B`X-k;0:Cl&f'=ZGi-/,oMa%B18Xc#+Qp[t"s45%QsGp'c@eV^YcWBNo;(m]Vd%s)>pYDf7WXU?$5W3pM%M4i!QkcL6fC!9/6.AW))JE#_'3V'G0$8CNKb,?DS'ei?%5'%#MHNtUgs:7J_Vc(%&k:@-0qQsuT*]_;/:%k*]gV"U]>KMT0^e]WX+'![gmIf_Wg`A6!ff/WB^P/@ZC%DVt[YCj';A1Z09_$I?EAC`gbf\Bl&Nq><K167)rWS@/R`/b`-d@;AN?%nb)aj=Fu3dM=Kef+CZLO(L_JR>Cr-"5>BrS;BVeY)^d\CX;\_t]b`t*,M8t7*o,-U36ud<3RD*nWk'.IA'O9S/ja@Pls)-Zo]=#h%Mk"iB1Tde=jP-r3l6(p><i1_Aga5WMJC]D,6(1W)[G:XEqbhM\-oKo_A#Q2@jboR0-ul@Z-4?_K*HV^U:+]grW9ggf;FI=LR[B`3%lZRL0m<S(iND.'fM8:Xbr-V6QATqXuP%fI;_t5aEKbD#VY'un4V?Z<9#FTsfo7J*aH-=]f=L$:KfHlj3F>FUA1[f8r_(0ZAg>b8A%)l^!?Z`5&ldlGW_!g<6+!SJK]`0ZP9<]l3bAl[+DDuXIO\hN()<3s3;c<0<XXT#D=k)<;5'90XZ32SEd'e=W2SGmE=C-\=EVnWZu%N$3[4bJ)%m)6P*'j"i?oA%]&ES;@"55Mbr;k9[uE,+9iFbc8`#[\!,3YuX1m<)upCk42te;-?W@aQ+JTU9^43Xd9jfMTT[kA/+3b%F@Bau71"Yc5Z^oc;hW`eQg0INC5Ro>_t;LpQ.6S.9FddIlD5qMC8#7EHAuAeC1ijXVGY+4Fg3:]i[c15UF3()>e/pfB:qZ_VQFTG%H9oWa/G\^/6!3Co5dg[h\dKDh3"t5V,RT]!cC,,_j]9F9dEUAV_Y%=]90^1>=1pca/>.@AmJPt6TH!=;S#uE3,Ib:*ZG/=Ra\!TM%"$R`hfXDjGaAr5*:n9;ne`EVf*qCAD41L@[L:^RDI/gWh-,6B]8M@0MZ1\"$r[0sB9QG2djnr_P^aTF]oD`);$,bC;NP%4jXaYT1%DmU!X\%ci'8*<D!N)\Ecg%OsrF`Y1FBRF^q=(ejbp&*0]m#3QW<nE?ihS"jFc,NcT\hP\?<VSdGGm.j&-q0FG2p[0L##N=j2h/e.%GIt%B/_)e0=_GpHX.p5%BAD;h0J@hmR2h]#^3_q"Zi;m(S%lL.55kDe0K/[<GVh>YiH0.B@XW46WQ@$%\Ef7r"^cn;YAYpU\!u=m%f=IR>eiGE:?*;F:mD!#aMqcG&mb9B&gWcqYa]@`eX!P'"$HnC\]5CPV/^CbkiIkgXD*KChRD8R`FDUs;qc5KI0;i=/Q23JamlgU=%Aur<#*[\4BrI&MEp3q:go(_`aD!l$]#4[(=;lPW>dcdc%64"bFf(YDp^-;(+JP+h!V),]Kl_ctcMc(^=+r-Vi`HJ)dFE^n63s72@%i(eK/`;p.g*"XiJ`U8Y9N<M;H]*n1bR^Q0s,VFGml3:ABe'j6Q@<#>[)VSu=]UJJe4ulOl[:T?E]qBfKpAB?(5L_7W+f!'l(IIS9%B6?sK:3qKAe,/"TY,Go+(@X;o_`P7U&YPZs$e2q4mR7!"8cF#%#XW+ieiPTDE4@V-<T`PK+24dHSdeBgGZ>5h$_gPI_.c",k9gW=%iU,]eC\['A2OiKg`s(85R>HV8I^S$hSP4@_Yhr9TB*SgoM`C<H)W,1VD;59K#OD-3X%5=8@V`efLQ,k:R^+W>IB&ai)ju)!MoV-,%/!$#42qF!r^\PE['CJ#cI9q9u,&WUNIQmWl3QYsA\2q<gYH]U=f2$gE05L0"_s.Pt[IB9BI1eqe*n#qji8<h[-\Am\,sN#7HcW_)%rmfg.C4.F"J(EnVp68-tPO'l.qo'3"?<hfdqsrGg`,$?jgO#T'LN*!3a6%#84r^['7/#=N^60]C]p!#78R^(qnN0nIPn[-TMr2X^%Y9\/T?12<d=^.GVoe'<92Iop(4>F9(9Pf.OV1IX$_*ClF/K@j>?IltJesUF!"qEEu^anQlmOWUpCCdr[MH9%[jb&`J\h+o<X0Ke>%M+qmGl?/s)k[hH-2.:Eqmb#[r8!a`mA<>TH\')g";)rI0!Eg3$PKQ`#E7nBpH@,-@Vt6P?Yc*hb=d-RK9P%U4p4EG4JY5c:3YrDT%3BE*mVGua<;!$=?^tdPVl<N@iQ%ng?q?Hgg0#;a[$%tSl=TYl*1LKfDa<Uc#Mk5/*<o(;c.e'(C"C>([!K?/99@C+pHH*M!o+thH%na;MU@<ODC6IBojKgL6kSp%)3_N'k1%TX>U43EF;1-*sq*=9S:VD;2>@N,a@cVmR9eX5d*M67$c_VQE$+@6>!^(J?Y62-Y@d"VRu%JPOnS%:j?f@1r^cU>KZ%I/aD=`pmLqf/*dob"=M\IFT7S\d?+4;`E0Xghoq1bnN)ZFIRtY`1>St`iq0Xa'O%Z-;*]\4^X\J0/3[9%qg"qr[O]%7U],FD2;k(`gQC@.pCNCMdK]G/NJ*cMHR^mgA#bB`%I=%0mFp=V/;j?Q38\.Fa_no=V!f*QMr\h_8!Ma1lD%KA`/#ak%"b\9'lt>5P<E46EcP]th">lP(l*n:9]'`kmSH"e<J'6s0Hf6R&'7BJ*2r8qdXC_2N.aA!17T*XeU5jX"c[LkcPMUc]^[/JZ%pg0E%A\Y.5'o+b[lu+T_h%&=8`nks1mO]=RLCWL,07NinQjbKTk>T%h_U%\#YALptmr^R"llU&#GdEq<hb/UEfJs\=r8Grqe+c_QnE)]i%8,iC`\9Xe)qgKU>hq\+^nU#!J9t<Ghf>#cZF2q8RGJf'jpp^%7/`qKMY5cmV.Xn#0DuMG2i*S[;=jf[sfZ]+"IsW@WmjRZ&7N9Ta%m\cI]55s=3S%m.WMWS*>P7:5rq.K^k\l^&%oK+nD>p%+>YMYt/UqIim5P/o$*5&ejVThI,0C0tc=_tVoi7%^[]d=jhqIi'6hu;Pl%ld[\9QK"TEosVR6GiOFgoD[e;]iUMY_(>5nIH3KkWp(e>-67_4^[3?5I.QHDnaRV]pEu#O"O=`VM(-R+O%73F%Xts",4U7Y]Q7HK%-=2-/CjS[M]m8cCSef(Bjek?(U(2XQc5eM4ge/3IpC1?DM_G,.-X984QLt1.mlku:I/MDC^V9O(l.'.Roe5c>840TTGG!3qI,mS<%n]f[83fC?-o5Tfgs.8bOe'D(*2h1el(EU9[qqnj&YIsV](I!35\"EX<pHS-D-,'4<P\20.2h-WN]\ZHXmc!7gDj3GuV\]p5>f/[O%G^kPJLG\`Q^IQ06Tc\F!&,G=EcWS7ON;WGG(.B9mWh3dNp]"5TnDqDm5#[=<eYAJl87q+Bjb5AeO<-HrpA=?eO0s"^A:^eVGGVZ5%EB@5t=#'AsGkKq^I`.+%[HS`*%dP%i'`2QeIZE=J:9&O3h$`gI54Vnfmh3=/Du>XII_#B6r9\`0H0(UnfDb:(n!IMHi]U.*WO%]c%R<uaHVFU94rg+uCT)@O"lfU3Y8G5I<akIn[IrG8_8#GnLjZe1d5Q>^ldYmFGLT`l<e6Y";h75noH]Po?lPCD"+$OrApp4V2O.SZ5%o#`'8?Ut.Uc]IalG5UM5);sbCX1LLd&7.JhSmC/tGlO$^^OGj^S$,'Rr7T+t5!Sr^cpti5IIPggLE@UKlpD]gPJ^ZM`]^-FoV34B%^%%0iI!F`_YL*;5qY'3N^XAah\oPCW?`on369fln+9%K'nn3Qg4f#tK&&8"T4+)njhn@1H*e!SX&48S"f#$D1_Eoo/V04g1(6?2X%?S>jZg!bZNSm;6ankSZ1UW8SE4hc0Ns5)@7IeN-uiU2='YM9\ihu3K=O"o5P21'f]Xe&CifLD,f7MkAZCnpWM^4.&tXrM3ai=K9U%Q<#diFns[!lO*gS8kXiuA'/@MR.>L3\M@85E_AE[RG-'M&e8M:7IXPFQ:-q*;=0`u[1a"bX>Z_Cd[Xp4ID37]Ilc?JA4eC]A)"d7%6[Uj?Q^^G-+Ce.cgO)&:W2"G]qN7OMAj&R6gX[caadQlCB!hY6P3+Tbm.8L#Ze5!"#QL$&r[Khe?*tjDn;Af@b_L,?88jNk\k%/,%O$:QSa0K,:Q32XO4E3:_;'q)h$oom"jpGQ4_DWeaF*#=E@fTh/Se@"-,j*rTH,4kl%?,)A28sTHKapWAIH)Pe,rSo1KI3U!Z<mm^%:K['?fMNpneHMPX(@9KoFMaWAS!]rqoeO[6?I'WZmBU'aTePJ29Y?ua["Af5/g[=;[*uN!+u:@;<#DC`MOKK1R\^D'kA/]^:J,KG%_O2*EB5GqKA'7"Q2@SZ$fiM[AFqdNXpR,Y<@P^s<?*B2$Is*rW+1mS-qSJ%>T>Q\KfnMK1"fKQ]ZDM07;+(-06kdu0XtPUuPH.KP%/0s@;ka&p85)D*!.94P:6;iDo/VFVF#9eYiYKXG(/1&G>PF$o;a6L6R&8$L;6WE;fJH^*=j=We7rXXr=6mXQO=bnu"=Us2k3'Ebn%&gX-n8`398/kcr+R7\'BM(M6A7D$[ThuPV-6RdCl)[Qbr"+*A3Ag3V#VMN3!R&eU-MmlL5@;e`I9,+1GBHtnirg-&"Zt$;M0Wc'>%5]]@lN97e>Ls.;u&A?.g+PIW^*FpL35Ru!K7HY8]OaD^8`l'KPk&DVP*O'poi7UAK<TO&:_G32T.^=*5MTQD[!QucD,BXa.Sn(Bn%1%Y$ZQG%B(qAR"cO8)JiMm6B1iKGZ"4A^U&F%@q'nQ@iLUbdU*3\=7YHtMf=**:2%#p_R#PW-%53'!?RRO$BlQ"qtIaRo^ZJL^K5%X+i,=@"h'SJKe)"\\V#V,CWI"Z"(_5?5ner9.ZfgLu<6S*j^6k84+4dh!Y(S=eOK'33ns1a.<ss8SY+iHL:Vj7J=_&@%+o?L#c?^%<lZhRJI5_4!P[hdA6Oj3E(i=647?2">`*sWD>6LHh-iPb6CtBEjhAIEc"41#\=Jdt)[pct*o()S;Q5A4l9S,Na9ARtoek,mfM`Y^%:PIS$["Bc=l0<J'SdFUins!V%PT3hW/EX;)nmlLp6#)!g,UE%d(^]gFcUE"-&-G6H6dZQ'1\N%q&NU4g!M]rL_0JLbJtn5LZTa_0%5h'L(RD`TEQn$PkkNti/H0!q/p($8m&0`9S_d41*\B;r`&r(IM:/0qSDBa>,OaB]4e;8D5H4^D9U'P)DX?PtfX^5aI(aC#hPO%XC%2GM"7.m*ts<=-pXM$kb4N#?'b;C,Y0/B20]Cgebl[0S3]QDeJ*``>l/"bH_]CG7M2N!R_?##&#/XBA%\8FkW,M'fGPCLJ^\_S;8&%=PWt.!_.@BQFLGfWa`Vj-Jbk*efn27!A.a971jZ4"pT-Z+pHaFW"jRE9Y50.NlO==Xk;@AgC1o4F`Wq\e%l`N`Bl<le6u6e=r=59%=[Ed3W^7a[GO_#ZbS[3,A<hNVKdZmi1D%u,dYoGZQ%]@H7"qIW@`\S>prnGSAqV:Jam:5^>r65BK;k)5P"h*DQ4.RWK7=A^3=^\M%S63:uCE^\o3aT8Y/rsCN?sm$$]\P]L-SZiL!aOq%n@@+Q@-=eTi:sZh*"d$iPQVam#fYO%aX5\C&CYu8a;./Wi^uq'%gF20S%Lp3%&B/?`ffh,GpmD2L_jVS5,X]9N"Tshq7d$Ne1q'\:R^0'=?!i]fl+Rra.'1Y#W[9,P_BqV?5fC;Hqh*(Dd%;<4AVBe\ifR7f&14Kd%,4\/\]84=g39(j'c@3_iU-@WWWekg'.3'FgB1Tj*PgA?98_./8&n$oE)+(>9WR7)(BaS-<*YNDmagr.jA/6V]5ir[fc8t_Wjq;L_%<C4cIM+=>^XBR"&=S@JDJI>$npf^nN*B'##OTq;K\`XQO&4#Nj!7@@[8_f23#a2u54N5=ZRrj4AU_YV<1$9r#CE2Mn`'d7eMc-`l%Q&fg?&`lGED$V#464.g_6);e8QpP&;=lLJ3(`,Rc3OV8=3ts>nWlmB\dZNC$?%tHDaK?#9,0n5Se5chu@pg<O%7iO("'s"aZta%l%g28K!J)?hK#hZ2KSZ$R&Q(`cmE]G(2#pE"qAiC*[/^%W*OcW#RcPAnr<+R6iSKn5&)\Gn^mOQPq@D_![32A25#:dg&<d*l^=L6*c%@s9H?en4;%nWO%>DJ#ef#X)u<PX]b\@d'<e3ju<og$\NM3LD^]eg.HMkLc[J)S$Y-+ZN>0$>qmL4_W!VY3^m%Ub6>F6jRM#Y!d'1%@@3\+XC6Q-4JAhARB3f_2(Ju/9)I%J<"gU0A1FG00fLg!fdRs]OE0GnTj_TrgorRXq*i()!,eqTQ,ChII15/?oO+,PV(U5m9U<rD%#$9F#KD0QfEC,T)EJeNV'9V*Wh`gupld>!rU'`VN)02u$qALeJ'92VrrbDQ@ho%$@Ltn,R15=5ND"N3/[4Fg<nLs@)?)QM'B:nN&%PBKk4kpXhk3JN\bSgnM"i";s*X*7O\2#lVZS<6di/uKs<IYW\oOp2UlU^>0eC/q:,*nCphD`'>FJ/!-eBSas&]T$S1nQ\^RAW7]h%OP&i!73F4YVH'kY*D8tJn1Q]R,G`m3GJmXJF2Nc73_ZP.6Za%'T^7:?V0a*0)e.!V-ug[_!l\-[re$iJ(P(e`l=jWlQj>9@7H5.Q%k:Nt*K#fP(@YEpI77s)(/'C<]"\5+h?h.*`+>Tu2C%_l'0m5n[b=M9PPe#\&gopc9ah&9Lm213-%F`H)OAq`ipY^>\X3bj7>@XP$%`=H'!Bp[Y`3cq?s]J+0<Hgm&W)Ip6IjW%C08YME"/W@33P3e`,ojLA,M\YF2YREs1S7TmW29G2WP03gA1h,2n8r=Y;AjY^SU=i,Y%Fe;+*0CW@.2p"@?2$Yb:^tooe2V)n1!,4<X(aD%*lC?=H,RA=1eW(j0C78ONk\Lf&GT(YB?lHnQ#fH%1'H6U5"INjY@GOj)Obd_i%q.Nj2M!s=u(I^$OGAGY?$+7t$cjtdb?Q%rr.0tJ>k^#*Q#n5r_.7\/NS7hoDV8l$;6*q7OO"$sS%O?%b*&Ud>YH_8I]e&6!WQa4!%3sm]lQ_:`aP&$0[]:&?&M7$)_2[EPC7lD2h+bA:_A7-YcBrVdGa[.@?5s!bnku#9;:'IL^"VOpAk>MQW+*FN\THu3>CE/sCADZC_%O_Eq#;[j-nca,PaR&7?LX1cW"K-d/5'LRb)WmQhFP.kOsLotrM5t@4N-'VB*n>^Lsq@dP+-!An.'SiJ,EHS1`3oS4)k^=?c@u.dJ%qK]#4[S@U-\b3g/8dn+NJrqsh5R\1"g#P3Q\q451)V)q%q.=7XaB/u!%8>U'a[59`f&W%(P6>q.6msKsZ(o<NDut^rb91!8YcLu]%%q*+a;]l*!pcQ2Nc@XIqHfcaL[p4-gB`Hb(24=XXCa.t<gdt\EnK8R5=*!UdSTOG,q>%8_b38j3n^H^^F4@f6NhmPbAZM<$$'"6$%aZpbqY'GegNMT,o%J'u88'+I`VD/lI0QP1G;lO>(Gt"eJN$Z6Q+R-ei@Zd+b,fCBF2!D`l.]!^D@"9G&_H<,6-jY[AfZ?;aBX%.u%j;k+5pfWhFJC%9%Uk6oMLV=`[LeVHk=a[A`AN15/c\8WdiNStC/[0268&UE];dMm8&Ne,Gr!_JBChbiH+N+dlG2:`jl*OrJlaQ$-%Cgdo0aqcp;MbjZ\Y/a:=CHEbL=W8F!Tc@3IHSTHkmE*uUcsZgZg[fqbmOs>B#<?Na-Zf9^"2H%"q7?[18*%n'7Hl@.8R1PIPNIeB%Vi5br\N"(J'uWWULPabjaNWoYVEqqaC$>IuD]+I(;n08)oEuUd+"'GANl_V1>>u0N70\Cg"qcLHIa_,No;Ko33Y5,F4JRUaSLd8#%8epV)HH0b\a1=Q7+sAOQIr^'/01:j<FA?Y*-Y"3Ym&V8P>)I-<.V@obVg>pnqSj+[$3@dOGS5rTf!\\N1E9aYM6fK[k%l_GSM=!o%inCfmMD?tl0p><F_&;@qDW>=C3B=DcR<-4s6I`T=VToKjero#bSUmU)_FgAME.DCqB4-tB'q79@f#(+NH)fqar.9S7bO-!?`-&Lf%#1A?oAt1A0j(bft1Y>O1\!]#pb#j7dMNCf>F3Sg6Kh\Zm+gC/I25?q/S9-na3oWJ4R<-M!b@nfEE6=#BT'pfV0Z5W5]%<3-)e<R+%"riu:JM_H1\]&)njpVTEi_&O\S:U?:o5Xi(>ZFmiij%C+3.o$mVqi]F)lAIu_)-.djDB/t(p(t3,B:Go1=MqL&@q"lM)-Y\1q=p5%8_#.^cC57unn&!K]\-\]2tPh8bsi4M5;)tqH#T1Dc'8UD*-,aOEAlHCS.2?P1K[!kXkTssIu?m]Y:oD'bS-[TT7+$=VDM+YZDU$E%d'L*W\I-Zi&A@=[dS=U(CT'0bj\/kbJ.SWcDkp%?JE!F/diE!5((QSKjjk"(OdlJeH>_dMK)q&q96N?>,1@c"WMluQ^9CR6ROMH`%D6^liBL.tN0mX8HB`R!Q4@5aG;^/?s@@'U;Mb:j4JP6d55iaU$B`mFa+'X]*LHMH1[/r/BGr_uuo4L0cZn,^AF@dF-I3%hZ&KSBO%KfHH+Uut-(:7I]"DgX%>)nB5_)0/rDj_#gHQ-<]O;mc?3K=WmWX>Gaii9=+"3][X,k,DZ]'5-c!HkE#3M/\8[Orh0IMVW:%$1>./%+bS:4BPsKD.kY&AXE>J@aH!5Uc_TrL]!d3^5e!#B=`"#m>)1AtA.o7lV)NhN-^MNa<aD1B6q5:%f&`l^A1:NR;Fto9+i3[pWPM'Z%;NZX4BlqX37VJQ*+i<eNP9!&oUMJr6bnr]XR:F1PF:,-_[C`-U\YR[)*JECn[)D.I`5FO3is032M@<43"r*Or2rqrdXYdGa[FEaJ%8Hr_j\`Tau5,?HI$(lqAUQ<kHZ]B09Z]ER#g;aMQ;A!+MUZKTVC%4mn3'en1MfPoQa,/'j12;_\S\TuT[p>J29B`3j_U`,RD%@KG%,,`Y59_6Ad#[/a3&qP0YR^:^-;b,k]hHGOE/j6Se`MLe=b*=bahZfKsS-rP\S-IG;:*B,!a_46G;,s&>Ag\rCj1M7Xg<$m6g<"%_%]ncbWjt%Td.jkl70iokQ0XBMLoq[idXI&8"O^-iTTWH^OS4'N\hZ6rQU^sLrm*o6?H"Jcr><*.u6HOpq1FM=Y<6-D"CTZ:6H!=il%?o&\,RQ2N%jA<b11ijRO2KKd1F)e;K7Kh#]S/>1nk3LaH#mm,i\@-G[)p((n3?bq=Z3%EGXmLhpS#aNkQ*93P,1m56c6hWnLad$'%U@`MY$"Ri$O@_Ya0YPh3_@<QQMJ\I.cZu"RC:QMNIXfNo>(#u,<B8i_naOq]*&k"o00I"!&KHMDQ,X$^E[XML5XHRN;gt];)YOF0%jQ\lHkn)97OMf?],B5N3r5-`Knl?-Z,U%@IgIJ!&;LQuU2<*&0@/ELA</]X7+4rIaYA#:6.<?ikZV:iQDnXm0k(VO2C$Riqr#429%Kn6$bkl[J^BNbYPK[".*(ZrWi?ig+0o"N8^[M^rQ^P(9?DTsQ0:l+D-1h_$eaO;WKb2\uUJH`c2N=mn.o8+71<H##KVDT&DP=O#n%*mAqfgou<O]XhWC+`5BLbd<J>hSKIsCSjDnXo7'l]>be)PVR0h*n]0WlG$jT%=jTpa4^a@h#CpI+_OCSC1nH?h=DOBFu(IK^fkS`%9%'/@:jm+tfJ.)(^L`[LY:o=3,+J![C?_\[kI.VDNq#gb0[^B%r-)WA=kkIGb>==j_NUhW&uL^R&_`Xn$?L6NBj"B,$J&]j)!8V&%(e;2<lj9m[i`J">O5&nlR%Xg=+nkB?.'a/"%:Cp92AqXXfLFg?-'HT"<0RdF-C4j#6=]W@O>,2%2mN\I5$gQ`SS$*<5uhila.n5X%8&e`*E_s;D;+FjCUt$U#UMoKIZh&GLQS@NsT%XEN>oa?s?>NpXK^rNm-#r=5MLmJh_u5"H/)Z6b.4kf<V(Z=&610,<XpjH4G>Jf*%;lHd^g<VM*F/os"E:%@+VZfAS>31Kh8c9rO:l:f:MZ_g:X$LFhdc#`#d.I]"FVFs4:cgTq9OunC@Soc(ga'b&4DL:&Xepp1PsT(a%9#0[LR7lF,c]^lF#_(!AL/0CUQTS.-J5Kc&-bU4.?.=*CdUA8q)+-2LjC;toL$3!on"Z86"rEg7B7PYLY+u'kXjkQ<P?sg>eu!?)%Tj^?(gMSAQZkh.g6``Uu9&-O+GH6N2O]%3_<0_ZXf1ZQTqm@:&ahh;Ram!S.CHY+>]1UTjAbI;]ST!q.5ADB!\(We&Ur/r!a^?L9%pni9CX`T+kC+45Q>"Q<@K'jkVf)(t-KrBCFgsOf]FPY0O^7eCpre<6iBq*/toSM`i(g\L!@AfkE\E]B?.]'Y7%MWMifgg%b]@#$I%d\qQ=]f13AB>^`SXK]@6>SToQ6oPMT-pNXXqNT"6=q`H,)[6lGZE]Xe[GeZ8`:\Ni?9Oi8I3U,dL)u9gZWn2\f_Hs8#OClf74D7=%P1,SUg$sfrAO2+!1^^]HZuKjT&;i+jKpT#o_Sk-6[kT6[+g_@ZQnDml:p7Q<_CkA1L4s#orDU^@GAWtI8V%lIpEI'rW#_ZbrhLq0%IF;="7W>1,KF:3^O`m9.6X/3b@!9d]=l*`2T$gl[?lcqljtqWgL_)Z!Wf9H)"DQPNmN]^7e0''&BP4&f&JmZ6%os,>9?6]/-4]L#%D=Lih@J"V)AV.J#@:IY+-@3gcb5sTM]ESRFKu>gXfUIJ+esa>#YhFp!`,tt,"Zgl-aPC??2jt%%-TWn4j"31?6]sZCRbQIm%jWe,%4/&>fp;u(A;@]n$^)&LK;0-B:YR:ej?lR^j)^d\\$R'DX5UV1CP+$uhf@V>Yi'*fj9M]4R3,r14?m<#tK>=nM5].!5FrTV?:9gT4%*1?mUF.Q!fbKsP7J<5C=5'fRC`=l1"De9o^\^juZM24:\`cXW1aNc4t'?j:Ln&-8;5XM[oM9t@\,]asH*gNPfE-\r)K[(R]D&?X,%!@]9^b:*GuV2D^%H8(qKijrA;.8A2]XTtpXkk<jEmtE1uj,7,E/k13a[(BL7g.m-<_4:KVcHO`BJ"h7!]G:7,l#lQ?Y<W)80=p\>%qi8%dm7@tLde(Zq"ad>`Ralj1=6ubDqh5=[VqZ<&"2+Tn_CiEJ"C+lI]B#6Y7PQ6J^i$bMrkrhlEk5M0>c&A(q=T$.?EoLd-+^Q6%4VQWg;882L^fQQ5.1=+S^i!(\OIGs!dBb'j$E\R?!-19F)0/p&4[DpI%PA,Ok>;9!i,'0T[Q,.8`-@u$\BDE0\cpFHI8!NKT4+Y:%N%iPj?Ga_]NKqK+oYHPXQPF(aX`(a"0UG:STj^M"nl#8j9*f7*HP;\V;LL;Da:1?MUGnrC#.&)sR:lDdR,Q:n_dF'`6"A_;8g@R^%J]U6EpKuPY9F0Uod0`P[qJnF3*KeGq5#*>aK"NC<,Ei7/kY5FdEe>_,U(.Pc`(b'd-A6?qqQ^0<\Rbs\_j;6CfEtAkOa<lqM)(l+%n;LsR:Dr2reM3I+pW86TUGZkrJnV7!`o0AF>h`i6*-rsXLHEtC(t?aJIZB*f^&k9:ZL-Er9R+jX;QY5D+V8[hl<&iR-t^mO)V8q#%%V&km]a\bpqWkJ>\`fek+]WgVbgHMCqdQM3#k.!s1Wh2`3/:/Zi2'<A9FBUVcs<Y0q':&?6rdp^I?OJ;*ljBVhGqlje<c?F/DXOk%TGJe(4/K<uO6T.o<Tr4^KYOu_Sl:SIbJ?SYD3ST<A@9C&[>X#(Y&S_^nkdCD;Ke`sH&Vn='IY>S]oAR$P1:$#2[40&%#-k[`D&$0%6kr\I4\?U\;1sW/$!aPgUC'&47I_:lM;&0>\nH!TQ00QV(X/-qX`!?9l(ZakPoi.c?L*kuW85mpLsY!J$6Xs6*H.$aOM.,Ld,S*#%4uT[ocu4Pn;QUjb79sdj0>9O!`iPhY*<"!^&9#>heT?9%O;k:4='(3$I"SB`OOh7)EJHUL$$&m@X)(*h=d;"@S6Oe#(jpBk((V,K%maH#M?UZDaQ*ckr<8e`c1^+WNZZ8IUpu8pAa-8!Z:N%lG1;<S"WZfVgcZ<fHFqdMhG@N]%AXj@I`U'@5jZ^#*'ALXXq(?)+FKlZe%.j.U8>;)/]85=3&baTPs:@`ccYD3,b-'`nUS\:?^9i<^84]Fh.I:on*L8RAE;+ok0Ya*,crGGucG@DeR[Em^L<`k4QmmI!_baul-%gEl2Q@U#%<$.s4(`Xr\"?:<&[%?so8G8t<ko&CHtf$*RbgL(`!97&2'g^#5*Ig)S^g76HS/2/hlPgQhNj=M4>R,Pp;kp>[_0O"A$%Y)`3'7$_^$O3qh*JiBB/UJ5m5!D&*YOHj9Y9N"Qk7.k*USj9S`\<11YWKrfjS7"6#8J3:?IVF=p?;=%tb?J%25kt3_Cj)fT\(o[t%14r3g`Tuc&B%^c^6SlpJV&O8_Q51@+jhaK!M2?Pa<J@=-6t'TJL@9R`HN@ki1UT=mPZ(6Ah$6k6'(Yk^<bdJ4N_L]38M(aa;G2p>%C5Et=@a[^m!o^4T/f1W?\Qme8pfk+s`PcWic?[B=0YN>&DOhP5\:?JE]VD*o5F<BAZiYM[[S\&`,;hR36rml4@<*O!-5qnbY-skb%,\`:,<0(2-[rsRH%rVQG\8Q\&UHF72-`8s_?Widkc\jCCCiX:RFB"Q4<\r2mbbbgr7C+k8?<N]hk/EX[C5t']d@&;S[pNtuIXAcm%6"qMG9-^<K,r>0p8g\bWL``6Z%1!h/Olij#3cSe<(VSTXmS_a[p%\O**BL*9RLNGu35,7N<s5*Mk.4%$goi7bn2Jq'l#9YVn[Jgk%9a=PqS-RTIQ>mBa>t':AqF90h>:OF1dfhLMS]^_b3OFe#U'+XA>h_D[D^2ku71$j%W,5.(U2*-p.SAVGDU^8F-IM?]X##B'#.$rH%h9G1>At7@U_E_DDoSI"Kdr04t_B:Z#2qTNMcqI1)ePVLnr7./!K;9c4Ru9oJRXE;6/P1%hHYbPGcn"4K@7M->C(^mn2$qLfXLBnL%/cW'm^AQ$g<__QhXllu&,S`786cT(3gP\Jp`p@)c9mh`(0@=#<(h@Bp_=X0]-F+6_>&LnA7FmWcgSBi3i>GPIXpOkr^Ki`-&I?Wi%XpI!s;EQ\a:G\3?g8m4D"P@lh0S&BpDc:q1'R8S2X2A+QaLL5O,OLgQ"#,1pH^5P",dEnD5QJ[sUa\+hpYP(@0H`e:Nj[*8+^/J3%R$JV?,c;eP&o$R1'VT(B@/L2MVTcjQktOf-M7MA1b+a$5%FI4h_6hL<R3Zk)!Wmo';EL7$!tuS(`dP.5P\^Ej`W%P+IkX:qN6+q8%^pM1ub\LAnjWXeg0]Hb(9SS.%A,sWO(#,[S[Eu`i#(t,L_hN/rJS,m$0s38ce!'V9XYL/^@K<gW!2r\3%&)V:G#5Nbi$^>tA/6%@%N/J+g4?q9Y(kmQUio;/Oo9(tc^B"-bCCI]6Hpn9RqULIVqREI$RjI\G>noHgfJ$14KKX)Tfs(9gP)/$O(?F55:6q2=Qp(lu7T2+X%'uMPsSh,lHH<['[Su)WFmp];[D>>0)(RN,Vi%<07;J%0'/I5pFR`:L)YDLb>mQ"],kU"s$1>[$.+!$GG?uGTLVY&/G_m?66df]D'%.Bbo3P^f1E]mEh)melqAa,f*Wo&J&f4SnX6nQ-f^oB>]6ZY0&m"HU9iT,\o%q<4l_5QC<%iN#1kr[e\-A.64okI"[1IeCH;aacV~>%AI9_PrivateDataEnd